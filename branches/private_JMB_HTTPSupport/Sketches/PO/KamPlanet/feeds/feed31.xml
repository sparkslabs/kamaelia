<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'><id>tag:blogger.com,1999:blog-14276139</id><updated>2008-05-20T10:17:42.539-04:00</updated><title type='text'>Frank Wierzbicki's Weblog</title><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/'/><link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default?start-index=26&amp;max-results=25'/><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>38</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-14276139.post-7812979013216632122</id><published>2008-04-24T10:16:00.009-04:00</published><updated>2008-04-28T09:33:54.832-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='django'/><category scheme='http://www.blogger.com/atom/ns#' term='modjy'/><category scheme='http://www.blogger.com/atom/ns#' term='glassfish'/><title type='text'>Jython and Django Progress Part II: GlassFish and modjy</title><content type='html'>In &lt;a href="http://fwierzbicki.blogspot.com/2008/04/jython-and-django-progress-part-i-dev.html"&gt;part I&lt;/a&gt; I showed you how to run the Django dev server from Jython.  In this post I will demo Django on GlassFish.  So starting with the app you had running from part I:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Download a &lt;a href="http://download.java.net/javaee5/v3/releases/preview/"&gt;preview build&lt;/a&gt; of GlassFish.  I am using &lt;a href="http://download.java.net/javaee5/v3/releases/preview/glassfish-snapshot-v3-preview-11_04_2008.zip"&gt;this snapshot&lt;/a&gt;, but a more recent snapshot will very likely work just as well.&lt;/li&gt;&lt;li&gt;Unzip the snapshot somewhere and put the resulting glassfish/bin in your PATH.&lt;/li&gt;&lt;li&gt;Download &lt;a href="http://www.xhaus.com/modjy/download.html"&gt;modjy&lt;/a&gt; and unzip  it somewhere (you will only need modjy.jar)&lt;/li&gt;&lt;li&gt;Create a directory that will house your webapp.  I'm calling mine "webapp".&lt;/li&gt;&lt;li&gt;Create a WEB-INF directory under webapp and a lib directory under that.&lt;/li&gt;&lt;li&gt;Copy jython-trunk/dist/jython.jar into webapp/WEB-INF/lib&lt;/li&gt;&lt;li&gt;Copy the whole jython-trunk/dist/Lib directory into webapp/WEB-INF/lib so that you end up with a webapp/WEB-INF/lib/Lib directory with all Jython's .py files.&lt;/li&gt;&lt;li&gt;Copy modjy.jar from modjy_0_22_0/modjy_webapp/WEB-INF/lib/modjy.jar into webapp/WEB-INF/lib.&lt;/li&gt;&lt;li&gt;Copy your postgres jdbc driver jar into webapp/WEB-INF/lib&lt;/li&gt;&lt;li&gt;Copy django-trunk/django into the webapp directory so that you end up with webapp/django/&lt;/li&gt;&lt;li&gt;Copy your mysite directory into the webapp directory so that you end up with webapp/mysite&lt;/li&gt;&lt;li&gt;Copy django-trunk/django/contrib/admin/media/ into glassfish/domains/domain1/docroot/ so that you end up with a glassfish/domains/domain1/docroot/media directory (this is so the admin css and js files can be found by Django).&lt;/li&gt;&lt;li&gt;Create a webapp/WEB-INF/web.xml file like this [Update: I've added a new init-param block with param-name=python.home and param-value=the home dir of my Jython dist - Thanks to &lt;a href="http://www.blogger.com/profile/16892115358256351482"&gt;Tristan&lt;/a&gt; for pointing out this omission]: &lt;pre&gt;&lt;br /&gt;&amp;lt;?xml version="1.0" encoding="ISO-8859-1"?&amp;gt;&lt;br /&gt;&amp;lt;!DOCTYPE web-app&lt;br /&gt;PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"&lt;br /&gt;"http://java.sun.com/dtd/web-app_2_3.dtd"&amp;gt;&lt;br /&gt;&amp;lt;web-app&amp;gt;&lt;br /&gt;&lt;br /&gt;  &amp;lt;display-name&amp;gt;Django and modjy&amp;lt;/display-name&amp;gt;&lt;br /&gt;  &amp;lt;description&amp;gt;&lt;br /&gt;    Djagno on Jython through WSGI with modjy&lt;br /&gt;  &amp;lt;/description&amp;gt;&lt;br /&gt;&lt;br /&gt;  &amp;lt;servlet&amp;gt;&lt;br /&gt;    &amp;lt;servlet-name&amp;gt;modjy&amp;lt;/servlet-name&amp;gt;&lt;br /&gt;    &amp;lt;servlet-class&amp;gt;com.xhaus.modjy.ModjyJServlet&amp;lt;/servlet-class&amp;gt;&lt;br /&gt;    &amp;lt;init-param&amp;gt;&lt;br /&gt;      &amp;lt;param-name&amp;gt;reload_on_mod&amp;lt;/param-name&amp;gt;&lt;br /&gt;      &amp;lt;param-value&amp;gt;1&amp;lt;/param-value&amp;gt;&lt;br /&gt;    &amp;lt;/init-param&amp;gt;&lt;br /&gt;    &amp;lt;init-param&amp;gt;&lt;br /&gt;      &amp;lt;param-name&amp;gt;python.home&amp;lt;/param-name&amp;gt;&lt;br /&gt;      &amp;lt;param-value&amp;gt;/path/to/jython-trunk/dist&amp;lt;/param-value&amp;gt;&lt;br /&gt;    &amp;lt;/init-param&amp;gt;&lt;br /&gt;    &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&lt;br /&gt;  &amp;lt;/servlet&amp;gt;&lt;br /&gt;&lt;br /&gt;  &amp;lt;servlet-mapping&amp;gt;&lt;br /&gt;    &amp;lt;servlet-name&amp;gt;modjy&amp;lt;/servlet-name&amp;gt;&lt;br /&gt;    &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;&lt;br /&gt;  &amp;lt;/servlet-mapping&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;/web-app&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;/li&gt;&lt;br /&gt;&lt;li&gt;Create a file application.py (note that it must be called application.py as this is the default that modjy expects.  If you want to give it a different name see the &lt;a href="http://www.xhaus.com/modjy/"&gt;modjy docs&lt;/a&gt;) directly under webapp with these contents:&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;import os&lt;br /&gt;&lt;br /&gt;from django.core.handlers import wsgi&lt;br /&gt;os.putenv("DJANGO_SETTINGS_MODULE", "mysite.settings")&lt;br /&gt;&lt;br /&gt;def handler(environ, start_response):&lt;br /&gt;h = wsgi.WSGIHandler()&lt;br /&gt;return h(environ, start_response)&lt;br /&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family:Georgia,serif;"&gt;Now fire up GlassFish by issuing the "startserv" command&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family:Georgia,serif;"&gt;Then deploy our webapp with "asadmin deploy webapp"&lt;/span&gt;&lt;/li&gt;&lt;br /&gt;&lt;li&gt;Navigate to &lt;a href="http://localhost:8080/webapp/admin"&gt;http://localhost:8080/webapp/admin&lt;/a&gt; and you should see the django admin app -- note the 8080 instead of the 8000 from the dev server.&lt;/li&gt;&lt;/ol&gt;This works pretty well -- though I've noticed that there is still a redirect problem when trying to log into the admin app from GlassFish.  If you log in using the dev server from part I and then try the GlassFish version, it works fine.  I will look into this bug when I can, but I really wanted to get this post out since it will be a while before I can come back to this (JavaOne is too close and I am on several panels (two with major demos) and doing a one hour talk :)</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/04/jython-and-django-progress-part-ii.html' title='Jython and Django Progress Part II: GlassFish and modjy'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=7812979013216632122' title='5 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/7812979013216632122/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7812979013216632122'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7812979013216632122'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-8700301317206016691</id><published>2008-04-10T20:54:00.000-04:00</published><updated>2008-04-24T14:55:30.016-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mako'/><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='_ast'/><category scheme='http://www.blogger.com/atom/ns#' term='antlr'/><title type='text'>Start of an _ast Module in Jython's Trunk</title><content type='html'>Philip Jenvey has a &lt;a href="http://svn.makotemplates.org/mako/branches/_ast"&gt;mako branch&lt;/a&gt; that uses _ast for its parsing.  _ast is the module, new in Python 2.5, that exposes Python's internal parsing implementation.  I have been using _ast to &lt;a href="http://fwierzbicki.blogspot.com/2008/01/first-cut-at-antlr-based-parser-for.html"&gt;compare my antlr&lt;/a&gt; work with the real Python _ast.  Philip's work on mako has motivated me to start on a real _ast for Jython.  I just started it, and it is not yet sufficient for the mako work, but it's getting there.&lt;br /&gt;&lt;br /&gt;The new _ast module relies on the new antlr parser which is now in trunk.  For now you must put antlr-runtime-3.0.1 (which is in the extlibs dir) in your classpath to use it.  Using it looks like this:&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;&gt;&gt;&gt; import _ast&lt;br /&gt;&gt;&gt;&gt; compile("a=1", "&amp;lt;unknown&amp;gt;", "exec", _ast.PyCF_ONLY_AST)&lt;br /&gt;tree: (Module (Assign (Target (Name a)) (Value (Num 1))))&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Which outputs a tree representation for now.&lt;br /&gt;&lt;br /&gt;If you do not use _ast or the PyCF_ONLY_AST flag, you should not need antlr-runtime-3.0.1.jar in your path.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/04/start-of-ast-module-in-jythons-trunk.html' title='Start of an _ast Module in Jython&apos;s Trunk'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=8700301317206016691' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/8700301317206016691/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/8700301317206016691'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/8700301317206016691'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-6300935733742856152</id><published>2008-04-08T11:36:00.006-04:00</published><updated>2008-04-08T14:02:43.881-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='wsgi'/><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='django'/><category scheme='http://www.blogger.com/atom/ns#' term='modjy'/><category scheme='http://www.blogger.com/atom/ns#' term='glassfish'/><title type='text'>Jython and Django Progress Part I: Dev Server</title><content type='html'>Jython and Django are working better and better together.  About &lt;a href="http://fwierzbicki.blogspot.com/2007/09/work-towards-django-on-jython.html"&gt;six months ago&lt;/a&gt; I took a crack at it.  I had a little success and put together a list of problems and some workarounds that I found.  &lt;a href="http://blog.leosoto.com/2007/09/django-on-jython-what-ive-done-until.html"&gt;Leo Soto&lt;/a&gt;, &lt;a href="http://zyasoft.com/pythoneering/2008/01/django-on-jython-minding-gap.html"&gt;Jim Baker&lt;/a&gt; and others did a much better job at getting Django trunk and Jython trunk working together.  I am currently working on getting Django to run on &lt;a href="https://glassfish.dev.java.net/"&gt;GlassFish&lt;/a&gt; through the &lt;a href="http://www.wsgi.org/wsgi"&gt;WSGI&lt;/a&gt; interface provided by &lt;a href="http://www.xhaus.com/modjy/"&gt;modjy&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;So here are the steps to get Django's dev server running on Jython:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Get &lt;a href="http://www.postgresql.org/"&gt;postgresql&lt;/a&gt; installed, get a &lt;a href="http://jdbc.postgresql.org/"&gt;postgresql jdbc driver&lt;/a&gt; and put it on your classpath&lt;/li&gt;&lt;li&gt;Get Django from svn:&lt;br /&gt;&lt;pre&gt;svn co http://code.djangoproject.com/svn/django/trunk/ django-trunk&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Get Jython from svn: &lt;pre&gt;svn co https://jython.svn.sourceforge.net/svnroot/jython/trunk/jython jython-trunk&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Get patches for Django that haven't made it in yet from svn:&lt;pre&gt;svn co https://jython.svn.sourceforge.net/svnroot/jython/trunk/sandbox/jbaker/django django-patches/&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Copy patches over django-trunk:&lt;pre&gt;mkdir django-trunk/django/db/backends/postgresql_zxjdbc/&lt;br /&gt;cp django-patches/db/backends/postgresql_zxjdbc/*.py django-trunk/django/db/backends/postgresql_zxjdbc/&lt;br /&gt;cp django-patches/dispatch/robustapply.py django-trunk/django/dispatch/robustapply.py&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Create a shell or batch file to run jython with django on the path.  I created the file below and named it "run"&lt;br /&gt;&lt;pre&gt;#!/bin/sh&lt;br /&gt;JYTHON_HOME=jython-trunk/dist&lt;br /&gt;JYTHON_JAVA_ARGS="-classpath $JYTHON_HOME/jython.jar:$CLASSPATH"&lt;br /&gt;$JAVA_HOME/bin/java $JYTHON_JAVA_ARGS -Dpython.path='django-trunk' -Dpython.home="$JYTHON_HOME" org.python.util.jython "$@"&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Now create a new project.  This is the start of the &lt;a href="http://www.djangoproject.com/documentation/tutorial01/"&gt;django tutorial&lt;/a&gt; except that I've explicitly used my "run" script and the full path to django-admin.py&lt;br /&gt;&lt;pre&gt;./run django-trunk/django/bin/django-admin.py startproject mysite&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Try it out!  Note the --noreload directive.  Reloading does not work yet.&lt;br /&gt;&lt;pre&gt;./run mysite/manage.py runserver --noreload&lt;/pre&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Navigate to &lt;a href="http://localhost:8000/"&gt;http://localhost:8000&lt;/a&gt; and you should see the django default page.&lt;/li&gt;&lt;li&gt;Now edit mysite/settings.py.  For DATABASE_ENGINE use postgresql_zxjdbc, and add    'django.contrib.admin' to the bottom of the INSTALLED_APPS as outlined in the django tutorial.  Of course, also put the database username/password etc into the right spots in settings.py.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Edit mysite/urls.py and uncomment the admin app line.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Now sync the database&lt;br /&gt;&lt;pre&gt;./run mysite/manage.py syncdb&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Stop and start the app again (as in step 8) and navigate to the admin app at &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/admin/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;Now if you want you could try out the Django tutorial with Jython.  If you do let me know how it goes -- I haven't tried it all yet and I have to get back to Glassfish and modjy.  Leo Soto has proposed Django work for the Google Summer of Code, and Jim Baker is likely to be the project mentor, so the remaining issues should get cleared up quickly followed I expect by more amazing stuff.  At the very least I or perhaps Leo will get the MySQL backend I started up and running pretty soon.&lt;br /&gt;&lt;br /&gt;Come back for the next post -- it will be on Glassfish and modjy.  I've already had some pretty good success there.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/04/jython-and-django-progress-part-i-dev.html' title='Jython and Django Progress Part I: Dev Server'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=6300935733742856152' title='3 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/6300935733742856152/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/6300935733742856152'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/6300935733742856152'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-6220391834873547758</id><published>2008-03-21T13:42:00.000-04:00</published><updated>2008-03-21T14:53:22.259-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='pycon'/><title type='text'>PyCon 2008 and Jython</title><content type='html'>I knew that the Python community contained fans of Jython, but at PyCon this year I was just blown away by all of the encouragement and positive feedback on Jython's recent progress. Particularly nice was the encouragement that I got from many core Python developers.  The main input I get is: "When will Jython 2.5 be out?" and "How can we get our framework/app working on Jython?".  It is too soon to give a solid date for Jython 2.5, but I am willing to say that it will come out in 2008.  Also an alpha should come out soon -- I'm going to try to get one cut before &lt;a href="http://java.sun.com/javaone/sf/"&gt;JavaOne&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I also got plenty of congratulations on my new job at Sun.  Almost everyone I talked to felt positive about this move from Sun.  One individual whose experience with Sun dates back to the nineties expressed some doubt about Sun's ability to play well with open source.  I can say with some confidence that, at least in the corner of Sun that I live in, they really seem to get it.  As an example, read the bottom of &lt;a href="http://blogs.sun.com/jpblog/entry/it_is_all_good"&gt;this post&lt;/a&gt; from Vice President Jim Parkinson where he tells us that Ted and my roles in the open source community are not changing.  It is nice to get that kind of statement from that far up the chain.  For further reassurance look no further than the way Sun has handled the JRuby project.&lt;br /&gt;&lt;br /&gt;This was the first time I met &lt;a href="http://www.sauria.com/blog/"&gt;Ted Leung&lt;/a&gt; in person.  Be sure to read his &lt;a href="http://www.sauria.com/blog/2008/03/20/pycon-2008/"&gt;notes on PyCon 2008&lt;/a&gt; as they contain much more detail than mine.  Ted was hired by Sun at the same time that I was hired.  His job description ranges wider than mine: He is tasked with helping Sun become a good member of the Python community.  Mine of course is just to make Jython succeed, a task that is quite a bit easier to define.&lt;br /&gt;&lt;br /&gt;I got to meet some IronPython folks,  &lt;a href="http://www.microsoft.com/opensource/heroes/jim.mspx" title="Jim Hugunin"&gt;Jim Hugunin&lt;/a&gt; and &lt;a href="http://blogs.msdn.com/dinoviehland/" title="Dino Viehland blog"&gt;Dino Viehland&lt;/a&gt;.   Jim Hugunin is of course the original inventor of Jython as well as IronPython.  Dino is the lead developer of IronPython.  They have also managed to get Django running in their world, and they are doing some pretty cool stuff with Microsoft technologies like Silverlight.  I feel for them in that they are completely forbidden from looking at even a line of CPython code, and it is fairly difficult for them to send patches to outside projects (to, for example, make some part of Django work better on IronPython).  They are working with the lawyers to get them to ease up a bit, but that's tough going.  I'm not sure how they can work like that... ouch.&lt;br /&gt;&lt;br /&gt;At PyCon, Jeffrey Yasskin started an effort to get a concurrency memory model written for Python (Similar to the way Java and C++ have such models).  I have high hopes that this can be accomplished as it should make it simpler to think about concurrency in Jython (Something that &lt;a href="http://zyasoft.com/pythoneering/"&gt;Jim Baker&lt;/a&gt; has been spending a lot of time on lately).&lt;br /&gt;&lt;br /&gt;So on to my favorite part of PyCon: the sprinting.  Last year the Jython sprint consisted of three guys at a table with me as 1/2 a sprinter while I was working with Trac.  This year Jython took up a room with around 11 sprinters.  Sprinters from other projects came in throughout the week asking about how to get Jython working with their projects which was very nice.  A particular moment where the value of the PyCon sprints stood out to me is when brand new Jython committer Nicholas Riley was working furiously on getting parts of Twisted working on Jython while surrounded by about six Twisted core developers giving him pointers.  Awesome.&lt;br /&gt;&lt;br /&gt;A partial list of Jython sprint accomplishments:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Start of &lt;a href="http://twistedmatrix.com"&gt;Twisted&lt;/a&gt; on Jython&lt;/li&gt;&lt;li&gt;New compiler/New parser work&lt;/li&gt;&lt;li&gt;Better threading support for Jython&lt;/li&gt;&lt;li&gt;Collaboration with &lt;a href="http://www.sqlalchemy.org/"&gt;SQLAlchemy&lt;/a&gt; to get JDBC support&lt;/li&gt;&lt;li&gt;Work on writing decimal.py as a wrapper around Java's BigDecimal&lt;/li&gt;&lt;li&gt;Work on porting mmap to jython&lt;/li&gt;&lt;br /&gt;&lt;/ul&gt;I'm sure I missed some of the work that was done on Jython at PyCon -- there was so much!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/03/pycon-2008-and-jython.html' title='PyCon 2008 and Jython'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=6220391834873547758' title='3 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/6220391834873547758/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/6220391834873547758'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/6220391834873547758'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-2055192427439150428</id><published>2008-03-07T12:16:00.006-05:00</published><updated>2008-03-07T13:07:06.620-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='gsoc'/><title type='text'>Jython and Google Summer of Code 2008</title><content type='html'>&lt;a href="http://code.google.com/soc/2008"&gt;Google Summer of Code&lt;/a&gt; is starting up again!  That means it is time to start thinking of gsoc projects for 2008 and time for folks to start thinking about proposals.  We keep some ideas in the Jython wiki under &lt;a href="http://wiki.python.org/jython/SummerOfCode/PotentialProjects"&gt;PotentialProjects&lt;/a&gt;.  The overview of Jython's Summer of Code participation is &lt;a href="http://wiki.python.org/jython/SummerOfCode"&gt;here&lt;/a&gt;. Those who think they might like to mentor a Jython project please put your name on the list of potential mentors on that page.  I resurrected the Jython help system idea from Brian Zimmer.  I would be very willing to mentor that one.  Other ideas should go on the aforementioned &lt;a href="http://wiki.python.org/jython/SummerOfCode/PotentialProjects"&gt;PotentialProjects&lt;/a&gt; page.&lt;br /&gt;&lt;br /&gt;Last summer was a great success for us, particularly the work of Tobias Ivarsson mentored by Jim Baker producing I very nice prototype for a new compiler.  Let's make this one even better!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/03/jython-and-google-summer-of-code-2008.html' title='Jython and Google Summer of Code 2008'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=2055192427439150428' title='2 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/2055192427439150428/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/2055192427439150428'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/2055192427439150428'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-4807360148978464637</id><published>2008-03-05T12:05:00.003-05:00</published><updated>2008-03-05T12:14:54.153-05:00</updated><title type='text'>So Long Gary Gygax</title><content type='html'>&lt;a href="http://en.wikipedia.org/Gary_Gygax"&gt;Gary Gygax&lt;/a&gt; died yesterday.  His games brought me lots of enjoyment as a kid.  It's funny just how many programmers I've met also played those games.  It's also funny just how much nostalgia I get from the &lt;a href="http://en.wikipedia.org/wiki/Image:D%26d_original.jpg"&gt;cover&lt;/a&gt; of the first version of D &amp;amp; D that I owned.  Thanks for the memories and the games Gary, and so long.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/03/so-long-gary-gygax.html' title='So Long Gary Gygax'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=4807360148978464637' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/4807360148978464637/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/4807360148978464637'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/4807360148978464637'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-278178638803373096</id><published>2008-03-03T10:30:00.003-05:00</published><updated>2008-03-03T13:09:50.763-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='sun'/><category scheme='http://www.blogger.com/atom/ns#' term='jruby'/><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>Jython's Future Looking Sunny</title><content type='html'>Sorry for the title.  There is something about Sun that makes it almost impossible to avoid solar puns.  I just didn't have sufficient willpower to resist.  I will try to be stronger in the future.&lt;br /&gt;&lt;br /&gt;So by now you've probably guessed it: Sun Microsystems has hired me to work full time on Jython.  They have also hired Ted Leung to represent the wider world of Python at Sun.&lt;br /&gt;&lt;br /&gt;I don't think I can overstate just how excited I am about this.  For a long time now I've been obsessed with Jython.  Now I will be able to let my obsession take over completely.&lt;br /&gt;&lt;br /&gt;So what does this mean for Jython?  First off, just in case anyone is worried: Jython is going to remain completely open source.  Sun has applied for membership to the PSF and the PSF will continue to be the steward of Jython's code.  This move by Sun means that Jython is going to get some of the attention that it needs to move forward.&lt;br /&gt;&lt;br /&gt;The JRuby folks have already been working with the Jython folks to find those places where we can share code.  The fact that they work for Sun was no barrier at all to cooperation, but being in the same company means that I am going to interact with them all the more.  Close cooperation with JRuby has no downside for Jython whatsoever.&lt;br /&gt;&lt;br /&gt;I have to especially thank Tim Bray, who has been pushing the dynamic language thing at Sun for quite a long time.  I'm sure the warm welcome that I got at Sun was in no small part due to the enormous success of the JRuby work that has been going on there, so thanks to Charles Nutter and Thomas Enebo for their work.  Also thanks to the many folks at Sun who have been pushing for this, including Eduardo Pelegri-Llopart.&lt;br /&gt;&lt;br /&gt;And of course thanks to all of you who use, contribute to, and talk about Jython.  Jython is above all things a community effort.  We should all share in the excitement.  Hurray!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/02/jythons-future-looking-sunny.html' title='Jython&apos;s Future Looking Sunny'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=278178638803373096' title='18 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/278178638803373096/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/278178638803373096'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/278178638803373096'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-3449659842416897649</id><published>2008-02-10T12:10:00.000-05:00</published><updated>2008-02-10T12:27:39.117-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='mysql'/><category scheme='http://www.blogger.com/atom/ns#' term='sqlalchemy'/><category scheme='http://www.blogger.com/atom/ns#' term='pylons'/><category scheme='http://www.blogger.com/atom/ns#' term='setuptools'/><title type='text'>setuptools now runs on Jython trunk</title><content type='html'>In his work to get &lt;a href="http://pylonshq.com/"&gt;Pylons&lt;/a&gt; running on Jython, Philip Jenvey had to first get &lt;a href="http://dunderboss.blogspot.com/2008/02/setuptools-on-jython.html"&gt;setuptools running on Jython&lt;/a&gt;.  I gave it a try with &lt;a href="http://www.sqlalchemy.org"&gt;SQLAlchemy&lt;/a&gt;, by running&lt;br /&gt;&lt;pre&gt;jython setup.py install&lt;/pre&gt;&lt;br /&gt;In my local copy from SQLAlchemy's svn repository, and it worked!  After running the above command, I now have a site-packages directory with:&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;README&lt;br /&gt;easy-install.pth&lt;br /&gt;setuptools.pth&lt;br /&gt;SQLAlchemy-0.4.3dev_r4149-py2.3.egg&lt;br /&gt;setuptools-0.6c3-py2.3.egg&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;And I can&lt;br /&gt;&lt;pre&gt;import sqlalchemy&lt;/pre&gt;&lt;br /&gt;successfully without any further work.  Getting SQLAlchemy to run well with Mysql and JDBC will be next, but that's for me to do :)&lt;br /&gt;&lt;br /&gt;Great work Philip!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/02/setuptools-now-runs-on-jython-trunk.html' title='setuptools now runs on Jython trunk'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=3449659842416897649' title='7 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/3449659842416897649/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/3449659842416897649'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/3449659842416897649'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-7810473123139907763</id><published>2008-01-31T12:37:00.000-05:00</published><updated>2008-02-02T09:43:00.029-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='pycon'/><title type='text'>PyCon 2008 in Chicago</title><content type='html'>Registration for &lt;a href="http://us.pycon.org"&gt;PyCon 2008&lt;/a&gt; is now open.  It will be held in Chicago March 14-16, 2008.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://us.pycon.org/"&gt;&lt;img src="http://us.pycon.org/common/2008/website/img/PyConChi.png" alt="PyCon 2008: Chicago" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;My talk is #70 on &lt;a href="http://us.pycon.org/2008/conference/talks/"&gt;this page&lt;/a&gt; and is one of three talks on Jython this year.  Hope to see you there!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/01/pycon-2008-in-chicago.html' title='PyCon 2008 in Chicago'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=7810473123139907763' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/7810473123139907763/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7810473123139907763'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7810473123139907763'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-5558664725946626203</id><published>2008-01-21T00:31:00.000-05:00</published><updated>2008-01-21T10:07:26.220-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='asm'/><title type='text'>A Proof of Concept ASM Compiler for Jython</title><content type='html'>Now that I have a reasonable parser in &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_0"&gt;Antlr&lt;/span&gt;, I'm back to thinking about the compiler again.  Currently &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_1"&gt;Jython&lt;/span&gt; has a hand crafted &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_2"&gt;bytecode&lt;/span&gt; emitter.  It was built in a generic fashion and is actually a very nice implementation.  For an earlier &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_3"&gt;Jython&lt;/span&gt; this was a necessity, because there where no good open source frameworks out there that could be used for &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_4"&gt;bytecode&lt;/span&gt; emission.  These days, there are a number of good open source frameworks for this task.  &lt;a href="http://asm.objectweb.org/"&gt;&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_5"&gt;ASM&lt;/span&gt;&lt;/a&gt; stands out as a particularly good one if you are looking for a small, fast, and well documented framework with a vibrant community of users and developers.   The advantage of using a framework like &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_6"&gt;ASM&lt;/span&gt; over a hand rolled implementation is that the developers of &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_7"&gt;Jython&lt;/span&gt; can let the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_8"&gt;ASM&lt;/span&gt; folks worry about new &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_9"&gt;JVM&lt;/span&gt; features like annotations, backwards compatibility issues, etc, leaving &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_10"&gt;Jython&lt;/span&gt; developers more time to make &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_11"&gt;Jython&lt;/span&gt; a better implementation of Python.&lt;br /&gt;&lt;br /&gt;A few months ago I did a one for one translation of the current compiler into &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_12"&gt;ASM&lt;/span&gt; and found that this was a straightforward (if a bit tedious) task.   This translated compiler lives in the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_13"&gt;svn&lt;/span&gt; branch &lt;a href="http://jython.svn.sourceforge.net/svnroot/jython/branches/asm_compiler/"&gt;&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_14"&gt;asm&lt;/span&gt;_compiler&lt;/a&gt;.   The &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_15"&gt;asm&lt;/span&gt;_compiler branch's build.&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_16"&gt;xml&lt;/span&gt; uses &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_17"&gt;jarjar&lt;/span&gt; to bundle the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_18"&gt;asm&lt;/span&gt; libraries together into a &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_19"&gt;jython&lt;/span&gt;-complete.jar.  I called it &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_20"&gt;jython&lt;/span&gt;-complete mirroring the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_21"&gt;jruby&lt;/span&gt; project's &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_22"&gt;jruby&lt;/span&gt;-complete.jar vs a &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_23"&gt;jruby&lt;/span&gt;.jar that requires dependencies.   I think &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_24"&gt;Jython&lt;/span&gt; will eventually follow suit with one jar that bundles everything together and another that does not.  &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_25"&gt;asm&lt;/span&gt;_compiler currently passes all but four of the regression tests that trunk passes on my machine.&lt;br /&gt;&lt;br /&gt;Since I did not try to go beyond the current functionality of 2.3, this is just a proof of concept step.  The next steps will be to start re-writing the "&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_26"&gt;newcompiler&lt;/span&gt;" work in Java.  The &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_27"&gt;newcompiler&lt;/span&gt; work which sits in the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_28"&gt;svn&lt;/span&gt; &lt;a href="http://jython.svn.sourceforge.net/svnroot/jython/trunk/jython/src/org/python/newcompiler/"&gt;trunk&lt;/a&gt; and &lt;a href="http://jython.svn.sourceforge.net/svnroot/jython/trunk/sandbox/pyasm/"&gt;sandbox&lt;/a&gt; prototypes an improved compiler that implements 2.5.  &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_29"&gt;newcompiler&lt;/span&gt; is the impressive outcome of a Google Summer of Code project by Tobias &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_30"&gt;Ivarsson&lt;/span&gt; mentored by Jim Baker.  Having said that I'd still like to see if I can make &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_31"&gt;asm&lt;/span&gt;_compiler the compiler of &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_32"&gt;Jython's&lt;/span&gt; trunk -- it may work better to incrementally move to &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_33"&gt;newcompiler&lt;/span&gt; compared to trying to replace the current strategy all at once.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/01/proof-of-concept-asm-compiler-for.html' title='A Proof of Concept ASM Compiler for Jython'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=5558664725946626203' title='2 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/5558664725946626203/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/5558664725946626203'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/5558664725946626203'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-8177679851184046763</id><published>2008-01-10T07:57:00.000-05:00</published><updated>2008-01-10T21:07:12.203-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='parser'/><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='asdl'/><category scheme='http://www.blogger.com/atom/ns#' term='antlr'/><title type='text'>A First Cut at an Antlr Based Parser for Jython Finished</title><content type='html'>The majority of my Jython time for the last couple of months has been spent working on a new parser for Jython.  This parser is being written in &lt;a href="http://www.antlr.org/"&gt;Antlr3&lt;/a&gt; and lives in the Jython &lt;a href="http://jython.svn.sourceforge.net/svnroot/jython/trunk/sandbox/ast/"&gt;sandbox&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;CPython 2.5 introduced  a new library called _ast that allows direct access to its internal parser.  &lt;a href="http://zyasoft.com/pythoneering/"&gt;Jim Baker&lt;/a&gt; wrote some python that pretty prints the _ast results, and I extended it to do a diff with the output of the new parser.  The current results of this comparison with all of the .py files in CPython 2.5's Lib directory is a perfect match for just over 75% of these files (there are 1230 of them).  The majority of the remaining problems are mismatches in the representation of floats and unicode, although there are plenty of real bugs remaining, especially in the lexer pass.  The sandbox project has a README that lists the bugs that I know about.&lt;br /&gt;&lt;br /&gt;There are two grammars, a combined lexer/parser in grammar/Python.g that emits a simple parse tree which is a reasonable representation of the code in an AST form.  The real work occurs in the tree grammar grammar/PythonWalker.g.  This one walks the output of Python.g and emits a tree of Java classes that will later be consumed by a future Jython compiler.  PythonWalker does a fair amount of processing on the parse tree to shape the AST so that it matches _ast.&lt;br /&gt;&lt;br /&gt;The code for the nodes that PythonWalker.g emits is also generated.  This is done using asdl_antlr.py.  asdl_antlr.py uses the same core code that CPython uses to create their parser, which is copied into the Jython sandbox (asdl.py and spark.py).&lt;br /&gt;&lt;br /&gt;Plenty of work remains.  First I will need to get the ASTs to match better -- I'm hoping to at least get a 100% match for the Lib of CPython 2.5.  Once that is done Python.g and PythonWalker.g are going to need a cleanup pass -- there is plenty of kludginess in there to get it up and running.  And of course then there is the compiler, but that is a topic for another day.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/01/first-cut-at-antlr-based-parser-for.html' title='A First Cut at an Antlr Based Parser for Jython Finished'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=8177679851184046763' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/8177679851184046763/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/8177679851184046763'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/8177679851184046763'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-7188278991475658922</id><published>2008-01-04T08:05:00.000-05:00</published><updated>2008-01-04T11:03:12.466-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='django'/><category scheme='http://www.blogger.com/atom/ns#' term='pylons'/><category scheme='http://www.blogger.com/atom/ns#' term='turbogears'/><title type='text'>Django Beginning to work on Jython</title><content type='html'>Work on Jython since 2.2 has been proceeding at a blistering pace.  Commits are coming in so fast that I have been having trouble keeping up at times.  Recently some Jython folks got together with some Django folks and together figured out what was missing.  I participated in the early work (and I still have a mysql backend that I need to contribute to the effort) but then I got too caught up in rewriting Jython's parser in antlr and so lost track.  More on that another time :).&lt;br /&gt;&lt;br /&gt;Jim Baker has a nice write up of &lt;a href="http://zyasoft.com/pythoneering/2008/01/django-on-jython-minding-gap.html"&gt;Django on Jython&lt;/a&gt; and the news was picked up by &lt;a href="http://www.theserverside.com/news/thread.tss?thread_id=47992"&gt;The Server Side&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This is just the beginning -- we are also looking at &lt;a href="http://pylonshq.com/"&gt;Pylons&lt;/a&gt;, &lt;a href="http://turbogears.org/"&gt;TurboGears&lt;/a&gt;, and much much more.  Exciting times.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2008/01/django-beginning-to-work-on-jython.html' title='Django Beginning to work on Jython'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=7188278991475658922' title='4 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/7188278991475658922/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7188278991475658922'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7188278991475658922'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-944006132874789307</id><published>2007-10-14T19:11:00.001-04:00</published><updated>2007-10-14T19:16:55.725-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>Jython 2.2.1 released</title><content type='html'>&lt;a href="http://downloads.sourceforge.net/jython/jython_installer-2.2.1.jar"&gt;Jython 2.2.1&lt;/a&gt; is out.&lt;br /&gt;&lt;br /&gt;Here are the &lt;a href="http://jython.org/Project/installation.html"&gt;directions for installation&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This release keeps file reading and writing from going through the JVM's default charset, and fixes a problem with importing Java code from multiple threads among many smaller changes.  See the &lt;a href="http://jython.org/NEWS"&gt;NEWS&lt;/a&gt; file for full details.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/10/jython-221-released.html' title='Jython 2.2.1 released'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=944006132874789307' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/944006132874789307/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/944006132874789307'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/944006132874789307'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-4916827877263994303</id><published>2007-10-05T10:10:00.000-04:00</published><updated>2007-10-05T23:18:20.047-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>Jython 2.2.1rc2 Released</title><content type='html'>&lt;a href="http://downloads.sourceforge.net/jython/jython_installer-2.2.1rc2.jar"&gt;Jython 2.2.1rc2&lt;/a&gt; is out.&lt;br /&gt;&lt;a onclick="return top.js.OpenExtLink(window,event,this)" href="http://downloads.sourceforge.net/jython/jython_installer-2.2.1rc2.jar" target="_blank"&gt;&lt;/a&gt;&lt;br /&gt;Here are the &lt;a href="http://jython.org/Project/installation.html"&gt;directions for installation&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This is a bugfix release, see the &lt;a href="http://jython.org/NEWS"&gt;NEWS&lt;/a&gt; file for details.&lt;br /&gt;&lt;br /&gt;If no new problems are found in this candidate, 2.2.1 will be released&lt;br /&gt;a week from now.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/10/jython-221rc2-released.html' title='Jython 2.2.1rc2 Released'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=4916827877263994303' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/4916827877263994303/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/4916827877263994303'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/4916827877263994303'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-5908832658540146538</id><published>2007-09-24T14:38:00.000-04:00</published><updated>2007-09-24T14:46:34.987-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='olpc'/><title type='text'>One Laptop per Child: Give one, get one</title><content type='html'>If you are like me and you've been wanting to get an OLPC for your child (or more likely you are a hardware geek and you want one for you -- hopefully my daughter will let me play with it too), your &lt;a href="http://xogiving.org/"&gt;chance has come&lt;/a&gt;.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/09/one-laptop-per-child-give-one-get-one.html' title='One Laptop per Child: Give one, get one'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=5908832658540146538' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/5908832658540146538/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/5908832658540146538'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/5908832658540146538'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-9091845780921638681</id><published>2007-09-24T08:00:00.000-04:00</published><updated>2007-09-24T14:31:02.892-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>Jython 2.2.1rc1 released</title><content type='html'>A release candidate for Jython 2.2.1, a bugfix release of 2.2, is available for &lt;a href="http://downloads.sourceforge.net/jython/jython_installer-2.2.1rc1.jar"&gt;download&lt;/a&gt;.  See &lt;a href="http://jython.org/Project/installation.html"&gt;installation instructions&lt;/a&gt;.  I think this is an important release in that it shows that Jython continues to move forward even after the release of 2.2.&lt;br /&gt;&lt;br /&gt;The biggest change in this release is that file reading and writing will no longer be run through the current JVM's default charset.  In the 2.2 release, the bytes read in from a file opened in text mode would be decoded by the default charset and then when written out, bytes would be encoded using the same default charset.  In 2.2.1rc1, read returns unadulterated bytes and write doesn't automatically encode the bytes it is writing.&lt;br /&gt;&lt;br /&gt;A full list of changes is available in the &lt;a href="http://jython.org/NEWS"&gt;NEWS file&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;If no new problems are found in this candidate, 2.2.1 will be released a week from now.&lt;br /&gt;&lt;br /&gt;-Frank</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/09/jython-221rc1-released.html' title='Jython 2.2.1rc1 released'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=9091845780921638681' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/9091845780921638681/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/9091845780921638681'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/9091845780921638681'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-1871886280736323948</id><published>2007-09-06T09:40:00.000-04:00</published><updated>2007-09-06T09:47:01.111-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><category scheme='http://www.blogger.com/atom/ns#' term='django'/><title type='text'>Work towards Django on Jython</title><content type='html'>A couple of weeks ago I worked on Django on Jython for a Jython sprint.  I found some places where Jython could use some improvement, and I've been poking around with that.  In the meantime, Leo Soto M. took Jython on Django &lt;a href="http://blog.leosoto.com/2007/09/django-on-jython-what-ive-done-until.html"&gt;further than I did&lt;/a&gt; and there was a nice &lt;a href="http://groups.google.com/group/django-developers/browse_thread/thread/6ed7ed19a8e4d0e5"&gt;discussion&lt;/a&gt; on the Django list about all of this.  It looks like the Django folks are as excited to get their framework working on Jython as I am, which is great because it will go so much faster that way.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/09/work-towards-django-on-jython.html' title='Work towards Django on Jython'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=1871886280736323948' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/1871886280736323948/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/1871886280736323948'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/1871886280736323948'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-1546061833834270430</id><published>2007-08-23T07:53:00.000-04:00</published><updated>2007-08-23T08:02:03.223-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>Jython 2.2 released!!  Woohoo!!</title><content type='html'>On behalf of the Jython development team, I'm pleased to announce that&lt;br /&gt;Jython 2.2 is available for &lt;a href="http://downloads.sourceforge.net/jython/jython_installer-2.2.jar"&gt;download&lt;/a&gt;.  See the &lt;a href="http://jython.org/Project/installation.html"&gt;installation instructions&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This is the first production release of Jython in nearly six years,&lt;br /&gt;and it contains many new features:&lt;br /&gt;&lt;ul&gt;&lt;li&gt; new-style classes&lt;/li&gt;&lt;li&gt; Java List integration&lt;/li&gt;&lt;li&gt;PEP 302 implementation&lt;/li&gt;&lt;li&gt;iterators&lt;/li&gt;&lt;li&gt; generators&lt;/li&gt;&lt;li&gt; __future__ division&lt;/li&gt;&lt;li&gt; support for running on modern JVMs&lt;/li&gt;&lt;li&gt; a new installer&lt;/li&gt;&lt;li&gt; ssl and non-blocking support for socket&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;This gives Jython the same set of language features as Python 2.2.&lt;br /&gt;For a more complete list of the additions from 2.1 to 2.2, see the&lt;br /&gt;NEWS file in the release.  Only the version numbers changed in the&lt;br /&gt;code from 2.2rc3 to this release.&lt;br /&gt;&lt;br /&gt;Woohoo!!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/08/jython-22-released-woohoo.html' title='Jython 2.2 released!!  Woohoo!!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=1546061833834270430' title='13 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/1546061833834270430/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/1546061833834270430'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/1546061833834270430'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-7435900938032175352</id><published>2007-08-21T09:40:00.001-04:00</published><updated>2007-08-21T09:53:04.228-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>Speaking on Jython in Chapil Hill, NC next Tuesday</title><content type='html'>I'll be giving a talk on Jython 2.2 and current Jython development on Tuesday, August 28, 7pm at 328 Phillips Hall, UNC-Chapel Hill in North Carolina for the &lt;a href="http://trizpug.org/"&gt;Triangle Zope and Python Users Group&lt;/a&gt;.  It will be a basic introduction to Jython targeted at Python developers, but since I learned my lesson at PyCon, I'll be sure to do more demoing.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/08/speaking-on-jython-in-chapil-hill-nc.html' title='Speaking on Jython in Chapil Hill, NC next Tuesday'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=7435900938032175352' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/7435900938032175352/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7435900938032175352'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7435900938032175352'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-7914823300833665209</id><published>2007-08-02T11:42:00.001-04:00</published><updated>2007-08-03T07:04:55.999-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>Jython 2.2 rc3 is out!</title><content type='html'>The Jython development team is pleased to announce that Jython 2.2rc3&lt;br /&gt;is available for &lt;a href="http://downloads.sourceforge.net/jython/jython_installer-2.2rc3.jar"&gt;download&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://jython.org/Project/installation.html"&gt;Here are the installation instructions&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;A few new pieces of functionality have been added since 2.2rc2:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;   Added telnetlib from CPython&lt;/li&gt;&lt;li&gt;   Added cpython_compatible_select to select.  See &lt;a href="http://wiki.python.org/jython/SelectModule"&gt;here&lt;/a&gt; for information on when to use it.&lt;/li&gt;&lt;li&gt;   Several more java.nio exceptions are mapped to their corresponding Python error codes when thrown.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;The following bugs are also fixed in this release:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;   recv on closed sockets threw an exception instead returning the empty string&lt;/li&gt;&lt;li&gt;   A PySystemState being garbage collected caused System.out and System.in to be closed.  This would cause 'print' to stop working.&lt;/li&gt;&lt;li&gt;   Closing a FileWrapper on a socket closes its underlying socket&lt;/li&gt;&lt;li&gt;   Sockets just have their [In|Out]putStreams closed instead of being properly shutdown by shutdown()&lt;/li&gt;&lt;li&gt;   SO_REUSEADDR is reset on sockets from a server socket's accept call causing later binds to the server socket's port to fail.&lt;/li&gt;&lt;li&gt;   Client sockets that have bind called before connect don't respect SO_REUSEADDR&lt;/li&gt;&lt;li&gt;   execfile() throws a NullPointerException in the interactive console&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Enjoy!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/08/jython-22-rc3-is-out.html' title='Jython 2.2 rc3 is out!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=7914823300833665209' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/7914823300833665209/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7914823300833665209'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/7914823300833665209'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-8683456653172520321</id><published>2007-07-17T07:43:00.001-04:00</published><updated>2007-08-21T09:53:52.968-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>SQLAlchemy, MySQL, and Jython</title><content type='html'>I tried the 2.3 branch of Jython with SQLAalchemy against MySQL and found&lt;br /&gt;that it wasn't that hard to get it to work for a (very) simple test.&lt;br /&gt;This is by no means complete or even good, but I am keeping the code&lt;br /&gt;here: &lt;a onclick="return top.js.OpenExtLink(window,event,this)" href="http://jython.svn.sourceforge.net/svnroot/jython/trunk/sandbox/wierzbicki/sqlalchemy/" target="_blank"&gt;http://jython.svn.sourceforge&lt;wbr&gt;.net/svnroot/jython/trunk&lt;wbr&gt;/sandbox/wierzbicki/sqlalchemy&lt;wbr&gt;/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The three files are a simple test (sqla.py), a monkey-patched version of database/mysql.py (mysql.py) and the "svn diff" against the sqlalchemy repository as of today (mysql.diff), so I can keep track of the changes I made to get things to work.  mysql.py can be pasted on top of the real one, then you can run jython (latest from the 2.3 branch) and it works, at least on my&lt;br /&gt;machine :)&lt;br /&gt;&lt;br /&gt;The table I'm testing against on mysql:&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;mysql&gt; select * from users;&lt;br /&gt;+----+-------+&lt;br /&gt;| id | name  |&lt;br /&gt;+----+-------+&lt;br /&gt;| 1  | user1 |&lt;br /&gt;| 2  | user2 |&lt;br /&gt;+----+-------+&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;The test code looks like this:&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;from sqlalchemy import *&lt;br /&gt;&lt;br /&gt;db = create_engine('mysql://username:password@localhost/mydb')&lt;br /&gt;metadata = BoundMetaData(db)&lt;br /&gt;&lt;br /&gt;users_table = Table('users', metadata, autoload=True)&lt;br /&gt;&lt;br /&gt;s = users_table.select()&lt;br /&gt;r = s.execute()&lt;br /&gt;print r.fetchall()&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;And produces output that looks like this:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;[(1L, 'user1'), (2L, 'user2')]&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;One thing I had to do was switch "re" to "sre" because our "re" is&lt;br /&gt;missing at least one method.  I'll file a bug or fix it (maybe&lt;br /&gt;tonight).&lt;br /&gt;&lt;br /&gt;I posted this to the sqlalchemy list -- and &lt;span id="_user_mike_mp@zzzcomputing.com" style="color: rgb(121, 6, 25);"&gt;&lt;/span&gt;Michael Bayern&lt;br /&gt;sounded very enthusiastic  about helping to get sqlalchemy running on&lt;br /&gt;Jython.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/07/sqlalchemy-mysql-and-jython.html' title='SQLAlchemy, MySQL, and Jython'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=8683456653172520321' title='2 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/8683456653172520321/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/8683456653172520321'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/8683456653172520321'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-6674706836037699677</id><published>2007-07-10T09:39:00.001-04:00</published><updated>2007-07-10T09:43:44.476-04:00</updated><title type='text'>Jython 2.2 RC2 is out!</title><content type='html'>The Jython development team is pleased to announce that Jython 2.2rc2&lt;br /&gt;is available for &lt;a href="http://sourceforge.net/project/showfiles.php?group_id=12867&amp;package_id=12218&amp;amp;release_id=522109"&gt;download&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://jython.org/Project/installation.html"&gt;Here are the installation instructions&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This is a bugfix release.&lt;br /&gt;&lt;br /&gt;Enjoy!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/07/jython-22-rc2-is-out.html' title='Jython 2.2 RC2 is out!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=6674706836037699677' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/6674706836037699677/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/6674706836037699677'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/6674706836037699677'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-3165551952969372233</id><published>2007-06-25T20:35:00.000-04:00</published><updated>2007-06-25T20:51:32.755-04:00</updated><title type='text'>Jython 2.2 RC1 is out!</title><content type='html'>The Jython development team is pleased to announce that Jython 2.2rc1&lt;br /&gt;is available for &lt;a href="http://sourceforge.net/project/showfiles.php?group_id=12867&amp;package_id=12218&amp;amp;release_id=518249"&gt;download&lt;/a&gt;.&lt;a onclick="return top.js.OpenExtLink(window,event,this)" href="http://sourceforge.net/project/showfiles.php?group_id=12867&amp;package_id=12218&amp;amp;release_id=518249" target="_blank"&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://jython.org/Project/installation.html"&gt;Here are the installation instructions&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This release candidate features a new socket module with support for&lt;br /&gt;non-blocking sockets and SSL as well as many bug fixes.&lt;br /&gt;&lt;br /&gt;Enjoy!</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/06/jython-22-rc1-is-out.html' title='Jython 2.2 RC1 is out!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=3165551952969372233' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/3165551952969372233/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/3165551952969372233'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/3165551952969372233'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-3651531993642676657</id><published>2007-05-29T14:11:00.000-04:00</published><updated>2007-07-17T15:03:51.438-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>JVM Languages: The Future (via Headius)</title><content type='html'>Charles Nutter has &lt;a href="http://headius.blogspot.com/2007/05/jvm-languages-future.html"&gt;announced&lt;/a&gt; a new   Google Group to (in his words):&lt;br /&gt;&lt;blockquote&gt;talk shop about language implementation strategies, pain points on the JVM, and what we can do to build a common set of libraries, frameworks, and patterns to ease and improve the Java platform's support for many languages.&lt;/blockquote&gt;This is a very exciting time to be involved in language development on top of the JVM.  There have already been posts from the worlds of JRuby, Groovy, Jython, and even a JVM Lisp &lt;strike&gt;dialect&lt;/strike&gt; implementation called ABCL.  If you are interested, please &lt;a href="http://groups.google.com/group/jvm-languages"&gt;sign up&lt;/a&gt;.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/05/jvm-languages-future-via-headius.html' title='JVM Languages: The Future (via Headius)'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=3651531993642676657' title='15 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/3651531993642676657/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/3651531993642676657'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/3651531993642676657'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14276139.post-2551247452330902525</id><published>2007-05-24T07:56:00.000-04:00</published><updated>2007-05-24T08:03:50.974-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='jython'/><title type='text'>NailGun correction</title><content type='html'>Careful readers of the last post will have noted that my &lt;a href="http://www.martiansoftware.com/nailgun/index.html"&gt;NailGun&lt;/a&gt; run did *not* perform better than the native Python run.  It looks like the results vary.  I ran the test once while doing other things (and noticed that ng/Jython did better), and then ran the tests as a group so that I could paste them in unchanged.  I didn't notice that Python had moved ahead.  Anyway, you'll just have to trust me or try it yourself to find that ng + jython can outperform Python in this fairly silly test.  I say the test is silly, since a "print 'hello'" is almost entirely dominated by startup time and so shows the most improvement.  In any case NailGun looks like it should help with those little Jython scripts that I use for testing, and will help me get to an interactive session faster.</content><link rel='alternate' type='text/html' href='http://fwierzbicki.blogspot.com/2007/05/nailgun-correction.html' title='NailGun correction'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14276139&amp;postID=2551247452330902525' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://fwierzbicki.blogspot.com/feeds/2551247452330902525/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/2551247452330902525'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14276139/posts/default/2551247452330902525'/><author><name>Frank Wierzbicki</name><uri>http://www.blogger.com/profile/00886670869991345737</uri><email>noreply@blogger.com</email></author></entry></feed>