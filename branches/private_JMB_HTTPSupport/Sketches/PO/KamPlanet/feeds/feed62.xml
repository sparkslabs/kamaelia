<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	>

<channel>
	<title>Ted Leung on the Air</title>
	<atom:link href="http://www.sauria.com/blog/feed/" rel="self" type="application/rss+xml" />
	<link>http://www.sauria.com/blog</link>
	<description>Open Source, Modern Programming Languages, OS X, Photography, and ...</description>
	<pubDate>Fri, 06 Jun 2008 22:58:12 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.5.1</generator>
	<language>en</language>
			<item>
		<title>What I am hoping for at WWDC</title>
		<link>http://www.sauria.com/blog/2008/06/06/what-i-am-hoping-for-at-wwdc/</link>
		<comments>http://www.sauria.com/blog/2008/06/06/what-i-am-hoping-for-at-wwdc/#comments</comments>
		<pubDate>Fri, 06 Jun 2008 22:58:12 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[Macintosh]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/06/06/what-i-am-hoping-for-at-wwdc/</guid>
		<description><![CDATA[1. 3G iPhone with hardware GPS - I am dying to put my Nokia 6600 to rest
2. An emphasis on stability and performance in 10.6. - 10.5 just seems less reliable than it should. I am having problems with Firewire disks and with the WindowServer freaking out and consuming all available cores.
3. ZFS - my [...]]]></description>
			<content:encoded><![CDATA[<p>1. 3G iPhone with hardware GPS - I am dying to put my Nokia 6600 to rest</p>
<p>2. An emphasis on stability and performance in 10.6. - 10.5 just seems less reliable than it should. I am having problems with Firewire disks and with the WindowServer freaking out and consuming all available cores.</p>
<p>3. ZFS - my photo hard disk situation is a mess.</p>
<p>And that&#8217;s it. If there are other goodies, and I am sure there will be, that&#8217;s fine, but I&#8217;d be happy to check off those three items and call it a day.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/06/06/what-i-am-hoping-for-at-wwdc/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Thoughts on MagLev - VM&#8217;s for everybody!</title>
		<link>http://www.sauria.com/blog/2008/06/05/thoughts-on-maglev-vms-for-everybody/</link>
		<comments>http://www.sauria.com/blog/2008/06/05/thoughts-on-maglev-vms-for-everybody/#comments</comments>
		<pubDate>Thu, 05 Jun 2008 15:26:43 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[concurrency]]></category>

		<category><![CDATA[programming languages]]></category>

		<category><![CDATA[dynamic languages]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/06/05/thoughts-on-maglev-vms-for-everybody/</guid>
		<description><![CDATA[One of the most visible presentations from last weeks RailsConf was Avi Bryant&#8217;s demonstration of MagLev, which is a RubyVM that is based on Gemstone&#8217;s S/64 VM for Smalltalk. This caused a stir because the micro benchmark performance of MagLev looks really good because S/64 has been out in production for a while and because [...]]]></description>
			<content:encoded><![CDATA[<p>One of the most visible presentations from last weeks RailsConf was Avi Bryant&#8217;s <a href="http://www.avibryant.com/2008/06/maglev-recap.html">demonstration</a> of MagLev, which is a RubyVM that is based on Gemstone&#8217;s S/64 VM for Smalltalk. This caused a stir because the micro benchmark performance of MagLev looks really good because S/64 has been out in production for a while and because it appears to have some really interesting features (an OODB, shared VM&#8217;s, etc). MagLev is a reminder that the world of production quality, high-performance virtual machines is bigger than many of us remember at times.</p>
<p>I believe that over the next few years we will see a flourishing of virtual machines, as well as languages atop existing virtual machines. Take for example <a href="http://wiki.reia-lang.org/wiki/Main_Page">Reia</a>, a Ruby/Pythonesque experiment atop Erlang&#8217;s BEAM VM. As we return to a multi language world, we will also necessarily return to a multiple implementation world. Before Java, there were many languages and many implementations of those languages. You could argue that there were probably too many, and I think that&#8217;s probably true. I would argue that we need to enter a new period of language and runtime experimentation. A big driver, but not the only driver, for this is the approaching multi-core world. When you don&#8217;t know how to solve something, more attempts at solutions is better.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/06/05/thoughts-on-maglev-vms-for-everybody/feed/</wfw:commentRss>
		</item>
		<item>
		<title>OS X Scripting</title>
		<link>http://www.sauria.com/blog/2008/06/04/os-x-scripting/</link>
		<comments>http://www.sauria.com/blog/2008/06/04/os-x-scripting/#comments</comments>
		<pubDate>Wed, 04 Jun 2008 23:37:49 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[Macintosh]]></category>

		<category><![CDATA[programming languages]]></category>

		<category><![CDATA[python]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/06/04/os-x-scripting/</guid>
		<description><![CDATA[John Gruber followed up on Daniel Jalkut&#8217;s suggestion that Apple replace AppleScript with Javascript:

I agree with this wholeheartedly. Or maybe even make a clean break and scrap OSA and introduce a new system.

I&#8217;ve been talking up the benefits of scripting apps on the Mac since the 1990&#8217;s. The sad fact of it is that Apple [...]]]></description>
			<content:encoded><![CDATA[<p>John Gruber <a href="http://daringfireball.net/linked/2008/june#tue-03-apples_script">followed up</a> on Daniel Jalkut&#8217;s <a href="http://www.red-sweater.com/blog/502/apples-script">suggestion</a> that Apple replace AppleScript with Javascript:</p>
<blockquote cite="http://www.red-sweater.com/blog/502/apples-script">
<p>I agree with this wholeheartedly. Or maybe even make a clean break and scrap OSA and introduce a new system.</p>
</blockquote>
<p>I&#8217;ve been talking up the benefits of scripting apps on the Mac since the 1990&#8217;s. The sad fact of it is that Apple has never really supported scripting to the level that it deserves. It&#8217;s even more important now in the days of a UNIX based MacOS. I have a bunch of scripts that I rely on daily to help me get things done more efficiently. I&#8217;d write more of them, but two things hold me back. AppleScript is really a <a href="http://www.sauria.com/blog/2004/02/27#833">funky language</a>. I&#8217;ve partially solved that by switching to using Python (via <a href="http://appscript.sourceforge.net/">appscript</a>) to do the scripting, but that&#8217;s only half the problem. The other half of the problem is that the API exposed via OSA is also pretty funky. If Apple cleaned all that up, in say, 10.6, I&#8217;d be happy to rework my existing body of scripts.</p>
<p>Even if that happened, the big problem is that developer&#8217;s don&#8217;t really support scripting that well, so a good scripting system overhaul needs to look at making it easy for developers to expose application functionality to scripts. Unless that part happens, improvements in the scripting language, and OSA&#8217;s API&#8217;s will not be enough to push scripting to the level where it belongs.</p>
<p style="text-align: right;">
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/06/04/os-x-scripting/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Book Review: Practical Artistry: Light &#038; Exposure for Digital Photographers</title>
		<link>http://www.sauria.com/blog/2008/05/30/book-review-practical-artistry-light-exposure-for-digital-photographers/</link>
		<comments>http://www.sauria.com/blog/2008/05/30/book-review-practical-artistry-light-exposure-for-digital-photographers/#comments</comments>
		<pubDate>Fri, 30 May 2008 16:43:16 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[books]]></category>

		<category><![CDATA[photography]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/30/book-review-practical-artistry-light-exposure-for-digital-photographers/</guid>
		<description><![CDATA[I&#8217;m not sure how it happened, but somehow I got onto the list for a review copy of Practical Artistry: Light &#38; Exposure for Digital Photographers by Harold Davis. I&#8217;m not complaining in the slightest bit, just mystified. I&#8217;m a reader of Harold&#8217;s blog, and his choice of nature subjects is pretty close to mine, [...]]]></description>
			<content:encoded><![CDATA[<p>I&#8217;m not sure how it happened, but somehow I got onto the list for a review copy of <a href="http://www.amazon.com/gp/redirect.html%3FASIN=0596529880%26tag=adriaantijsse-20%26lcode=xm2%26cID=2025%26ccmID=165953%26location=/Practical-Artistry-Exposure-Digital-Photographers/dp/0596529880%253FSubscriptionId=0PZ7TM66EXQCXFVTMTR2">Practical Artistry: Light &amp; Exposure for Digital Photographers</a> by Harold Davis. I&#8217;m not complaining in the slightest bit, just mystified. I&#8217;m a reader of Harold&#8217;s <a href="http://www.digitalfieldguide.com/blog/">blog</a>, and his choice of nature subjects is pretty close to mine, so I&#8217;ve always appreciated his photographs. This book is aimed a people who are trying to learn (and subsequently master) the basics of exposure, which puts it squarely in competition with Bryan Peterson&#8217;s <a href="http://www.sauria.com/blog/2005/10/12#1396">Understanding Exposure</a>, which is a book that every photographer really ought to read.</p>
<p>So how does Davis&#8217; work stand up when compared to Peterson&#8217;s? The basic sections are strong, and either book is fine in this respect. I think that Understanding Exposure has more of an emphasis on the creative aspects of photography, and does a better job of helping the reader understand how to achieve particular creative effects by manipulating exposure. In particular, for beginners, Peterson gives stronger guidance on specific values for apertures and shutter speeds, that can be helpful to people that don&#8217;t have much of a background.</p>
<p>On the other hand, I think that Davis has a much better section on understanding and using the in-camera light meters. I have the revised version of Understanding Exposure, which is updated for digital cameras, but Light &amp; Exposure for Digital Photographers is really much more up to date for the digital age. There is a good discussion on ISO, and how to use ISO as part of the exposure control. Along with that there is an excellent discussion on noise and the use of noise in the creative process. I was glad to find some treatment of white balance. One of the easiest ways to pick out inexperienced photographer&#8217;s pictures is to look at the white balancing of the pictures. There is also a chapter on post-processing and RAW processing, a topic to which entire books are devoted, but I think it is helpful for people to understand the role of post-processing in the digital age.</p>
<p>As you would expect with a photography book, there are lots of pictures. As I mentioned, Davis&#8217; preference in nature subjects is close to mine, so I really enjoyed the pictures, and there is lots of commentary accompanying each photograph. The photos in Peterson&#8217;s book are more diverse in subject matter, which is probably better from a teaching point of view.</p>
<p>At the end, though, I like both books. For the stage that I am at photographically, I have a slight preference for Peterson&#8217;s Understanding Exposure. I am working hard on the creative aspects of my photography, so I am in a frame of mind to be biased towards Peterson&#8217;s treatment. Light &amp; Exposure for Digital Photographers is also a very good book, and I would have no problem recommending it to a beginning photographer. I certainly got something out of reading it (and probably could stand to read each book a few more times). The subject matter in these books is so important that one of these two books should be included in the box with every DSLR sold.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/30/book-review-practical-artistry-light-exposure-for-digital-photographers/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Tim and Twitterbucks</title>
		<link>http://www.sauria.com/blog/2008/05/29/tim-and-twitterbucks/</link>
		<comments>http://www.sauria.com/blog/2008/05/29/tim-and-twitterbucks/#comments</comments>
		<pubDate>Thu, 29 May 2008 18:50:23 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[community]]></category>

		<category><![CDATA[internet]]></category>

		<category><![CDATA[twitter]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/29/tim-and-twitterbucks/</guid>
		<description><![CDATA[So Tim Bray wants to make sure that Twitter stays around, and therefore wants a business model for Twitter. I&#8217;d like it to stay around too, which means there has to be a business model for it, but I&#8217;m not sure that directly charging people for it is the right model. I don&#8217;t have any [...]]]></description>
			<content:encoded><![CDATA[<p>So Tim Bray <a href="http://www.tbray.org/ongoing/When/200x/2008/05/28/Twitterbucks">wants</a> to make sure that Twitter stays around, and therefore wants a business model for Twitter. I&#8217;d like it to stay around too, which means there has to be a business model for it, but I&#8217;m not sure that directly charging people for it is the right model. I don&#8217;t have any visibility into Twitter&#8217;s economics, but I do have some decent visibility into my usage of the service. All of Tim&#8217;s proposals for Twitter are predicated on the notion of wanting to &#8220;reach people&#8221;. He also cited the classification of Twitter as microblogging, which might be sort of accurate, but which doesn&#8217;t capture the whole situation, at least not for me.</p>
<p>My usage of twitter breaks down into several categories:</p>
<p><strong>Reaching people</strong> in the sense that Tim means. This breaks down by category into several groups, some overlapping: technologists, photographers. These are tweets of links, facts, ideas and so forth. This is the most blogging/microblogging usage of Twitter</p>
<p><strong>Random spicy commentary about nothing</strong> This is just random information about me, the virtual equivalent of the water cooler at work. These tweets add color, but probably are devoid of directly useful information. Alhough you never know how people might use intimate knowledge of your lunch habits.</p>
<p><strong>Social banter</strong> One of the twitter tribes that I am in is the local Seattle Flickr tribe. This group is one of the reasons that Facebook became sticky for me, at least for a time. That pretty much stopped when a critical mass of those folks discovered twitter. These tweets are where people are, what they are having for lunch, dinner, etc. They play the role of building a social fabric which is essential for that group to be as <a href="http://flickr.com/groups/strobist/discuss/72157605139232408/">successful</a> as it has become.</p>
<p><strong>Social arranging</strong> This happens because of the SMS Twitter gateway and accessibility of Twitter via mobile devices. Twitter killed whatever usage I might have had on Dodgeball. When I am at conferences, Twitter has become an essential part of the hallway/after hours track. So much so that this usage will drive me to buy a 3G class web enabled telephone, as soon as Jobs announces it.</p>
<p>So there are many usages besides &#8220;reaching people&#8221; in a blogging like sense, and it&#8217;s not clear to me that some of these usages would continue if Twitter raised the bar by charging for usage. For the social connections part, reducing the ubiquity of the service is a real negative. The value of Twitter would definitely be reduced by cutting out people who couldn&#8217;t/wouldn&#8217;t afford to pay for it, like starving aspiring photographers.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/29/tim-and-twitterbucks/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Notes on A History of Erlang</title>
		<link>http://www.sauria.com/blog/2008/05/28/notes-on-a-history-of-erlang/</link>
		<comments>http://www.sauria.com/blog/2008/05/28/notes-on-a-history-of-erlang/#comments</comments>
		<pubDate>Thu, 29 May 2008 05:32:12 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[concurrency]]></category>

		<category><![CDATA[programming]]></category>

		<category><![CDATA[programming languages]]></category>

		<category><![CDATA[dynamic languages]]></category>

		<category><![CDATA[erlang]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/28/notes-on-a-history-of-erlang/</guid>
		<description><![CDATA[Joe Armstrong wrote a paper for last year&#8217;s HOPL-III conference on the history of Erlang. For some reason, I didn&#8217;t get a paper copy of those proceedings, and was too busy to notice their absence. Fortunately Lambda the Ultimate picked it up and supplied links to the paper and the accompanying presentation. Digging into the [...]]]></description>
			<content:encoded><![CDATA[<p>Joe Armstrong wrote a paper for last year&#8217;s HOPL-III conference on the history of Erlang. For some reason, I didn&#8217;t get a paper copy of those proceedings, and was too busy to notice their absence. Fortunately Lambda the Ultimate <a href="http://lambda-the-ultimate.org/node/2811">picked it up</a> and supplied links to the paper and the accompanying presentation. Digging into the history of something like Erlang is always fascinating, and Armstrong has done a good job of explaining how Erlang came to be.</p>
<p>Here are a bunch of quotes on topics that I found interesting. I&#8217;ve grouped them into categories, but searching the PDF of the paper shouldn&#8217;t be hard if you want to know where they originated.</p>
<p><strong>Sources of inspiration</strong></p>
<p>Those familiar with Prolog will not find it at all surprising that Erlang has its roots in Prolog (mostly due to implementation reasons). What I did find interesting was the origin/history/viewpoint on the concurrency model</p>
<blockquote>
<p>The explanations of what Erlang was have changed with time:</p>
<p>1. 1986 – Erlang is a declarative language with added concurrency.</p>
<p>2. 1995 – Erlang is a functional language with added concurrency.</p>
<p>3. 2005 – Erlang is a concurrent language consisting of communicating components where the components are written in a functional language.</p>
<p>&#8230;</p>
<p>Today we emphasize the concurrency.</p>
</blockquote>
<p>Note that the word actor never appears in those descriptions. Indeed, the word actor does not appear in the paper at all. So for all the discussion about Erlang&#8217;s usage of the actor model, it appears that the Erlang folks independently duplicated many of the ideas for Hewitt&#8217;s Actors. I think that is kind of interesting.</p>
<p>Lisp and Smalltalk are cited as inspirations, but more for the implementation of the runtime than for any features in the language. I came away from the paper with the impression that Armstrong and his colleagues are not paradigm ideologues. They are trying to get the job done.</p>
<p><strong>Reliability</strong></p>
<p>There is a huge emphasis on reliability throughout the paper, supporting Steve Vinoski&#8217;s <a href="http://steve.vinoski.net/blog/2008/05/01/erlang-its-about-reliability/">remarks</a> about Erlang. I&#8217;l just include a series of quotes, which you can interpret as you see fit:</p>
<blockquote>
<p>Erlang was designed for writing concurrent programs that &#8220;run forever&#8221;</p>
</blockquote>
<p></p>
<blockquote>
<p>At an early stage we rejected any ideas of sharing resources between processes because of the difficulty of error handling. In many circumstances, error recovery is impossible if part of the data needed to perform the error recovery is located on a remote machine and if that remote machine has crashed.</p>
</blockquote>
<p></p>
<blockquote>
<p>In order to make systems reliable, we have to accept the extra cost of copying data structures between processes and always make sure that processes have enough data to continue by themselves if other processes crash</p>
</blockquote>
<p></p>
<blockquote>
<p>The key observation here is to note that the error-handling mechanisms were designed for building fault-tolerant systems, and not merely for protecting from program exceptions. You cannot build a fault-tolerant system if you only have one computer. The minimal conﬁguration for a fault-tolerant system has two computers. These must be conﬁgured so that both observe each other. If one of the computers crashes, then the other computer must take over whatever the ﬁrst computer was doing.</p>
</blockquote>
<p></p>
<blockquote>
<p>This means that the model for error handling is based on the idea of two computers that observe each other. Error detection and recovery is performed on the remote computer and not on the local computer.</p>
</blockquote>
<p></p>
<blockquote>
<p>Links in Erlang are provided to control error propagation paths for errors between processes.</p>
</blockquote>
<p></p>
<blockquote>
<p>It was about this time that we realized very clearly that shared data structures in a distributed system have terrible properties in the presence of failures. If a data structure is shared by two physical nodes and if one node fails, then failure recovery is often im-possible. The reason why Erlang shares no data structures and uses pure copying message passing is to sidestep all the nasty problems of ﬁguring out what to replicate and how to cope with failures in a distributed system.</p>
</blockquote>
<p></p>
<blockquote>
<p>In our world, we were worried by software failures where replication does not help.</p>
</blockquote>
<p><strong>Design criteria</strong></p>
<p>Here are some quotes related the design criteria for Erlang.</p>
<blockquote>
<p>Changing code on the fly was an initial key requirement</p>
</blockquote>
<blockquote>
<p>the notion that three properties of a programming language were central to the efﬁcient operation of a concurrent language or operating system. These were:</p>
<p>1) the time to create a process</p>
<p>2) the time to perform a context switch between two different processes</p>
<p>3) the time to copy a message between two processes</p>
<p>The performance of any highly-concurrent system is dominated by these three times.</p>
</blockquote>
<blockquote>
<p>One of the earliest design decisions in Erlang was to use a form of buffering selective receive</p>
</blockquote>
<p></p>
<blockquote>
<p>Pipes were rejected in favor of messages</p>
</blockquote>
<p></p>
<blockquote>
<p>In the concurrent logic programming languages, concurrency is implicit and extremely ﬁne-grained. By comparison Erlang has explicit concurrency (via processes) and the processes are coarse-grained.</p>
</blockquote>
<blockquote>
<p>The ﬁnal strategy we adopted after experimenting with many different strategies was to use per-process stop-and-copy GC. The idea was that if we have many thousands of small processes then the time taken to garbage collect any individual process will be small.</p>
<p>&#8230;</p>
<p>Current systems run with tens to hundreds of thousands of processes and it seems that when you have such large numbers of processes, the effects of GC in an individual process are insigniﬁcant.</p>
</blockquote>
<blockquote>
<p>The BEAM compiler compiled Erlang programs to BEAM instructions.</p>
</blockquote>
<p><strong>On functionalness</strong><strong><br /></strong><br />
This next series of quotes will probably make the pure functional language people shake their heads, but i think that it&#8217;s important to understand Erlang in contrast with pure functional languages.</p>
<blockquote>
<p>Erlang is not a strict side-effect-free functional language but a concurrent language where what happens inside a process is described by a simple functional language.</p>
</blockquote>
<p></p>
<blockquote>
<p>Behaviors in Erlang can be thought of as parameterizable higher-order parallel processes.</p>
</blockquote>
<p></p>
<blockquote>
<p>&#8230; the status of Erlang as a fully ﬂedged member of the functional family is dubious. Erlang programs are not referentially transparent and there is no system for static type analysis of Erlang programs. Nor is it relational language. Sequential Erlang has a pure functional subset, but nobody can force the programmer to use this subset; indeed, there are often good reasons for not using it.</p>
</blockquote>
<p></p>
<blockquote>
<p>An Erlang system can be thought of as a communicating network of black boxes.</p>
<p>In the Erlang case, the language inside the black box just happens to be a small and rather easy to use functional language, which is more or less a historical accident caused by the implementation techniques used.</p>
</blockquote>
<p><strong>History and Usage</strong></p>
<p>One thing that I was looking for in the paper was more details on how long Erlang had been around (besides before Java), how big the largest programs/systems were, and so forth. Here is what I found.</p>
<blockquote>
<p>This history spans a twenty-year period&#8230;</p>
</blockquote>
<p>(The history starts in 1986)</p>
<blockquote>
<p>The largest ever system built in Erlang was the AXD301. At the time of writing, this system has 2.6 millions lines of Erlang code.</p>
<p>&#8230;</p>
<p>The AXD301 is written using distributed Erlang. It runs on a cluster using pairs of processors and is scalable up to 16 pairs of processors.</p>
<p>&#8230;</p>
<p>In the analysis of the AXD reported in [7], the AXD used 20 supervision trees, 122 client-server models, 36 event loggers and10 ﬁnite-state machines. All of this was programmed by a team of 60 programmers.</p>
<p>&#8230;</p>
<p>As regards reliability, the AXD301 has an observed nine-nines reliability [7]—and a four-fold increase in productivity was observed for the development process [31].</p>
</blockquote>
<p>The AXD 301 is circa 1998.</p>
<blockquote>
<p>Perhaps the most exciting modern development is Erlang for multicore CPUs. In August 2006 the OTP group released Erlang for an SMP.</p>
</blockquote>
<p>This corroborates something that David Pollak told me at the RedMonk unconference during CommunityOne, namely that SMP support in Erlang had not been there very long. Of course, Erlang was running on systems with 16 physical (pairs, no less) of processings in a distributed environment. So while the runtime might not be that mature on SMP, the overall runtime for concurrency is probably a bit more mature than that. Nonetheless, worthwhile to know the precise facts.</p>
<p>All in all, I found the paper to be a very worthwhile read - (and a nice change from my usual intake of blog posts and tweets). One of my pet peeves about the computer business is the lack of awareness of the history of the field. At least I&#8217;ve removed a bit of my own ignorance as relates to Erlang.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/28/notes-on-a-history-of-erlang/feed/</wfw:commentRss>
		</item>
		<item>
		<title>The Scala vs Erlang whirlwind</title>
		<link>http://www.sauria.com/blog/2008/05/22/the-scala-vs-erlang-whirlwind/</link>
		<comments>http://www.sauria.com/blog/2008/05/22/the-scala-vs-erlang-whirlwind/#comments</comments>
		<pubDate>Fri, 23 May 2008 00:01:13 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[concurrency]]></category>

		<category><![CDATA[programming]]></category>

		<category><![CDATA[programming languages]]></category>

		<category><![CDATA[dynamic languages]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/22/the-scala-vs-erlang-whirlwind/</guid>
		<description><![CDATA[Over the last week or two there&#8217;s been a bit of commotion with various parties in the blogosphere making the case for Scala against Erlang or for Erlang against Scala. Here&#8217;s a see spot run summary of the main writers and their positions / content:

Ted Neward (1, 2) - Ted (how confusing) is in the [...]]]></description>
			<content:encoded><![CDATA[<p>Over the last week or two there&#8217;s been a bit of commotion with various parties in the blogosphere making the case for Scala against Erlang or for Erlang against Scala. Here&#8217;s a see spot run summary of the main writers and their positions / content:</p>
<blockquote>
<p>Ted Neward (<a href="http://blogs.tedneward.com/2008/05/09/Thinking+In+Language.aspx">1</a>, <a href="http://blogs.tedneward.com/2008/05/18/Clearly+Thinking+Whether+In+Language+Or+Otherwise.aspx">2</a>) - Ted (how confusing) is in the Scala camp, and thinks that the library approach of Scala&#8217;s actor library is preferable to Erlang&#8217;s VM (BEAM). He cites managability as a major concern. He also thinks that adapting a process style model into the JVM would be easier than adding SNMP monitoring to BEAM. The length of the Barcelona project <a href="http://research.sun.com/projects/barcelona/">bibliography</a> suggests otherwise, but we&#8217;ll never know unless some brave soul goes and tries to do this. Fortunately, the JDK is open source now. One has to wonder whether such a change could make its way through the JCP, though. Unfortunately for Ted, I found that many of his arguments were weakened by his lack of knowledge about Erlang.</p>
<p>Steve Vinoski (<a href="http://steve.vinoski.net/blog/2008/05/01/erlang-its-about-reliability/">1</a>, <a href="http://steve.vinoski.net/blog/2008/05/09/thinking-in-language-but-not-clearly/">2</a>, <a href="http://steve.vinoski.net/blog/2008/05/18/clearly-time-to-end-this/">3</a>) - Steve&#8217;s articles are more about the reliability aspects of Erlang, and he&#8217;s mostly trying to correct Ted&#8217;s facts on Erlang. He thinks that Erlang had proven its reliability chops by running for years non-stop. Given the frequency with which Java app servers need to be (or are) bounced, this doesn&#8217;t seem that incredible to me.</p>
<p>Patrick Logan (<a href="http://patricklogan.blogspot.com/2008/05/little-knowledge.html">1</a>, <a href="http://patricklogan.blogspot.com/2008/05/toward-finer-tuning-of-definitions-of.html">2</a>, <a href="http://patricklogan.blogspot.com/2008/05/this-is-part-two-of-my-response-to-ted.html">3</a>) - Patrick piled on after Steve and has spent most of his writing trying to correct/challenge Ted&#8217;s assertions about Erlang. Patrick thinks that the conventional (i.e. JVM and CLR) runtimes will have problems implementing an Erlang style shared-nothing model, since the pre-existing libraries for those runtimes are not engineered in a shared-nothing manner.</p>
<p>Barry Kelly was an observer of the Neward-Vinosk-Logan discussion, and added some <a href="http://barrkel.blogspot.com/2008/05/in-defense-of-steve-vinoski-and-erlang.html">commentary</a> on the impact of VM primitives on things like lift. This is a point which resonates with me, because it seems to me that both languages and language runtimes will need some work to meet the challenges of large scale multicore computing.</p>
<p>Yariv Sadan has done a pile of stuff in Erlang, and supplied his own <a href="http://yarivsblog.com/articles/2008/05/18/erlang-vs-scala/">summary</a> of the differences between Scala and Erlang. There is a very informative exchange between Yariv and lift author <a href="http://blog.lostlake.org/">David Pollak</a> in the comments of this one.</p>
</blockquote>
<p>That&#8217;s the short rundown. This is a very interesting problem space &#8212; before I turned into database programming language guy in graduate school, I was angling to be a concurrent programming language guy. Along the way to that I got pretty good doses of functional and logic programming, as well as actor programming. That work was in the context of people planning to build (for the day) highly concurrent computers, on the order of 1000&#8217;s of processors. Today, multicore hardware is not quite up to that level, but it is approaching it pretty quickly. If there is any force in computing that is likely to precipitate the need for a new programming ecosystem (language, runtime, libraries), I think concurrent programming is it. I also think there is just not enough experience with this problem to have a real sense of what is really going to work. Cliff Click and Brian Goetz <a href="http://blogs.azulsystems.com/cliff/2008/05/javaone.html">were right</a> when they said that we just don&#8217;t have a good programming model for this stuff. Absent a model, I don&#8217;t know how we can think that we really understand what the runtime needs to deliver.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/22/the-scala-vs-erlang-whirlwind/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Jython Users at Europython</title>
		<link>http://www.sauria.com/blog/2008/05/21/jython-users-at-europython/</link>
		<comments>http://www.sauria.com/blog/2008/05/21/jython-users-at-europython/#comments</comments>
		<pubDate>Wed, 21 May 2008 19:57:25 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[java]]></category>

		<category><![CDATA[python]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/21/jython-users-at-europython/</guid>
		<description><![CDATA[I&#8217;ve been asked to moderate a Jython panel at Europython this year, and we are looking for Jython users to be represented on the panel. So if you are a Jython user and you are gong to be at Europython, please drop me a note or leave a comment.
]]></description>
			<content:encoded><![CDATA[<p>I&#8217;ve been asked to moderate a Jython panel at <a href="http://www.europython.org/">Europython</a> this year, and we are looking for Jython users to be represented on the panel. So if you are a Jython user and you are gong to be at Europython, please drop me a note or leave a comment.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/21/jython-users-at-europython/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Book Review: The Photographer&#8217;s Eye</title>
		<link>http://www.sauria.com/blog/2008/05/16/book-review-the-photographers-eye/</link>
		<comments>http://www.sauria.com/blog/2008/05/16/book-review-the-photographers-eye/#comments</comments>
		<pubDate>Fri, 16 May 2008 18:57:18 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[books]]></category>

		<category><![CDATA[photography]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/16/book-review-the-photographers-eye/</guid>
		<description><![CDATA[Learning to lighting has done a lot for my photography. It&#8217;s not just gaining a new appreciation for light of all kinds, but also the fact that lit photographs have cause me to think about photographs differently. I used to be a much more reactive photographer - I would just be waiting for moments to [...]]]></description>
			<content:encoded><![CDATA[<p>Learning to lighting has done a lot for my photography. It&#8217;s not just gaining a new appreciation for light of all kinds, but also the fact that lit photographs have cause me to think about photographs differently. I used to be a much more reactive photographer - I would just be waiting for moments to happen in order to capture them. Now, I&#8217;ve become a little more thoughtful about what I want to the end picture to look like, even in situations that are fairly fast moving. Improving my grasp of composition is definitely something that I am working on.</p>
<p>My <a href="http://www.sauria.com/blog/2006/04/19">favorite book</a> on photographic composition was <a href="http://www.amazon.com/gp/redirect.html%3FASIN=0817454276%26tag=tedleungonthe-20%26lcode=xm2%26cID=2025%26ccmID=165953%26location=/Photographic-Composition-Tom-Grill/dp/0817454276%253FSubscriptionId=0PZ7TM66EXQCXFVTMTR2">Photographic Composition</a> by Tom Grill and Mark Scanlon. At least it was until I read Michael Freeman&#8217;s <a href="http://www.amazon.com/gp/redirect.html%3FASIN=0240809343%26tag=tedleungonthe-20%26lcode=xm2%26cID=2025%26ccmID=165953%26location=/Photographers-Eye-Composition-Design-Digital/dp/0240809343%253FSubscriptionId=0PZ7TM66EXQCXFVTMTR2">The Photographer&#8217;s Eye: Composition and Design for Better Digital Photos</a>.The entire first chapter is all about framing, which is the most extensive treatment that I&#8217;ve seen so far. In addition to a treatment of the usual compositional elements, there&#8217;s also a chapter on design basics, which I definitely needed some help with (and probably still do). Perhaps the best chapter of all is the last one on process, where Freeman walks through a case study or two, showing how he prepared and then composed a picture in a photojournalistic setting. Learning someone else&#8217;s thought process always seems to yield a bump up for me, much more so than just learning the straight mechanics.</p>
<p>Of course, with all things photographic, it&#8217;s not enough to read the book and understand it. The trick is putting it all into practice.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/16/book-review-the-photographers-eye/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Scala liftoff</title>
		<link>http://www.sauria.com/blog/2008/05/14/scala-liftoff/</link>
		<comments>http://www.sauria.com/blog/2008/05/14/scala-liftoff/#comments</comments>
		<pubDate>Thu, 15 May 2008 05:55:52 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[concurrency]]></category>

		<category><![CDATA[java]]></category>

		<category><![CDATA[programming]]></category>

		<category><![CDATA[programming languages]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/14/scala-liftoff/</guid>
		<description><![CDATA[I stayed around in San Francisco for one more day after JavaOne, in order to attend the Scala liftoff. The liftoff was an open space style conference (which has a more specific meaning than &#8220;unconference&#8221;, at least to me). My friend Kaliya Hamlin did a great job of facilitating the day.

Scala has steadily been gaining [...]]]></description>
			<content:encoded><![CDATA[<p>I stayed around in San Francisco for one more day after JavaOne, in order to attend the <a href="http://scalaliftoff.com/liftoff/">Scala liftoff</a>. The liftoff was an open space style conference (which has a more specific meaning than &#8220;unconference&#8221;, at least to me). My friend <a href="http://unconference.net/">Kaliya Hamlin</a> did a great job of facilitating the day.</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2494186628/"><img src="http://farm4.static.flickr.com/3261/2494186628_d088703534.jpg" height="333" width="500" alt="Scala liftoff 2008" /></a></p>
<p><a href="http://www.scala-lang.org/">Scala</a> has steadily been gaining attention, and hasn&#8217;t yet hit (at least in my eyes) the hype part of the classic <a href="http://en.wikipedia.org/wiki/Hype_cycle">Gartner hype cycle</a>. I&#8217;ve been poking about with Scala, mostly because of the type inferencing, the <a href="http://lamp.epfl.ch/~phaller/actors.html">Actor library</a>, and <a href="http://liftweb.net">lift</a>. I have great respect for the work that Martin Odersky has done over the years, which also has me interested. Couple that with what I learned about closures in Java at JavaOne, and the list of reasons to look more deeply at Scala is getting long, especially if you are determined to have a statically typed languages.</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2493363523/"><img src="http://farm4.static.flickr.com/3230/2493363523_f2362c2f77.jpg" height="333" width="500" alt="Scala liftoff 2008" /></a></p>
<p>I wasn&#8217;t able to make it to any of sessions on lift. It just worked out that other sessions overlapped them in a pathological way. While this is unfortunate, I am sure that I&#8217;ll be able to pick up anything that I need from the mailing lists and other documentation. I was able to attend two sessions on actors. One of the sessions had people with questions about actors, but no Scala actor experts were in that group. There was some discussion of <a href="http://en.wikipedia.org/wiki/Pi-calculus">Pi-calculus</a> and the j<a href="http://en.wikipedia.org/wiki/Join_calculus">oin calculus</a>, but no discussion of the actual <a href="http://en.wikipedia.org/wiki/Actor_model_theory">actor theory</a>.</p>
<p>Steve Yen&#8217;s session on <a href="http://code.google.com/p/actord/">actor-d</a> was pretty useful. Steve set out to build a version of memcached using Scala&#8217;s actors. He spent most of his slot talking about Scala/Java isms that he ran into - this was important since he was comparing to the C memcached. By the time he got to the actor related stuff, he was almost out of time. Steve found that he had to remove actors from the main loop of his server in order to get sufficient performance. He wanted to get statistics from the server in the background and discovered that he main loop actor was always processing messages and was never idle long enough to report statistics. He ended up replacing the actor with plain old Java Threads (POJT?). This was in addition to all the fact that he ran into many of the standard Java problems as well. I&#8217;m not sure what to conclude from this. I don&#8217;t recall what kind of hardware he was on, and I am not convinced that he had the right architecture for an actor based system. Some of his experience also seemed contrary to what the lift folks have been claiming. I think that we are in for a decent amount of investigation here. One of Martin&#8217;s statements about Scala is that it is possible (and better) to extend the language via libraries than via actual language constructs. For the most part, I agree with this, but there are certain extensions which have interactions with the runtime - like concurrency. In those cases, I don&#8217;t see how the library approach allows taking advantage of runtime features. The current version of Scala actors is implemented as a library.</p>
<p>One of the things that I am currently working on is support for Python in NetBeans, so I dropped into the session on IDE support for Scala. With the exception of IntelliJ, none of the IDE plugin principals were present, so it was hard to have a really productive discussion. Martin did attend the session and we talked about the possibiliy of getting hooks into the existing Scala compiler, particularly the parser and the type inferencer. That could yield some big dividends for people working on IDE support. One IDE feature that I would like to see is the ability to hit a key, and have the IDE &#8220;light up&#8221; all the inferred types, overlaid on the existing program code. This would allow developers to see if their intuition about the types actually matched that of the type inferencer. I&#8217;d like a feature like this for Python/Ruby/Groovy/Javascript code as well. Further discussion was deferred to the scala-tools mailing list.</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2494184680/"><img src="http://farm4.static.flickr.com/3103/2494184680_991395d10b.jpg" height="333" width="500" alt="Scala liftoff 2008" /></a></p>
<p>The other session that I participated in was the session on Scala community and governance. Several people wondered about this during Kaliya&#8217;s &#8220;What questions do you have about Scala&#8221; portion of the schedule building. When nobody else put up a session in this area, I grabbed a slot, hoping to spur some conversation - if for no other reason than my own education. Fortunately, Martin had already been thinking about the problem. He is going to adopt a Python style governance, with him (and EPFL) having the final say on language design matters. There will be Scala Enhancement Proposals (SEPs), like the Python PEPs. I&#8217;m very happy with this. I think that Python has done very well at maintaining the balance between (lots) of community input on the language design, while still retaining that &#8220;quality without a name&#8221;. One of the things that I said during the CommunityOne general session panel was that particular individuals in the right place, at the right time, matter at great deal. After watching Martin for the day, and seeing his interactions on the mailing list over the last few months, I think that the design of Scala is in very good hands.</p>
<p>We also talked about the evolution of the Scala libraries. The <a href="http://scalax.scalaforge.org/">Scalax</a> project is working to build a set of utility libraries for Scala. Martin views scalax as a place where anyone can submit a library, have it tested, vetted, reworked, etc. Eventually some code in scalax would be candidates for addition to the Scala standard libraries. This also seems like a sane approach to me. I like the idea of having a place for libraries to shakeout before going into the standard libraries. Martin also mentioned a LINQ in Scala project. I need to track that one down too.</p>
<p>It is good to be in a multi-language world again. There&#8217;s room for Scala, Python, Ruby, and others. Another language that I am keeping my eye on is <a href="http://gbracha.blogspot.com/2008/05/future-of-newspeak.html">Newspeak</a>.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/14/scala-liftoff/feed/</wfw:commentRss>
		</item>
		<item>
		<title>JavaOne 2008: Part 2</title>
		<link>http://www.sauria.com/blog/2008/05/13/javaone-2008-part-2/</link>
		<comments>http://www.sauria.com/blog/2008/05/13/javaone-2008-part-2/#comments</comments>
		<pubDate>Wed, 14 May 2008 04:48:56 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[Sun]]></category>

		<category><![CDATA[java]]></category>

		<category><![CDATA[javaone2008]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/13/javaone-2008-part-2/</guid>
		<description><![CDATA[I&#8217;ve been to so many conferences and seen so many talks that it&#8217;s hard for me to really get excited about conference presentations. I went to talks here and there, but nothing at JavaOne was really reaching out at grabbing me (in fairness, this happens at other conferences also, so it&#8217;s not just JavaOne). Or [...]]]></description>
			<content:encoded><![CDATA[<p>I&#8217;ve been to so many conferences and seen so many talks that it&#8217;s hard for me to really get excited about conference presentations. I went to talks here and there, but nothing at JavaOne was really reaching out at grabbing me (in fairness, this happens at other conferences also, so it&#8217;s not just JavaOne). Or at least that was true until the last day.</p>
<p>Friday opened with a keynote by James Gosling, who served as the MC for a train of presenters on various cool projects.</p>
<p><strong>Cool stuff</strong></p>
<p>First up was Tor Norbye, who has done a lot of good work on support for editing different languages in <a href="http://www.netbeans.org/">NetBeans</a>. Tor has been working on JavaScript support for NetBeans 6.1, and he showed off some cool features, like detecting all the exits from a function, semantic highlighting of variables, and integrated debugging between NetBeans and Firefox. All of which was cool. When I was managing the Cosmo group at OSAF, I tried a bunch of Javascript IDE&#8217;s and never really liked any of them. I haven&#8217;t done a lot with NetBeans 6.1 yet, but I will. Tor showed one feature, which was the killer one for me. NetBeans knows what Javascript will work in which browser. You can configure the IDE for the browsers that you want to support, and this affects code completion, quick fix checking and so on. Definitely useful. Here are <a href="http://wiki.netbeans.org/JavaScript">several</a> <a href="http://marxsoftware.blogspot.com/2008/03/netbeans-61-javascript-ide.html">more</a> <a href="http://blogs.sun.com/tor/entry/netbeans_javascript_ruby">references</a> on the Javascript support in NetBeans 6.1.</p>
<p><strong>The Java Platform</strong></p>
<p>It&#8217;s easy for me (and others, I&#8217;d bet) to think mostly of JavaEE or perhaps JavaME when thinking about Java. That&#8217;s understandable given the worlds fixation on web applications, and looking ahead to mobile. But the majority of the talks in Gosling&#8217;s keynote session had nothing to do with Java SE, EE, or ME (at least in the phone sense).</p>
<p>Probably the hit (applause meter wise) of the keynote was <a href="http://www.livescribe.com/">LiveScribe</a>&#8217;s demonstration of their Pulse Smart Pen. This is an interesting pen that records the ink strokes that it makes, and any ambient audio that it records while the writing is happening. The ink and audio can be uploaded to a computer, as long as that computer runs Windows (apparently a Mac version is in the works). Unfortunately, the pen works by sensing marks on a special paper (that would be the razor blades), so there&#8217;s a limitation on how useful this can be. The presenter said that a future version of the software would allow people to print their own special paper, but that&#8217;s still a future item for now. By reading special marks on the special paper, you get a pretty cool user interface. The pen itself can run Java programs, and there is a developer kit available for it. If they can get by the limitation of special paper, I think that this is going to be pretty interesting.</p>
<p><a href="http://www.sentilla.com/">Sentilla</a> showed off their Mote hardware, which seem like RFID chips that can run Java programs. except that these RFID chips can form mesh networks amongst themselves and can have various kinds of sensors attached. There are lots of applications for these things, going well beyond inventory tracking and such.</p>
<p>Sun Distinguished Engineer Greg Bollella demonstrated Blue Wonder, which is a replacement for the computers used to control factories. Blue Wonder combines off the shelf x86 hardware, Solaris, and real time Java to provide a commodity solution for factory control applications. This is far afield of Web 2.0 applications, but just as cool, in my mind.</p>
<p>By the end of the keynote I was reminded of the long reach of the JVM platform, something that I&#8217;d lost sight of. The latest craze in the Web 2.0 space is location data &#8212; O&#8217;Reilly has an entire conference devoted to the topic. I think that sensor fusion of various kinds (not just location sensors) is going to play a big role in the next generation of really interesting applications. The JVM looks like it&#8217;s going to be a part of that. I don&#8217;t think than any other virtual machine technology is close in this regard.</p>
<p><strong>Java&#8217;s future</strong></p>
<p>I also went to a talk on <a href="https://maxine.dev.java.net/">Maxine</a>, a meta-circular JVM. By the twitter reactions of the JRuby and Jython committers, I&#8217;d say that Maxine is going to get some well deserved attention when it is open sourced in June. I&#8217;m particularly interested because the PI&#8217;s for Maxine worked on PJava, and <a href="http://research.sun.com/projects/barcelona/">MVM</a>. Given the <a href="http://www.sauria.com/blog/2008/04/29/erlang-cgi/">differences between the Erlang VM and the JVM</a>, I think that the ability to experiment with MVM is going to be pretty interesting. Apparently, there&#8217;s already some form of MVM support in Maxine - we&#8217;ll find out for sure in June.</p>
<p>During the conference I had a meeting with <a href="http://weblogs.java.net/blog/cayhorstmann/">Cay Horstmann</a>, and at the end of the meeting Josh Bloch saw Cay and wanted to talk to him about the BGGA closures proposal for Java. Turns out that Josh has an entire slide deck which consists of a stream of examples where BGGA does the wrong thing, generates really cryptic error messages, or requires an unbelievable amount of code. The fact that BGGA depends on generics, which are already really hard, doesn&#8217;t give me much confidence about closures in Java. If you are a statically typed language fan, I think that you ought to be worried about whether Java, the language, has any headroom left.</p>
<p>The last session that I went to was <a href="http://blogs.azulsystems.com/cliff/2008/05/javaone.html">Cliff Click</a> and <a href="http://www.briangoetz.com/blog/">Brian Goetz</a>&#8217;s session on concurrency. Unsurprisingly, the summary of the talk is &#8220;abandon all hope, ye who enter here&#8221;. I was glad to see a section in the talk about hardware support/changes for concurrency. The problem is that concurrency is going to introduce end-to-end problems, from the hardware all the way up to the application level, and I think that every stop along the way is going to be affected. Unlike sequential programming, where we are still largely reinventing the wheels of the past, there is no real previous history of research results to be mined for concurrency. Hotspot and other VM&#8217;s are close to implementing most of the tricks learned from Smalltalk and Lisp, but those systems were mostly used in a sequential fashion, and while there were experiments with concurrency, there was much less experience with the concurrent systems than the sequential ones. Big challenges ahead.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/13/javaone-2008-part-2/feed/</wfw:commentRss>
		</item>
		<item>
		<title>JavaOne 2008: Part 1</title>
		<link>http://www.sauria.com/blog/2008/05/13/javaone-2008-part-1/</link>
		<comments>http://www.sauria.com/blog/2008/05/13/javaone-2008-part-1/#comments</comments>
		<pubDate>Wed, 14 May 2008 01:17:04 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[Sun]]></category>

		<category><![CDATA[java]]></category>

		<category><![CDATA[javaone2008]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/13/javaone-2008-part-1/</guid>
		<description><![CDATA[JavaOne is a pretty intense experience, simply by virtue of the size. If CommunityOne was twice the size of OSCON, then JavaOne is three times the size of OSCON, and it shows . There was an immediate change in feel and atmosphere once JavaOne got into full swing. You could barely move sometimes, and there [...]]]></description>
			<content:encoded><![CDATA[<p>JavaOne is a pretty intense experience, simply by virtue of the size. If CommunityOne was twice the size of OSCON, then JavaOne is three times the size of OSCON, and it shows . There was an immediate change in feel and atmosphere once JavaOne got into full swing. You could barely move sometimes, and there were a bunch of people whose job was to corral the crowds into some semblance of order.</p>
<p style="text-align: center;"><img src="http://farm3.static.flickr.com/2063/2489075174_0d8f0b555b.jpg" height="500" width="333" alt="JavaOne 2008" /></p>
<p>As a Sun employee, I was on a restricted badge, which made it hard to get into sessions (you are basically flying standby). On the other hand, I had plenty to do. I participated in a dynamic languages panel for press and analysts (who have their own track), which was pretty fun. The discussion was lively enough that we could have gone for another hour. There was one persistent fellow who really wanted there to be just one language, or wanted us to declare language X better for task Y. When I got started in computing, people learned and worked in several languages. Its only been recently that a language (Java) was popular enough that people could just learn one language, and the growth of web applications pretty much guarantees a multi-language future because of server side and client side differences. In the end, we&#8217;re back to finding and using the best tool for the job, or at least the most comfortable tool for the job. This is probably going to cause heartburn for big IT shops, but developers seem to be happy about it.</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2489001510/"><img src="http://farm3.static.flickr.com/2242/2489001510_fb3de2bef8.jpg" height="500" width="333" alt="JavaOne 2008" /></a></p>
<p style="text-align: left;">I took a walk through the Java Pavilion with Tim Bray one afternoon. He got into the AMD booth&#8217;s aromatherapy display (and yes, he has a similar shot of me doing the same thing). One of the highlights of that excursion was Tim introducing me to <a href="http://research.sun.com/people/mybio.php?c=394">Dan Ingalls</a>, who made a number of very substantial contributions to Smalltalk, including its original VM and the BitBlt graphics operation. I am a great admirer of the work that was done in Smalltalk, and it was an honor to meet Dan and have him explain the <a href="http://research.sun.com/projects/dashboard.php?id=176">Lively Kernel</a> to me. A short (and probably not quite fair) description of the Lively Kernel is to take the lessons learned from Smalltalk/Squeak and implement them in the browser using Javascript, AJAX, and SVG.</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2489004878/"><img src="http://farm3.static.flickr.com/2282/2489004878_3d73853092.jpg" height="333" width="500" alt="JavaOne 2008" /></a></p>
<p>Unsurprisingly, I got the most value at JavaOne from the networking. And that means dinners, hallway conversations, and yes, the parties. Usually when I go to conferences, I am just a party attender. This time, I also worked at some of the parties. It was a little different to walk around the SDN party wearing a t-shirt with &#8220;SDN Event Staff&#8221; painted large on the back. I still had a good time. Between the T-shirt and the camera, I definitely had some good conversations.</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2488229923/"><img src="http://farm4.static.flickr.com/3253/2488229923_1b927e8f12.jpg" height="333" width="500" alt="JavaOne 2008" /></a></p>
<p>Another benefit of being at a huge is company is that they can really throw a big party. Like hiring <a href="http://www.smashmouth.com/">Smash Mouth</a> to play for a private concert:</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2490377887/"><img src="http://farm4.static.flickr.com/3201/2490377887_54734d1967.jpg" height="333" width="500" alt="JavaOne 2008" /></a></p>
<p>I&#8217;ve uploaded the rest of my photos from the conference to this Flickr <a href="http://www.flickr.com/photos/twleung/sets/72157604908686388/">set</a>.</p>
<p>I actually do have some technical commentary, but I am going to put that into another post.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/13/javaone-2008-part-1/feed/</wfw:commentRss>
		</item>
		<item>
		<title>CommunityOne</title>
		<link>http://www.sauria.com/blog/2008/05/07/communityone/</link>
		<comments>http://www.sauria.com/blog/2008/05/07/communityone/#comments</comments>
		<pubDate>Wed, 07 May 2008 16:30:43 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[Sun]]></category>

		<category><![CDATA[open source]]></category>

		<category><![CDATA[communityone2008]]></category>

		<category><![CDATA[twitter]]></category>

		<category><![CDATA[zfs]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/07/communityone/</guid>
		<description><![CDATA[Live or semi liveblogging conferences has been getting more and more difficult for me to do. The combination of meetings, networking/parties, and photographs means that it takes longer to assemble the requisite material. Here&#8217;s a bit on CommunityOne, which took place on Monday.
Many people (mostly Sun folks) have been asking me if this is my [...]]]></description>
			<content:encoded><![CDATA[<p>Live or semi liveblogging conferences has been getting more and more difficult for me to do. The combination of meetings, networking/parties, and photographs means that it takes longer to assemble the requisite material. Here&#8217;s a bit on CommunityOne, which took place on Monday.</p>
<p>Many people (mostly Sun folks) have been asking me if this is my first JavaOne. My answer is, &#8220;it&#8217;s not, but it is my first one in ten years&#8221;. It&#8217;s been quite some time since I&#8217;ve been to a conference run by a big company like Sun (as opposed to an O&#8217;Reilly or open-source community conference). Even though the basics are the same, I definitely feel a kind of culture shock. I was asked to be on a panel during the general session, first thing in the morning, in order to get miked up and to run though the flow. Production values are much higher than I am used to. I keep thinking of CommunityOne as a small event, but in reality it is huge. I am told that registration was around 5000 people, which is twice the size of OSCON, which is the largest conference that I&#8217;ve been to in the last 4 or 5 years. Some pictures might help with the scale and production values:</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2470603680" title="View 'CommunityOne 2008' on Flickr.com"><img src="http://farm3.static.flickr.com/2385/2470603680_a6e7dcc721.jpg" alt="CommunityOne 2008" border="0" width="500" height="333" /></a></p>
<p style="text-align: center;"><img src="http://farm3.static.flickr.com/2110/2469781263_631485303e.jpg" alt="CommunityOne 2008" border="0" width="500" height="333" /><a href="http://www.flickr.com/photos/51035696189@N01/2470604892" title="View 'CommunityOne 2008' on Flickr.com"></a></p>
<p>The panel was on community models, although the content was closer to the edge where companies and open source communities meet/collaborate/fight. I think that I had two or three chances to speak, including the final set of remarks before the close of the panel. I have some more thoughts on that topic, but they are deserving of their own post, so that will be showing up after JavaOne is over.</p>
<p>Probably my favorite thing that happened at CommunityOne was the demonstration of ZFS&#8217;s reliability in the face of hardware failures. Sun Fellow Jim Hughes has demonstrated this a few times at Sun Tech days, and I&#8217;ve been meaning to write about that. I got to meet Jim before the keynote, and I had a very good seat to observe the hardware failure.</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2470604512" title="View 'CommunityOne 2008' on Flickr.com"><img src="http://farm4.static.flickr.com/3282/2470604512_3de22692ec.jpg" alt="CommunityOne 2008" border="0" width="500" height="333" /></a><a href="http://www.flickr.com/photos/51035696189@N01/2470603680" title="View 'CommunityOne 2008' on Flickr.com"></a></p>
<p>Jim usually destroys 2 of the drives in the ZFS pool, and it looked like Rich Green (EVP of Software) was going to get to smash the other one, until Jeff Bonwick, the inventor of ZFS, showed up to do the honors himself.</p>
<p style="text-align: center;"><a href="http://www.flickr.com/photos/51035696189@N01/2470604892" title="View 'CommunityOne 2008' on Flickr.com"><img src="http://farm4.static.flickr.com/3289/2470604892_d88a1e3d77.jpg" alt="CommunityOne 2008" border="0" width="500" height="333" /></a><a href="http://www.flickr.com/photos/51035696189@N01/2470604512" title="View 'CommunityOne 2008' on Flickr.com"></a></p>
<p>Smashing things makes for cool demos - you can watch the <a href="http://www.sun.com/featured-articles/2008-0505/commone/index.jsp?intcmp=hp2008may05_opensol_buz">video</a> replay if you like.. I&#8217;ve been paying more attention to ZFS ever since Theo Schlossnagle sat with me and a few other people in a bar at ApacheCon in Atlanta last year. We were talking about the voracious storage needs of photographers, and Theo was really singing the praises of ZFS. There were so important things that happened to ZFS for OpenSolaris 00805 (which was launched at CommunityOne). The most important is that you can now boot off of a ZFS volume. I hope (but don&#8217;t know for sure) that the work that made this possible will make it possible for Macs to boot off of a ZFS volume. My photo storage is getting all fragmented, and I could really put ZFS to good use. I suppose that I could build a ZFS storage appliance based on <a href="http://www.sun.com/storagetek/openstorage/index.jsp">OpenStorage</a>, but at the moment that is more work that I want to do.</p>
<p>I spent much of the rest of CommunityOne at the Redmonk unconference. I was drafted for an impromptu discussion on dynamic and other programming languages, which included a drop in from David Pollak, developer of the very cool <a href="http://liftweb.net/">lift</a> framework for <a href="http://www.scala-lang.org/">Scala</a>, and organizer of the <a href="http://scalaliftoff.com/liftoff/">Scala liftoff</a> which is happening on Saturday, right after JavaOne. There was also a very active session on Twitter - probably the biggest of the unconference. <strike>Jim</strike> Jay <strike>Evans</strike> Edwards from Twitter came along to participate in that one</p>
<p style="text-align: center;"><img src="http://farm3.static.flickr.com/2324/2470606872_9956a8dee3.jpg" alt="CommunityOne 2008" border="0" width="333" height="500" /></p>
<p style="text-align: left;">I have a bunch more <a href="http://www.flickr.com/photos/twleung/sets/72157604908686388/">photos</a> from CommunityOne. At the rate that things are going, I will probably just do a single post on JavaOne. There are plenty of other people doing liveblogging, for those who need a bigger information flow.</p>
<p style="text-align: left;"><strong>Update</strong>: corrected Jay Edwards&#8217; name. Thanks to @monkchips</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/07/communityone/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Next Stop: CommunityOne/JavaOne</title>
		<link>http://www.sauria.com/blog/2008/05/02/next-stop-communityonejavaone/</link>
		<comments>http://www.sauria.com/blog/2008/05/02/next-stop-communityonejavaone/#comments</comments>
		<pubDate>Fri, 02 May 2008 18:04:54 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[Sun]]></category>

		<category><![CDATA[twitter]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/02/next-stop-communityonejavaone/</guid>
		<description><![CDATA[I&#8217;ll be in San Francisco for CommunityOne and JavaOne. My schedule is fairly full for CommunityOne, but I am only on the hook for one official program thing during JavaOne. I&#8217;ll be around till the end of the Scala liftoff unconference on Saturday the 10th.
The last time I attended JavaOne was when I worked on [...]]]></description>
			<content:encoded><![CDATA[<p>I&#8217;ll be in San Francisco for CommunityOne and JavaOne. My schedule is fairly full for CommunityOne, but I am only on the hook for one official program thing during JavaOne. I&#8217;ll be around till the end of the <a href="http://scalaliftoff.com/liftoff/">Scala liftoff</a> unconference on Saturday the 10th.</p>
<p>The last time I attended JavaOne was when I worked on porting Java to the Newton back in the late 90s, almost 10 years ago. I have no doubt that it will be quite the madhouse. If you&#8217;d like to get together, you can leave a comment, or send mail. Once the conference starts, the best way to reach me will likely be direct messaging me on Twitter, since that goes directly to my phone via text messaging. With any luck, this will be my last conference without a modern cellular/wifi handheld device. Bob Lee has posted a good <a href="http://crazybob.org/2008/05/going-to-javaone-sign-up-for-twitter.html">directory</a> of people to watch on Twitter.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/02/next-stop-communityonejavaone/feed/</wfw:commentRss>
		</item>
		<item>
		<title>The Open Screen project</title>
		<link>http://www.sauria.com/blog/2008/05/01/the-open-screen-project/</link>
		<comments>http://www.sauria.com/blog/2008/05/01/the-open-screen-project/#comments</comments>
		<pubDate>Fri, 02 May 2008 00:33:06 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[internet]]></category>

		<category><![CDATA[programming]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/05/01/the-open-screen-project/</guid>
		<description><![CDATA[Around this time last year, Adobe open sourced its Flex framework for rich internet applications. Today Adobe announced the Open Screen project, which encompasses a number of things, probably most importantly, the removal of the license restrictions on the SWF file format used by Flash. The other aspects of the announcement relate to Adobe&#8217;s Flash [...]]]></description>
			<content:encoded><![CDATA[<p>Around this time last year, Adobe <a href="http://www.sauria.com/blog/2007/04/25/adobe-open-sources-flex/">open sourced</a> its Flex framework for rich internet applications. Today Adobe announced the <a href="http://www.adobe.com/go/openscreenproject">Open Screen project</a>, which encompasses a number of things, probably most importantly, the removal of the license restrictions on the SWF file format used by Flash. The other aspects of the announcement relate to Adobe&#8217;s Flash Player, and while they are steps towards openness, Adobe&#8217;s player will remain closed. The importance of opening Adobe&#8217;s player has decreased because dropping the file format licensing should make things easier for the <a href="http://www.gnu.org/software/gnash/">Gnash</a> folks. The worry then is that we&#8217;ll end up with incompatible versions of Flash, which is in almost nobody&#8217;s interest. That&#8217;s probably the next problem that needs addressing.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/05/01/the-open-screen-project/feed/</wfw:commentRss>
		</item>
		<item>
		<title>(Finally) upgraded to Leopard</title>
		<link>http://www.sauria.com/blog/2008/04/30/finally-upgraded-to-leopard/</link>
		<comments>http://www.sauria.com/blog/2008/04/30/finally-upgraded-to-leopard/#comments</comments>
		<pubDate>Thu, 01 May 2008 00:36:42 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[Macintosh]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/04/30/finally-upgraded-to-leopard/</guid>
		<description><![CDATA[At the beginning of the month I got my work laptop, one of the early 2008 MacBook Pro&#8217;s. It came wit h 10.5.2 preinstalled, so I took the opportunity to upgrade to Leopard. It&#8217;s been an interesting experience sitting on the sidelines watching everyone else explore the new features, but I don&#8217;t regret it. I [...]]]></description>
			<content:encoded><![CDATA[<p>At the beginning of the month I got my work laptop, one of the early 2008 MacBook Pro&#8217;s. It came wit h 10.5.2 preinstalled, so I took the opportunity to upgrade to Leopard. It&#8217;s been an interesting experience sitting on the sidelines watching everyone else explore the new features, but I don&#8217;t regret it. I had a few hiccups moving things over, mostly related to installing Python packages. But I had fewer migration problems than I expected, especially given how customized a setup I am running.</p>
<p>Spotlight is actually fast now. It&#8217;s not absolutely lightning fast, but it is now fast enough to be usable, at least for me. This might also be partially related to the 7200RPM disk in the new laptop, but either way, I am happy, because this is <a href="http://www.sauria.com/blog/2007/06/11/wwdc-keynote-impressions/">the thing I wanted the most</a> from Leopard.. Well, except for the fact that <tt>mds</tt> still sometimes shows up as the top CPU consumer on the machine.</p>
<p>Mail.app improved a lot. There was a bug in the reply all command that made moderating Apache mailing lists a pain. Gone. Account setup, and more importantly, self-signed certificate support is hugely improved. No more trips to Keychain Access to make things work. If only it could remember the position of multiple viewer windows across restarts.</p>
<p>I used one of the virtual desktop managers on my Powerbook and then stopped, so I didn&#8217;t expect much out of Spaces. It turns out that spaces is actually pretty good. It works with multiple displays and plays well with Expose. I&#8217;m using it all the time I just wish there were shortcuts to go to a particular Space.</p>
<p>Against my better judgment, I&#8217;m using Time Machine for primary backups at the moment. This is due to an unfortunate fragmentation of external Firewire disks. After JavaOne I need to spend some time rearranging stuff on various hard drives, so that I can put a SuperDuper! backup into the rotation again. I don&#8217;t yet have complete faith in Time Machine&#8217;s reliability. Just yesterday, I successfully used Time Machine to save my bacon, and then later in the day, a Time Machine backup just failed with an error. Running Disk Utility over the backup disk didn&#8217;t find any problems, and after a reboot, backups seemed to work again. Doesn&#8217;t exactly inspire confidence, though. I also tried to use a USB disk that is attached an Airport Extreme, and Time Machine could never finish its initial backup. I like to work with a large display, so wireless Time Machine is not a huge deal to me, but it really ought to work. It&#8217;s likely to be several more point releases of 10.5 before I really feel like I can rely on Time Machine.</p>
<p>Quicklook is useful when I remember to use it. I&#8217;m getting tons of PDF slideshows in e-mail, and Quicklook is good for those. I really wish there was a Quicklook plugin that work on OpenOffice documents.</p>
<p>The next one is dumb but true. I really like having pictures for my desktop backgrounds. The translucent menu bar isn&#8217;t a factor in this. Apple provided a nice set of pictures for the backgrounds, and I have it set to rotate the background fairly often. All I need to do now is find some time to pull some of my own pictures into the rotation. The new animations for the picture folder screensaver is also cool - it drops the new pictures on top of the older ones, so that over time your screen looks like a pile of photographs.</p>
<p>On the infrastructure front, things seem a mixed bag. Things are snappy, but the machine also has 4GB of RAM in it. I have yet to see a kernel panic, but it seems less stable than 10.4. I&#8217;ve had a bunch of little problems: the issue with the Time Machine disk, loss of sounds after using Front Row to play a DVD, a bug that makes it impossible for file moves to work correctly in PathFinder, and syslog running amokfor no good reason. I had to turn off Growl because it was causing NetNewsWire refreshes to clog up. At the moment, anytime the machine makes a noise, the screen flashes (and yes, I did check the preferences for Universal Access). I&#8217;ve also been having a problem with my Firewire 800 disks just disappearing, sometimes during operations. Turning off one of the drives seems to be helping the problem, but that&#8217;s 500GB of storage that is offline. It makes me wish (again) that ZFS was going to be in 10.5.3, but alas, it will not. In any event, 10.5.3 will certainly be welcome. All these little problems are really starting to annoy me.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/04/30/finally-upgraded-to-leopard/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Erlang == CGI?</title>
		<link>http://www.sauria.com/blog/2008/04/29/erlang-cgi/</link>
		<comments>http://www.sauria.com/blog/2008/04/29/erlang-cgi/#comments</comments>
		<pubDate>Tue, 29 Apr 2008 21:12:31 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[concurrency]]></category>

		<category><![CDATA[programming languages]]></category>

		<category><![CDATA[dynamic languages]]></category>

		<category><![CDATA[erlang]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/04/29/erlang-cgi/</guid>
		<description><![CDATA[Jay Nelson, in the comments to Damien Katz&#8217;s Lisp as Blub:

The two relevant issues are system granularity and garbage collector behavior (if it is related to memory and garbage collection).
Erlang encourages an architecture of many small-granularity processes. To the extent that this approach is followed, failures are localized. It is possible to do this with [...]]]></description>
			<content:encoded><![CDATA[<p>Jay Nelson, in the comments to Damien Katz&#8217;s <a href="http://damienkatz.net/2008/04/lisp_as_blub.html">Lisp as Blub</a>:</p>
<blockquote>
<p>The two relevant issues are system granularity and garbage collector behavior (if it is related to memory and garbage collection).</p>
<p>Erlang encourages an architecture of many small-granularity processes. To the extent that this approach is followed, failures are localized. It is possible to do this with other languages, but erlang does encourage the approach more so than other languages.</p>
<p>The other difference is that erlang uses a single-threaded garbage collector per process. This makes the garbage collection process simpler, more finely grained and distributed. Smaller processes mean less complicated memory structures, and thus the language encourages a simpler model with localized garbage collection failure. Determining the cause of overburdened memory usage (or any other resource because of the localized nature of small processes) becomes easier.</p>
<p>An erlang system can get wedged, but following the principle of many small processes makes it less likely to happen than in other languages which encourage large processes with shared memory structures.</p>
</blockquote>
<p>It strikes me that this is a sort of CGI&#8217;ish view of the world (well except for the garbage collector). CGI scripts run, use (non-shared) resources, release them all and die. The entire post and comment thread is worth some pondering.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/04/29/erlang-cgi/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Speaking at OSCON 2008</title>
		<link>http://www.sauria.com/blog/2008/04/24/speaking-at-oscon-2008/</link>
		<comments>http://www.sauria.com/blog/2008/04/24/speaking-at-oscon-2008/#comments</comments>
		<pubDate>Thu, 24 Apr 2008 16:28:51 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[community]]></category>

		<category><![CDATA[open source]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/04/24/speaking-at-oscon-2008/</guid>
		<description><![CDATA[This year at OSCON, I&#8217;ll be giving a talk called Open Source Community Antipatterns, which is all about the many ways to mess up an open source community.

  


  

]]></description>
			<content:encoded><![CDATA[<p>This year at OSCON, I&#8217;ll be giving a talk called <a href="http://en.oreilly.com/oscon2008/public/schedule/detail/2682">Open Source Community Antipatterns</a>, which is all about the many ways to mess up an open source community.</p>
<p><center><br />
  <a href="http://conferences.oreilly.com/oscon"><img src="http://conferences.oreillynet.com/banners/oscon/speaker/oscon2008_banner_speaker_210x60.gif" width="210" height="60" border="0" alt="OSCON 2008" title="OSCON 2008" /></a><br />
</center><br />
<center><br />
  <br />
</center></p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/04/24/speaking-at-oscon-2008/feed/</wfw:commentRss>
		</item>
		<item>
		<title>Python at CommunityOne</title>
		<link>http://www.sauria.com/blog/2008/04/21/python-at-communityone/</link>
		<comments>http://www.sauria.com/blog/2008/04/21/python-at-communityone/#comments</comments>
		<pubDate>Tue, 22 Apr 2008 01:25:28 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[Sun]]></category>

		<category><![CDATA[community]]></category>

		<category><![CDATA[open source]]></category>

		<category><![CDATA[programming]]></category>

		<category><![CDATA[programming languages]]></category>

		<category><![CDATA[dynamic languages]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/04/11/python-at-communityone/</guid>
		<description><![CDATA[CommunityOne is a free and open developer conference that is run by Sun on the day before JavaOne. This year, there will a space at CommunityOne dedicated to the Python community, complete with whiteboards and wifi. If you are in the Bay Area for JavaOne, or in the Bay Area, or just plain interested in [...]]]></description>
			<content:encoded><![CDATA[<p><a href="http://developers.sun.com/events/communityone/">CommunityOne</a> is a free and open developer conference that is run by Sun on the day before JavaOne. This year, there will a space at CommunityOne dedicated to the Python community, complete with whiteboards and wifi. If you are in the Bay Area for JavaOne, or in the Bay Area, or just plain interested in Python, please register for CommunityOne &#8212; space is limited.</p>
<p>Registering for CommunityOne gets you a bag of swag, a free lunch the day of CommunityOne, access to all the CommunityOne events and sessions, and a free pass for Day 1 of JavaOne. When you <a href="https://www28.cplan.com/pgr/gr_form_builder.reg_login?icode=10178/1/96/en&amp;iurl=">register</a>, put &#8220;Python/Jython&#8221; in for the referral code.</p>
<p>I will be on a panel on community models during the general session from 9:30AM - 10:45AM, and <a href="http://fwierzbicki.blogspot.com/">Frank Wierzbicki</a> and I will be doing a Python/Jython panel. In addition to the usual developer stuff, there will also be a two day <a href="http://wiki.startupcamp.org/wiki/AboutStartupCamp">Startup Camp</a>, and the folks from <a href="http://redmonk.com/">RedMonk</a> will be back to do their day long unconference thing.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/04/21/python-at-communityone/feed/</wfw:commentRss>
		</item>
		<item>
		<title>On Science Fairs</title>
		<link>http://www.sauria.com/blog/2008/04/11/on-science-fairs/</link>
		<comments>http://www.sauria.com/blog/2008/04/11/on-science-fairs/#comments</comments>
		<pubDate>Sat, 12 Apr 2008 06:52:00 +0000</pubDate>
		<dc:creator>Ted Leung</dc:creator>
		
		<category><![CDATA[education]]></category>

		<category><![CDATA[family]]></category>

		<guid isPermaLink="false">http://www.sauria.com/blog/2008/04/11/on-science-fairs/</guid>
		<description><![CDATA[Last weekend the girls participated in the Washington State Science and Engineering Fair. I participated in science fairs from sixth through twelfth grade, so it was a familiar experience to me, at least in some ways. The basic premise is the same, which is that kids learn about the scientific process by doing experiments, creating [...]]]></description>
			<content:encoded><![CDATA[<p>Last weekend the girls participated in the <a href="http://www.wssef.org/">Washington State Science and Engineering Fair</a>. I participated in science fairs from sixth through twelfth grade, so it was a familiar experience to me, at least in some ways. The basic premise is the same, which is that kids learn about the scientific process by doing experiments, creating a display, and presenting their work to a panel of judges.</p>
<p>Our girls are at the age where learning and building up excitement over science is more important than winning, but in the high school division the stakes are higher than I remember them being. When I did fairs, the top rewards were some kind of monetary award in the $50-$100 dollar range, and the chance to compete at the International Science Fair (now the <a href="http://www.societyforscience.org/isef/index.asp">Intel International Science and Engineering Fair</a>). There is still all of that, although the slate of special awards is much much longer. Also, there were a number of college scholarships (some of them for 4 years) being awarded. Several students won enough scholarships to go to college several times over. Julie told me that last year an 8th grade girl won one of those scholarships. Another significant change from my science fair days, was the number of women participating. The gender ratios looked much better than what I remember, and the top two students, the ones going on to the Intel Fair, were women. The Kitsap Sun did a <a href="http://www.kitsapsun.com/news/2008/apr/04/junior-scientists-probe-everyday-mysteries/">pair</a> of <a href="http://www.kitsapsun.com/news/2008/apr/05/sequim-spokane-students-take-top-honors-at-state/">articles</a> on the fair.</p>
<p>A few notes about homeschoolers, since our girls are homeschooled. The people that organize the fair made a big effort to get homeschooled children involved. Apparently, kids in regular schools are too busy, between trying to pass the WASL (thanks No Child Left Behind) and sports, to participate significantly in a science fair. Indeed, the two top ranked academic districts, Mercer Island, and Bainbridge Island, were barely represented, if at all. In contrast, homeschoolers took 1/7th of the 35 first place awards given in the 1st-6th grades, a pretty impressive showing. It will be interesting to watch how/if these children progress over the years.</p>
<p>These fairs are an important way to expose kids to science and to help them develop enthusiasm, curiosity, and an understanding of how science works. If you&#8217;re reading this blog, you are aware of the importance of science and engineering for the future of our country and for all mankind, really. I just wish that there were more kids entering these fairs.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.sauria.com/blog/2008/04/11/on-science-fairs/feed/</wfw:commentRss>
		</item>
	</channel>
</rss>
