<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'><id>tag:blogger.com,1999:blog-1693831864832387340</id><updated>2008-06-09T22:38:28.665+01:00</updated><title type='text'>SPE IDE - Stani's Python Editor</title><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/'/><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>17</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-6888357714381095885</id><published>2008-03-31T12:45:00.011+01:00</published><updated>2008-03-31T23:36:33.608+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='wxpython'/><category scheme='http://www.blogger.com/atom/ns#' term='gstreamer'/><category scheme='http://www.blogger.com/atom/ns#' term='howto'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>How to write a wxPython video player with Gstreamer</title><content type='html'>wxPython ships by default with the wx.MediaCtrl for very basic playback of music or videos. As I would like to do more advanced video manipulation, I was curious if I could use Gstreamer directly in wxPython to create my own pipelines. It was surprisingly easy.&lt;br /&gt;For those who don't know Gstreamer, I quote the website (http://www.gstreamer.org): &lt;blockquote&gt;GStreamer is a library that allows the construction of graphs of media-handling components, ranging from simple playback to complex audio (mixing) and video (non-linear editing) processing. Applications can take advantage of advances in codec and filter technology transparently.&lt;/blockquote&gt;&lt;br /&gt;&lt;br /&gt;There are python bindings for it, of which the documentation can be found on &lt;a href="http://pygstdocs.berlios.de"&gt;http://pygstdocs.berlios.de&lt;/a&gt;&lt;br /&gt;I would also suggest to read these introductions to gstreamer &amp;amp; python:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.cin.ufpe.br/~cinlug/wiki/index.php/Introducing_GStreamer"&gt;Introducing Gstreamer&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.jonobacon.org/?p=750"&gt;Getting started with GStreamer with Python&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.jonobacon.org/?p=851"&gt;Using Gnonlin with GStreamer and Python&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;I translated the video player example 2.2 of the tutorial from pyGtk to wxPython:&lt;br /&gt;&lt;a href="http://pygstdocs.berlios.de/pygst-tutorial/playbin.html"&gt;http://pygstdocs.berlios.de/pygst-tutorial/playbin.html&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;It should be straightforward to use this as a base for implementing your own pipelines. I work on Ubuntu, where I could install everything straight from the standard repositories.&lt;br /&gt;&lt;br /&gt;Here is the source code:&lt;br /&gt;&lt;blockquote&gt;&lt;pre&gt;#!/usr/bin/env python&lt;br /&gt;#Example 2.2 http://pygstdocs.berlios.de/pygst-tutorial/playbin.html&lt;br /&gt;&lt;br /&gt;import sys, os&lt;br /&gt;import wx&lt;br /&gt;import pygst&lt;br /&gt;pygst.require("0.10")&lt;br /&gt;import gst&lt;br /&gt;&lt;br /&gt;import gobject&lt;br /&gt;gobject.threads_init()&lt;br /&gt;&lt;br /&gt;class WX_Main(wx.App):&lt;br /&gt;  &lt;br /&gt;   def OnInit(self):&lt;br /&gt;       window = wx.Frame(None)&lt;br /&gt;       window.SetTitle("Video-Player")&lt;br /&gt;       window.SetSize((500, 400))&lt;br /&gt;       window.Bind(wx.EVT_CLOSE,self.destroy)&lt;br /&gt;       vbox = wx.BoxSizer(wx.VERTICAL)&lt;br /&gt;       hbox = wx.BoxSizer(wx.HORIZONTAL)&lt;br /&gt;       self.entry = wx.TextCtrl(window)&lt;br /&gt;       hbox.Add(self.entry, 1, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 4)&lt;br /&gt;       self.button = wx.Button(window,label="Start")&lt;br /&gt;       hbox.Add(self.button, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 4)&lt;br /&gt;       self.button.Bind(wx.EVT_BUTTON, self.start_stop)&lt;br /&gt;       vbox.Add(hbox, 0, wx.EXPAND, 0)&lt;br /&gt;       self.movie_window = wx.Panel(window)&lt;br /&gt;       vbox.Add(self.movie_window,1,wx.ALL|wx.EXPAND,4)&lt;br /&gt;       window.SetSizer(vbox)&lt;br /&gt;       window.Layout()&lt;br /&gt;       window.Show()&lt;br /&gt;       self.SetTopWindow(window)&lt;br /&gt;      &lt;br /&gt;       self.player = gst.element_factory_make("playbin", "player")&lt;br /&gt;       bus = self.player.get_bus()&lt;br /&gt;       bus.add_signal_watch()&lt;br /&gt;       bus.enable_sync_message_emission()&lt;br /&gt;       bus.connect('message', self.on_message)&lt;br /&gt;       bus.connect('sync-message::element', self.on_sync_message)&lt;br /&gt;      &lt;br /&gt;       return True&lt;br /&gt;      &lt;br /&gt;   def start_stop(self, event):&lt;br /&gt;       if self.button.GetLabel() == "Start":&lt;br /&gt;           filepath = self.entry.GetValue()&lt;br /&gt;           if os.path.exists(filepath):&lt;br /&gt;               self.button.SetLabel("Stop")&lt;br /&gt;               self.player.set_property('uri',"file://" + filepath)&lt;br /&gt;               self.player.set_state(gst.STATE_PLAYING)&lt;br /&gt;       else:&lt;br /&gt;           self.player.set_state(gst.STATE_NULL)&lt;br /&gt;           self.button.SetLabel("Start")&lt;br /&gt;                      &lt;br /&gt;   def on_message(self, bus, message):&lt;br /&gt;       t = message.type&lt;br /&gt;       if t == gst.MESSAGE_EOS:&lt;br /&gt;           self.player.set_state(gst.STATE_NULL)&lt;br /&gt;           self.button.SetLabel("Start")&lt;br /&gt;       elif t == gst.MESSAGE_ERROR:&lt;br /&gt;           self.player.set_state(gst.STATE_NULL)&lt;br /&gt;           self.button.SetLabel("Start")&lt;br /&gt;  &lt;br /&gt;   def on_sync_message(self, bus, message):&lt;br /&gt;       if message.structure is None:&lt;br /&gt;           return&lt;br /&gt;       message_name = message.structure.get_name()&lt;br /&gt;       if message_name == 'prepare-xwindow-id':&lt;br /&gt;           imagesink = message.src&lt;br /&gt;           imagesink.set_property('force-aspect-ratio', True)&lt;br /&gt;           imagesink.set_xwindow_id(self.movie_window.GetHandle())&lt;br /&gt;          &lt;br /&gt;   def destroy(self,event):&lt;br /&gt;       #Stop the player pipeline to prevent a X Window System error&lt;br /&gt;       self.player.set_state(gst.STATE_NULL)&lt;br /&gt;       event.Skip()&lt;br /&gt;          &lt;br /&gt;app = WX_Main()&lt;br /&gt;app.MainLoop()&lt;br /&gt;&lt;/pre&gt;&lt;/blockquote&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2008/03/howto-write-wxpython-video-player-with.html' title='How to write a wxPython video player with Gstreamer'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=6888357714381095885' title='2 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/6888357714381095885/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/6888357714381095885'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/6888357714381095885'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-3300733520791613239</id><published>2008-03-25T12:59:00.004+01:00</published><updated>2008-03-25T13:07:08.441+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>SPE packaged for Mac OS X</title><content type='html'>&lt;span dir="ltr"&gt;&lt;a href="http://www.blogger.com/profile/02591842280854638602" onclick="" rel="nofollow"&gt;Krzysztof Olczyk&lt;/a&gt; did a wonderful job by packaging SPE for Mac OS X. &lt;/span&gt;You can download it here:&lt;br /&gt;&lt;a href="http://olczyk.krzysztof.googlepages.com/SPE.dmg"&gt;http://olczyk.krzysztof.googlepages.com/SPE.dmg&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;He commented:&lt;br /&gt;&lt;blockquote&gt;You can install now SPE in your Macintosh in a way you do with native applcation.&lt;br /&gt;Simply mount the DMG and drag the SPE to Applications folder.&lt;br /&gt;&lt;br /&gt;Another advantage is, that now SPE will have its own icon in dock, like any application in Mac.&lt;br /&gt;&lt;br /&gt;Have fun.&lt;/blockquote&gt;&lt;br /&gt;I will release soon SPE 0.8.4.e with some important bug fixes and I hope &lt;span dir="ltr"&gt;&lt;a href="http://www.blogger.com/profile/02591842280854638602" onclick="" rel="nofollow"&gt;Krzysztof Olczyk&lt;/a&gt; will update the package for the Mac.&lt;br /&gt;&lt;br /&gt;Please test the package and let Krystof know how it works.&lt;br /&gt;&lt;br /&gt;Thanks Krystof!&lt;br /&gt;Stani&lt;br /&gt;&lt;/span&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2008/03/spe-packaged-for-mac-os-x.html' title='SPE packaged for Mac OS X'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=3300733520791613239' title='6 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/3300733520791613239/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/3300733520791613239'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/3300733520791613239'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-9047381247359641914</id><published>2008-02-14T18:43:00.003+01:00</published><updated>2008-03-31T12:49:10.681+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>SPE 0.8.4.c Python IDE editor released</title><content type='html'>As SPE was being developed for more than a year in subversion, I thought it is time for a release again.  This is a major bugfix release. It ships updated plugins and also some new features, especially if you use Linux or Blender, for which Witold did a great job. Thanks to the big help of MOTU pochu, this is added to Ubuntu Hardy. I would also like to thank in particular the webhost  Zindep.com for their support and patience.&lt;br /&gt;&lt;br /&gt;New features:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;new versions of WinPdb debugger, PyChecker, wxGlade &amp;amp; XRCed gui designer&lt;/li&gt;&lt;li&gt;clear output pane&lt;/li&gt;&lt;li&gt;support for wxPython 2.8&lt;/li&gt;&lt;li&gt;linux support for  nautilus, gnome-terminal, konqueror, konsole, thunar&lt;/li&gt;&lt;li&gt;improved blender support up to 2.45 (by Witold)&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;Fixes:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;sidebar sash more tolerant&lt;/li&gt;&lt;li&gt;show path in title (linux)&lt;/li&gt;&lt;li&gt;run with filename with  spaces&lt;/li&gt;&lt;li&gt;nicer debug dialog box&lt;/li&gt;&lt;li&gt;                kill process fix&lt;/li&gt;&lt;li&gt;notebook&lt;/li&gt;&lt;li&gt;insert signature&lt;/li&gt;&lt;li&gt;numpad keys (by isolationism)&lt;/li&gt;&lt;li&gt;find tab with nonexisting files&lt;/li&gt;&lt;li&gt;add environment to SPE.py (linux)&lt;/li&gt;&lt;li&gt;better warning for documentation for unsaved files&lt;/li&gt;&lt;li&gt;better handling of new empty files&lt;/li&gt;&lt;li&gt;many more...&lt;/li&gt;&lt;/ul&gt;Installing on Debian(unstable) and Ubuntu Hardy:&lt;br /&gt;&lt;blockquote&gt;sudo apt-get install spe&lt;/blockquote&gt;Installing on all other platforms:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Download either the zip or tar ball from &lt;a href="http://developer.berlios.de/project/showfiles.php?group_id=4161"&gt;here&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Unzip it where you want and do NOT rename the _spe folder&lt;/li&gt;&lt;li&gt;Start SPE from within the _spe folder with "python SPE.py"&lt;br /&gt;&lt;/li&gt;&lt;/ol&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2008/02/spe-084c-python-ide-editor-released.html' title='SPE 0.8.4.c Python IDE editor released'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=9047381247359641914' title='30 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/9047381247359641914/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/9047381247359641914'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/9047381247359641914'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-4980758253910704301</id><published>2008-02-06T19:15:00.000+01:00</published><updated>2008-02-09T14:01:37.711+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>Howto install sK1, a powerful alternative for Illustrator on Ubuntu</title><content type='html'>This post is deprecated as &lt;span class="highlight"&gt;sk1&lt;/span&gt; now has an official ubuntu installer:&lt;br /&gt;&lt;a href="http://sk1project.org/modules.php?name=Products&amp;amp;product=sk1" target="_blank"&gt;http://sk1project.org/modules.php?na...ts&amp;amp;product=sk1&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;So this is for archival purposes only:&lt;br /&gt;&lt;br /&gt;Igor, the icon king of &lt;a href="http://photobatch.stani.be/"&gt;Phatch&lt;/a&gt;, asked me if I could get sk1 to work on Ubuntu Gutsy. After playing around I found a way. Try this on your own risk.&lt;br /&gt;&lt;br /&gt;I never heard about sk1 and looked it up on the website:&lt;br /&gt;http://sk1project.org/&lt;br /&gt;&lt;br /&gt;&lt;blockquote&gt;Why sk1project?&lt;br /&gt;&lt;br /&gt;We think that sK1 is a powerful illustration program for the Linux platform that can substitute professional proprietary software like CorelDRAW or Adobe Illustrator and we hope the program and its derivatives will be helpful for you.&lt;br /&gt;&lt;br /&gt;About sK1 vector graphics editor&lt;br /&gt;&lt;br /&gt;sK1 is an open source vector graphics editor similar to CorelDRAW, Adobe Illustrator, or Freehand.&lt;br /&gt;First of all sK1 is oriented for PostScript processing.&lt;br /&gt;The major sK1 features:&lt;br /&gt;&lt;br /&gt;* CMYK colorspace support&lt;br /&gt;* CMYK support in Postscript&lt;br /&gt;* Cairo-based engine&lt;br /&gt;* Color managment&lt;br /&gt;* Universal CDR importer (7-X3 versions)&lt;br /&gt;* Modern Ttk based (former Tile widgets) user interface&lt;/blockquote&gt;It looks quite impressive and in five steps you can have it up and running on your Ubuntu Gutsy. It is a KDE application.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;"&gt;1) Installing required modules&lt;/span&gt;&lt;br /&gt;Type this at a terminal:&lt;br /&gt;&lt;blockquote&gt;sudo apt-get install liblcms-utils python-liblcms python-imaging-tk kdebase-bin&lt;br /&gt;&lt;/blockquote&gt;&lt;span style="font-weight: bold;"&gt;2) Installing tcl/tk8.5&lt;/span&gt;&lt;br /&gt;Download the tk8.5 and tcl8.5 packages of Gustavo A. Díaz for the amsn project:&lt;br /&gt;http://download.tuxfamily.org/amsnskins/packages/ubuntu/tcl-tk/&lt;br /&gt;&lt;br /&gt;Open and install these files in this order with gdebi:&lt;br /&gt;&lt;a href="http://download.tuxfamily.org/amsnskins/packages/ubuntu/tcl-tk/tcl8.5_8.5.0-2_i386.deb"&gt;tcl8.5_8.5.0-2_i386.deb&lt;/a&gt;&lt;br /&gt;&lt;a href="http://download.tuxfamily.org/amsnskins/packages/ubuntu/tcl-tk/tk8.5_8.5.0-2_i386.deb"&gt;tk8.5_8.5.0-2_i386.deb&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;"&gt;3) Installing sk1&lt;/span&gt;&lt;br /&gt;Now download the latest version of sk1 from:&lt;br /&gt;http://sk1project.org/modules.php?name=Products&amp;amp;product=sk1&lt;br /&gt;&lt;br /&gt;And convert it to a debian installer:&lt;br /&gt;&lt;blockquote&gt;sudo alien sK1-0.9.0-rev324-0.mdv2008.i586.rpm&lt;/blockquote&gt;&lt;span style="font-weight: bold;"&gt;4) Patching sk1&lt;/span&gt;&lt;br /&gt;We need to patch this file:&lt;br /&gt;sudo gedit /usr/lib/python2.5/site-packages/sk1/app/managers/colormanager.py&lt;br /&gt;&lt;br /&gt;Replace there on line 9:&lt;br /&gt;&lt;blockquote&gt;from lcms import (...)&lt;/blockquote&gt;into&lt;br /&gt;&lt;blockquote&gt;from lcms.lcms import (...)&lt;/blockquote&gt;&lt;span style="font-weight: bold;"&gt;5) Start sk1&lt;/span&gt;&lt;br /&gt;Press Alt+F2 and type "sk1" at the terminal and sk1 is up and running! You can create a menu entry with alacarta or a desktop launcher with the command "sk1". I have not tested how well it works.&lt;br /&gt;&lt;br /&gt;This is a screenshot, turned into perspective with &lt;a href="http://photobatch.stani.be/"&gt;Phatch&lt;/a&gt;:&lt;br /&gt;&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp1.blogger.com/_KhIIKmJ4wWc/R6oAXFQJVNI/AAAAAAAAACU/gY2bNBohhU0/s1600-h/sk1_3d.png"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp1.blogger.com/_KhIIKmJ4wWc/R6oAXFQJVNI/AAAAAAAAACU/gY2bNBohhU0/s400/sk1_3d.png" alt="" id="BLOGGER_PHOTO_ID_5163940319280583890" border="0" /&gt;&lt;/a&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2008/02/howto-install-sk1-powerful-alternative.html' title='Howto install sK1, a powerful alternative for Illustrator on Ubuntu'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=4980758253910704301' title='13 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/4980758253910704301/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/4980758253910704301'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/4980758253910704301'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-9195939933475141901</id><published>2008-01-16T17:24:00.001+01:00</published><updated>2008-03-31T13:25:18.547+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Latest wxGlade, XRCed and Winpdb in subversion</title><content type='html'>So SPE is up to date again. The Winpdb debugger now features autocompletion. It is looking for a new &lt;a href="http://www.winpdb.org/?p=33"&gt;name&lt;/a&gt;, as most people associate win with Windows (while winpdb is being developed on ubuntu now). The new XRCed (gui designer for wxpython) looks really slick. This is a screenshot on ubuntu:&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp1.blogger.com/_KhIIKmJ4wWc/R44xqU2gWyI/AAAAAAAAACM/686Jzc8uucU/s1600-h/xrced.png"&gt;&lt;img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;" src="http://bp1.blogger.com/_KhIIKmJ4wWc/R44xqU2gWyI/AAAAAAAAACM/686Jzc8uucU/s400/xrced.png" border="0" alt=""id="BLOGGER_PHOTO_ID_5156113226607385378" /&gt;&lt;/a&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2008/01/latest-wxglade-xrced-and-winpdb-in.html' title='Latest wxGlade, XRCed and Winpdb in subversion'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=9195939933475141901' title='4 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/9195939933475141901/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/9195939933475141901'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/9195939933475141901'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-6471378795385265214</id><published>2007-11-01T17:24:00.000+01:00</published><updated>2007-11-01T17:28:12.999+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='howto'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>How to change or recreate your Desktop folder on Ubuntu</title><content type='html'>The default location of your Desktop folder is ~/Desktop. You might prefer another location. If you by accident deleted the Dekstop folder, it will be stuck in your Trash folder as you can't put it back. These two steps enable you to change or restore your desktop folder:&lt;br /&gt;&lt;blockquote&gt;gedit ~/.config/user-dirs.dirs&lt;br /&gt;killall nautilus&lt;/blockquote&gt;In step 1 look for this entry: XDG_DESKTOP_DIR. Make it like this: XDG_DESKTOP_DIR="$HOME/Desktop"&lt;br /&gt;Instead of step 2 you might also log off and log in again.&lt;br /&gt;&lt;br /&gt;This is only tested on Gutsy.</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/11/how-to-change-or-recreate-your-desktop.html' title='How to change or recreate your Desktop folder on Ubuntu'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=6471378795385265214' title='4 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/6471378795385265214/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/6471378795385265214'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/6471378795385265214'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-6108545235840572401</id><published>2007-10-31T21:50:00.000+01:00</published><updated>2007-11-01T17:14:43.713+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='howto'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>How to install pymedia on Ubuntu (Gutsy)</title><content type='html'>"&lt;a href="http://www.pymedia.org"&gt;Pymedia&lt;/a&gt; is a Python library for accessing and manipulating media files. It makes audio and video playback/creation a snap for even a newcomer to programming." There is a deb installer available for pymedia 1.3.5 but not for 1.3.7 So I decided to write this howto.&lt;br /&gt;&lt;br /&gt;First install all the dependencies:&lt;br /&gt;&lt;blockquote&gt;sudo apt-get install python-dev libogg-dev libvorbis-dev liblame-dev libfaad2-dev libasound2-dev python-pygame&lt;br /&gt;&lt;/blockquote&gt;(Pygame is not really necessary, but recommended.)&lt;br /&gt;&lt;br /&gt;Extract a download of pymedia-*.tgz and open a terminal in the extracted folder, so we can build pymedia:&lt;br /&gt;&lt;blockquote&gt;python setup.py build&lt;/blockquote&gt;&lt;br /&gt;This should display:&lt;br /&gt;&lt;blockquote&gt;Using UNIX configuration...&lt;br /&gt;&lt;br /&gt;OGG          : found&lt;br /&gt;VORBIS       : found&lt;br /&gt;FAAD         : found&lt;br /&gt;MP3LAME      : found&lt;br /&gt;VORBISENC    : found&lt;br /&gt;ALSA         : found&lt;br /&gt;Continue building pymedia ? [Y,n]:&lt;/blockquote&gt;&lt;br /&gt;If everything is found press Y&lt;br /&gt;&lt;br /&gt;Finally install pymedia:&lt;br /&gt;&lt;blockquote&gt;sudo python setup.py install&lt;/blockquote&gt;&lt;br /&gt;&lt;br /&gt;Test if pymedia installed correctly by typing this at the python shell:&lt;br /&gt;&lt;blockquote&gt;import pymedia&lt;/blockquote&gt;&lt;br /&gt;&lt;br /&gt;You may now proceed to the &lt;a href="http://www.pymedia.org/tut/"&gt;pymedia tutorials&lt;/a&gt;.</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/10/how-to-install-pymedia-on-ubuntu-gutsy.html' title='How to install pymedia on Ubuntu (Gutsy)'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=6108545235840572401' title='4 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/6108545235840572401/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/6108545235840572401'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/6108545235840572401'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-7846640742897119251</id><published>2007-10-22T12:12:00.000+01:00</published><updated>2007-11-01T20:19:30.099+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>SPE 0.8.4.b works fine in Ubuntu Gutsy</title><content type='html'>The latest version of SPE 0.8.4.b works very well in Ubuntu Gutsy. It is available through &lt;a href="http://pythonide.blogspot.com/2007/02/how-to-download-latest-spe-from_26.html"&gt;subversion&lt;/a&gt;. However the repository package is outdated, as it is still on 0.8.2.a  What SPE needs to solve this issue is a Debian packager with love for python. This is the related bug on launchpad, from which I quote Scott:&lt;br /&gt;"Ubuntu gets this package from Debian and it appears that it's been orphaned in Debian.&lt;br /&gt;(...) it'd be hugely helpful if someone concerned about spe would adopt it in Debian. There is a Debian Python Applications Team with active DD support, so you need not be a DD to do this."&lt;br /&gt;If you are not a packager it would be nice if you leave your comment on the launchpad bug. &lt;br /&gt;https://bugs.launchpad.net/ubuntu/+source/spe/+bug/124896&lt;br /&gt;So this gets more attention and will be fixed sooner as there is more demand. If someone steps up to package this for debian, I will release a new version of SPE.</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/10/spe-084b-works-fine-in-ubuntu-gutsy.html' title='SPE 0.8.4.b works fine in Ubuntu Gutsy'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=7846640742897119251' title='27 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/7846640742897119251/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/7846640742897119251'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/7846640742897119251'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-2144878863468334726</id><published>2007-09-02T19:27:00.000+01:00</published><updated>2007-09-02T19:35:56.780+01:00</updated><title type='text'>Winpdb 1.2.2, wxGlade0.6 &amp; XRCed 0.1.8-5...</title><content type='html'>...all landed in subversion (rev255). wxGlade and XRCed are taken from their repositories, so they might be bleeding edge. Thanks to Diaa Sami some issues on Windows are fixed (eg running files with spaces). Check out the new SPE in the usual way:&lt;blockquote&gt;&lt;pre&gt;svn checkout svn://svn.berlios.de/python/spe/trunk/_spe&lt;/pre&gt;&lt;/blockquote&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/09/winpdb-122-wxglade06-xrced-018-5.html' title='Winpdb 1.2.2, wxGlade0.6 &amp; XRCed 0.1.8-5...'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=2144878863468334726' title='25 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/2144878863468334726/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/2144878863468334726'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/2144878863468334726'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-5374535245432207059</id><published>2007-06-08T16:59:00.001+01:00</published><updated>2008-03-31T13:31:12.349+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='subversion'/><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><title type='text'>Latest wxGlade in SPE subversion</title><content type='html'>I've uploaded the latest wxGlade cvs into the subversion repository of SPE.</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/06/latest-wxglade-in-spe-subversion.html' title='Latest wxGlade in SPE subversion'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=5374535245432207059' title='10 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/5374535245432207059/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/5374535245432207059'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/5374535245432207059'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-7445205876182428641</id><published>2007-03-14T19:43:00.000+01:00</published><updated>2007-03-16T00:32:50.115+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='subversion'/><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><title type='text'>Last WinPdb debugger 1.0.9 in SPE subversion</title><content type='html'>&lt;iframe src="http://digg.com/api/diggthis.php?u=http://www.digg.com/linux_unix/Release_of_WinPdb_1_0_9_the_best_python_debugger_and_uploaded_to_SPE_svn" style="padding: 4px 0pt 2px 4px; background: rgb(255, 255, 255) none repeat scroll 0% 50%; float: right; margin-left: 10px; margin-bottom: 5px; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" frameborder="1" height="82" scrolling="no" width="55"&gt;&lt;/iframe&gt;The last version of &lt;a href="http://www.digitalpeers.com/pythondebugger/"&gt;WinPdb&lt;/a&gt; debugger 1.0.9 has hit the SPE 0.8.4 subversion repository. What is now especially nice is that when you debug a python file from SPE, WinPdb remembers it when you have to relaunch the script.  In case you don't know WinPdb:&lt;br /&gt;&lt;blockquote&gt;Winpdb is a GPL python debugger, with support for smart breakpoints,          multiple threads, namespace modification, embedded debugging, password encrypted communication          and speed of up to 20 times that of pdb.&lt;/blockquote&gt;What I like especially about WinPdb, is that it is perfect for gui debugging as it supports multiple threads, that you can change variables on the fly (with exec variable=new_value in the shell) and... the amazing speed for a debugger. It almost runs programs at normal speed. SPE gives you the option to start running a program normally and to let WinPdb break in from the moment you want to debug. WinPdb has been fixed for Ubuntu and Mac, so now it is the best open source python debugger for Linux, Mac and Windows.&lt;br /&gt;&lt;br /&gt;These are all the changes of 1.0.9:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;    Bug fix of bug 1654010 - window gets bigger on every session.&lt;/li&gt;&lt;li&gt;    Bug fix of bug 1373074 - 2 Window menus on mac.&lt;/li&gt;&lt;li&gt;    Bug fix of bug 1654011 - clipping long path names at the left.&lt;/li&gt;&lt;li&gt;    Bug fix of bug 1654009 - List indices are sorted wrong.&lt;/li&gt;&lt;li&gt;    Bug fix of bug 1610393 - Problems with wx-2.7.2-msw-unicode.&lt;/li&gt;&lt;li&gt;    Bug fix of bug 1481097 - "# -*- coding: " problem.&lt;/li&gt;&lt;li&gt;    + fixes for tons of unreported bugs.&lt;/li&gt;&lt;li&gt;    Feature request 1654155 - More compact variable list on OS X.&lt;/li&gt;&lt;li&gt;    Feature request 1446799 - Restarting.&lt;/li&gt;&lt;li&gt;    Feature request 1364935 - remember command line file.&lt;/li&gt;&lt;/ul&gt;In the latest release of SPE 0.8.3.c shipped with Winpdb 1.0.6 , so the changes of WinPdb might interest you as well:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Bug fix of bug 1358842 - Wrong terminal command in RHEL4.&lt;/li&gt;&lt;li&gt;Bug fix of bug 1559668 - not work with Ubuntu Dapper 6.06.&lt;/li&gt;&lt;li&gt;Bug fix of bug 1476311 - script launch fails with gnome-terminal.&lt;/li&gt;&lt;li&gt;Bug fix of bug 1492500 - Filtering should work anywhere.&lt;/li&gt;&lt;li&gt;Bug fix of bug 1445514 - Doesn't work with *.pyw scripts.&lt;/li&gt;&lt;li&gt;Bug fix of bug 1491470 - Slightly difficult to use a custom terminal in rpdb2.&lt;/li&gt;&lt;li&gt;Bug fix of bug 1546181 - Sort names alphabetically.&lt;/li&gt;&lt;li&gt;Bug fix of bug 1481097 - "# -*- coding: " problem.&lt;/li&gt;&lt;li&gt;Fixed exception handling on CPython 2.4.x and CPython 2.5.&lt;/li&gt;&lt;li&gt;Fixed some compatibility issues with wxPython 2.7.&lt;/li&gt;&lt;/ul&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/03/last-winpdb-debugger-109-in-spe.html' title='Last WinPdb debugger 1.0.9 in SPE subversion'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=7445205876182428641' title='5 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/7445205876182428641/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/7445205876182428641'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/7445205876182428641'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-6622278999946714042</id><published>2007-03-07T20:41:00.000+01:00</published><updated>2007-03-14T19:18:36.493+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><category scheme='http://www.blogger.com/atom/ns#' term='release'/><title type='text'>SPE: Call for testers!</title><content type='html'>I've been working a lot on fixing SPE and upgrading it with the latest plugins. The winpdb debugger no longer fails and wxGlade crashes are history. Is that not great? Are you eager to try it out yourself? Please do! Get it from &lt;a href="http://pythonide.blogspot.com/2007/02/how-to-download-latest-spe-from_26.html"&gt;subversion&lt;/a&gt; and test it for any critical bug, so I can iron it out. I have been patching a lot for Ubuntu users, who will be very pleased with this release, and I'd like to thank Jurjen a lot for his work on Mac issues. This is a definitely a release everyone should upgrade to, wether you use windows, mac or linux!&lt;br /&gt;&lt;br /&gt;Here is an overview what has been done:&lt;br /&gt;&lt;br /&gt;The focus in this release is bugfixing, plugin upgrades and compatibility with wxPython 2.8, but it also still works on wxPython 2.6&lt;br /&gt;&lt;br /&gt;Upgrades:&lt;br /&gt;- WinPdb to 1.0.8 (not fail in timely manner anymore)&lt;br /&gt;- wxGlade to latest cvs (support for wxWindows2.8)&lt;br /&gt;&lt;br /&gt;New features:&lt;br /&gt;- Save as copy&lt;br /&gt;- Clear output pane&lt;br /&gt;&lt;br /&gt;Fixes&lt;br /&gt;- output: escape html characters in  tab &amp; respect spaces&lt;br /&gt;- preserve file permissions and avoid erasing file&lt;br /&gt;- wxversion handling at startup&lt;br /&gt;- font dialog&lt;br /&gt;- recent files sorted by lowercase&lt;br /&gt;- default buttons on all dialog&lt;br /&gt;- mac: run terminal commands (jurjen)&lt;br /&gt;- mac: pychecker&lt;br /&gt;- ubuntu: switch to file&lt;br /&gt;- some critical bug fixes which could have crashed SPE in the past&lt;br /&gt;- much more ...&lt;br /&gt;&lt;br /&gt;PS. Winpdb does not work well on Mac &amp;amp; wxpython2.8 Nir is working on an update. So when it comes out it will be included with SPE.</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/03/spe-call-for-testers.html' title='SPE: Call for testers!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=6622278999946714042' title='22 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/6622278999946714042/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/6622278999946714042'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/6622278999946714042'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-4510175251081840998</id><published>2007-03-05T18:26:00.000+01:00</published><updated>2007-11-01T20:17:42.362+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='wxpython'/><category scheme='http://www.blogger.com/atom/ns#' term='pyxides'/><category scheme='http://www.blogger.com/atom/ns#' term='scintilla'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Pyxides brainstorm: generic 'fold explorer'</title><content type='html'>I posted on the &lt;a href="http://www2.blogger.com/img/gl.link.gif"&gt;pyxides mailing list&lt;/a&gt; a prototype of a 'fold explorer'. A fold explorer is different from a class explorer as it shows the folding hierarchy of a document as a tree. &lt;a href="http://groups.google.com/group/pyxides/tree/browse_frm/thread/d69dc30bc09bc654/0a47716fa15085af?rnum=1&amp;_done=%2Fgroup%2Fpyxides%2Fbrowse_frm%2Fthread%2Fd69dc30bc09bc654%3F#doc_46b445313a53323d"&gt;Why?&lt;/a&gt; The aim is to use the internal power of &lt;a href="http://www.scintilla.org/"&gt;Scintilla&lt;/a&gt; as much as possible. Scintilla supports 78 languages and a lot of them with folding. So the fold explorer enables any scintilla based editor to immediately support a whole range of languages. The fold explorer is also able to detect the start and end line of a node. If you right click any item in the tree, it will select the corresponding source. So later it should be possible with drag and drop items in a tree to reorganise your code. (Like in Leo, but without comments.) Now it uses 'picasso', a random style colorizer. For more information read the &lt;a href="http://groups.google.com/group/pyxides/browse_frm/thread/8c00ae275f5f9cf"&gt;this thread&lt;/a&gt; on the pyxides mailing list. (&lt;a href="http://groups.google.com/group/pyxides/subscribe"&gt;Join&lt;/a&gt; the mailing list!)&lt;br /&gt;&lt;br /&gt;Does anyone know how with python I could dynamically retrieve if a language support folding? That is the last missing piece.&lt;br /&gt;&lt;br /&gt;This screenshot shows how it parses its own python source:&lt;br /&gt;&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp3.blogger.com/_KhIIKmJ4wWc/RexV53s-3HI/AAAAAAAAAA4/__SimNF7Adk/s1600-h/Screenshot-Fold%2BExplorer%2BDemo-1.png"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp3.blogger.com/_KhIIKmJ4wWc/RexV53s-3HI/AAAAAAAAAA4/__SimNF7Adk/s400/Screenshot-Fold%2BExplorer%2BDemo-1.png" alt="" id="BLOGGER_PHOTO_ID_5038496535814265970" border="0" /&gt;&lt;/a&gt;&lt;br /&gt;Rob McMullen shows how it parses a C++ file:&lt;br /&gt;&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://bp2.blogger.com/_KhIIKmJ4wWc/RexWQns-3II/AAAAAAAAABA/8Tz69V0vZvc/s1600-h/cppfolded.png"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://bp2.blogger.com/_KhIIKmJ4wWc/RexWQns-3II/AAAAAAAAABA/8Tz69V0vZvc/s400/cppfolded.png" alt="" id="BLOGGER_PHOTO_ID_5038496926656289922" border="0" /&gt;&lt;/a&gt;&lt;br /&gt;Here is the source code if you want to try it out for yourself. You need to have wxPython installed to run it. It is a nice demo if you want to play around with scintilla on python. I am open to any improvements, remarks or feedback.&lt;br /&gt;&lt;blockquote&gt;&lt;pre&gt;#!usr/bin/python              &lt;br /&gt;# -*- coding: utf8 -*-        &lt;br /&gt;#(c)www.stani.be, GPL licensed&lt;br /&gt;&lt;br /&gt;import sys, random&lt;br /&gt;import wx&lt;br /&gt;import wx.stc as stc&lt;br /&gt;&lt;br /&gt;DEFAULT_ENCODING= 'utf8'&lt;br /&gt;STC_LANGUAGES   = [x[8:] for x in dir(stc) if x.startswith('STC_LEX_')]&lt;br /&gt;WHITE           = 6777215&lt;br /&gt;GRAY            = 3388607&lt;br /&gt;&lt;br /&gt;def value2colour(c):&lt;br /&gt;    return ('#%6s'%hex(c)[2:]).replace(' ','0').upper()&lt;br /&gt;&lt;br /&gt;def picasso():&lt;br /&gt;    c   = random.randint(0,GRAY)&lt;br /&gt;    return value2colour(c), value2colour((c+GRAY)%WHITE)&lt;br /&gt;&lt;br /&gt;class Node:&lt;br /&gt;    def __init__(self,level,start,end,text,parent=None,styles=[]):&lt;br /&gt;        """Folding node as data for tree item."""&lt;br /&gt;        self.parent     = parent&lt;br /&gt;        self.level      = level&lt;br /&gt;        self.start      = start&lt;br /&gt;        self.end        = end&lt;br /&gt;        self.text       = text&lt;br /&gt;        self.styles     = styles #can be useful for icon detection&lt;br /&gt;        self.children   = []&lt;br /&gt;        &lt;br /&gt;&lt;br /&gt;class Editor(stc.StyledTextCtrl):&lt;br /&gt;    #---initialize&lt;br /&gt;    def __init__(self,parent,language='UNKNOWN'):&lt;br /&gt;        stc.StyledTextCtrl.__init__(self,parent,-1)&lt;br /&gt;        self.setFoldMargin()&lt;br /&gt;        self.encoding   = DEFAULT_ENCODING&lt;br /&gt;        &lt;br /&gt;    def setFoldMargin(self):&lt;br /&gt;        self.SetProperty("fold", "1")&lt;br /&gt;        self.SetProperty("fold.html","1")&lt;br /&gt;        #MARGINS&lt;br /&gt;        self.SetMargins(0,0)&lt;br /&gt;        #margin 1 for line numbers&lt;br /&gt;        self.SetMarginType(1, stc.STC_MARGIN_NUMBER)&lt;br /&gt;        self.SetMarginWidth(1, 50)&lt;br /&gt;        #margin 2 for markers&lt;br /&gt;        self.SetMarginType(2, stc.STC_MARGIN_SYMBOL)&lt;br /&gt;        self.SetMarginMask(2, stc.STC_MASK_FOLDERS)&lt;br /&gt;        self.SetMarginSensitive(2, True)&lt;br /&gt;        self.SetMarginWidth(2, 12)&lt;br /&gt;        # Plus for contracted folders, minus for expanded&lt;br /&gt;        self.MarkerDefine(stc.STC_MARKNUM_FOLDEROPEN,    stc.STC_MARK_MINUS, "white", "black")&lt;br /&gt;        self.MarkerDefine(stc.STC_MARKNUM_FOLDER,        stc.STC_MARK_PLUS,  "white", "black")&lt;br /&gt;        self.MarkerDefine(stc.STC_MARKNUM_FOLDERSUB,     stc.STC_MARK_EMPTY, "white", "black")&lt;br /&gt;        self.MarkerDefine(stc.STC_MARKNUM_FOLDERTAIL,    stc.STC_MARK_EMPTY, "white", "black")&lt;br /&gt;        self.MarkerDefine(stc.STC_MARKNUM_FOLDEREND,     stc.STC_MARK_EMPTY, "white", "black")&lt;br /&gt;        self.MarkerDefine(stc.STC_MARKNUM_FOLDEROPENMID, stc.STC_MARK_EMPTY, "white", "black")&lt;br /&gt;        self.MarkerDefine(stc.STC_MARKNUM_FOLDERMIDTAIL, stc.STC_MARK_EMPTY, "white", "black")&lt;br /&gt;        self.Bind(stc.EVT_STC_MARGINCLICK, self.onMarginClick)&lt;br /&gt;            &lt;br /&gt;    def onMarginClick(self, evt):&lt;br /&gt;        # fold and unfold as needed&lt;br /&gt;        if evt.GetMargin() == 2:&lt;br /&gt;            if evt.GetShift() and evt.GetControl():&lt;br /&gt;                self.FoldAll()&lt;br /&gt;            else:&lt;br /&gt;                lineClicked = self.LineFromPosition(evt.GetPosition())&lt;br /&gt;                if self.GetFoldLevel(lineClicked)&amp;stc.STC_FOLDLEVELHEADERFLAG:&lt;br /&gt;                    if evt.GetShift():&lt;br /&gt;                        self.SetFoldExpanded(lineClicked, True)&lt;br /&gt;                        self.Expand(lineClicked, True, True, 1)&lt;br /&gt;                    elif evt.GetControl():&lt;br /&gt;                        if self.GetFoldExpanded(lineClicked):&lt;br /&gt;                            self.SetFoldExpanded(lineClicked, False)&lt;br /&gt;                            self.Expand(lineClicked, False, True, 0)&lt;br /&gt;                        else:&lt;br /&gt;                            self.SetFoldExpanded(lineClicked, True)&lt;br /&gt;                            self.Expand(lineClicked, True, True, 100)&lt;br /&gt;                    else:&lt;br /&gt;                        self.ToggleFold(lineClicked)&lt;br /&gt;                        &lt;br /&gt;    #---open&lt;br /&gt;    def open(self,fileName, language, encoding=DEFAULT_ENCODING, line=0):&lt;br /&gt;        self.setLanguage(language)&lt;br /&gt;        self.setText(open(fileName).read(),encoding)&lt;br /&gt;        wx.CallAfter(self.GotoLine,line)&lt;br /&gt;                        &lt;br /&gt;    def setText(self,text,encoding=DEFAULT_ENCODING):&lt;br /&gt;        self.encoding   = encoding&lt;br /&gt;        self.SetText(text.decode(encoding))&lt;br /&gt;        self.Colourise(0, self.GetTextLength()) #make sure everything is lexed&lt;br /&gt;        wx.CallAfter(self.explorer.update)&lt;br /&gt;        &lt;br /&gt;    def setLanguage(self,language):&lt;br /&gt;        if language in STC_LANGUAGES:&lt;br /&gt;            self.SetLexer(getattr(stc,'STC_LEX_%s'%language))&lt;br /&gt;            for style in range(50):&lt;br /&gt;                self.StyleSetSpec(style,"fore:%s,back:%s"%picasso())&lt;br /&gt;            return True&lt;br /&gt;        return False&lt;br /&gt;    &lt;br /&gt;    #---hierarchy&lt;br /&gt;    def getHierarchy(self):&lt;br /&gt;        #[(level,line,text,parent,[children]),]&lt;br /&gt;        n               = self.GetLineCount()+1&lt;br /&gt;        prevNode = root = Node(level=0,start=0,end=n,text='root',parent=None)&lt;br /&gt;        for line in range(n-1):&lt;br /&gt;            foldBits    = self.GetFoldLevel(line)&lt;br /&gt;            if foldBits&amp;stc.STC_FOLDLEVELHEADERFLAG:&lt;br /&gt;                #folding point&lt;br /&gt;                prevLevel       = prevNode.level&lt;br /&gt;                level           = foldBits&amp;stc.STC_FOLDLEVELNUMBERMASK&lt;br /&gt;                text            = self.GetLine(line)&lt;br /&gt;                node            = Node(level=level,start=line,end=n,text=text)&lt;br /&gt;                if level == prevLevel:&lt;br /&gt;                    #say hello to new brother or sister&lt;br /&gt;                    node.parent = prevNode.parent&lt;br /&gt;                    node.parent.children.append(node)&lt;br /&gt;                    prevNode.end= line&lt;br /&gt;                elif level&gt;prevLevel:&lt;br /&gt;                    #give birth to child (only one level deep)&lt;br /&gt;                    node.parent = prevNode&lt;br /&gt;                    prevNode.children.append(node)&lt;br /&gt;                else:&lt;br /&gt;                    #find your uncles and aunts (can be several levels up)&lt;br /&gt;                    while level &lt; prevNode.level:&lt;br /&gt;                        prevNode.end = line&lt;br /&gt;                        prevNode  = prevNode.parent&lt;br /&gt;                    node.parent = prevNode.parent&lt;br /&gt;                    node.parent.children.append(node)&lt;br /&gt;                    prevNode.end= line&lt;br /&gt;                prevNode        = node&lt;br /&gt;        prevNode.end    = line&lt;br /&gt;        return root&lt;br /&gt;    &lt;br /&gt;    def selectNode(self,node):&lt;br /&gt;        """If a tree item is right clicked select the corresponding code"""&lt;br /&gt;        self.GotoLine(node.start)&lt;br /&gt;        self.SetSelection(&lt;br /&gt;            self.PositionFromLine(node.start),&lt;br /&gt;            self.PositionFromLine(node.end),&lt;br /&gt;        )&lt;br /&gt;        &lt;br /&gt;class TreeCtrl(wx.TreeCtrl):&lt;br /&gt;    def __init__(self,*args,**keyw):&lt;br /&gt;        keyw['style'] = wx.TR_HIDE_ROOT|wx.TR_HAS_BUTTONS&lt;br /&gt;        wx.TreeCtrl.__init__(self,*args,**keyw)&lt;br /&gt;        self.root        = self.AddRoot('foldExplorer root')&lt;br /&gt;        self.hierarchy  = None&lt;br /&gt;        self.Bind(wx.EVT_RIGHT_UP, self.onRightUp)&lt;br /&gt;        self.Bind(wx.EVT_TREE_KEY_DOWN, self.update)&lt;br /&gt;        &lt;br /&gt;    def update(self, event=None):&lt;br /&gt;        """Update tree with the source code of the editor"""&lt;br /&gt;        hierarchy   = self.editor.getHierarchy()&lt;br /&gt;        if hierarchy != self.hierarchy:&lt;br /&gt;            self.hierarchy = hierarchy&lt;br /&gt;            self.DeleteChildren(self.root)&lt;br /&gt;            self.appendChildren(self.root,self.hierarchy)&lt;br /&gt;    &lt;br /&gt;    def appendChildren(self,wxParent,nodeParent):&lt;br /&gt;        for nodeItem in nodeParent.children:&lt;br /&gt;            wxItem    = self.AppendItem(wxParent,nodeItem.text.strip())&lt;br /&gt;            self.SetPyData(wxItem,nodeItem)&lt;br /&gt;            self.appendChildren(wxItem,nodeItem)&lt;br /&gt;            &lt;br /&gt;    def onRightUp(self,event):&lt;br /&gt;        """If a tree item is right clicked select the corresponding code"""&lt;br /&gt;        pt              = event.GetPosition();&lt;br /&gt;        wxItem, flags   = self.HitTest(pt)&lt;br /&gt;        nodeItem        = self.GetPyData(wxItem)&lt;br /&gt;        self.editor.selectNode(nodeItem)&lt;br /&gt;&lt;br /&gt;class Frame(wx.Frame):&lt;br /&gt;    def __init__(self,title,size=(800,600)):&lt;br /&gt;        wx.Frame.__init__(self,None,-1,title,size=size)&lt;br /&gt;        splitter            = wx.SplitterWindow(self)&lt;br /&gt;        self.explorer       = TreeCtrl(splitter)&lt;br /&gt;        self.editor         = Editor(splitter)&lt;br /&gt;        splitter.SplitVertically(&lt;br /&gt;            self.explorer,&lt;br /&gt;            self.editor,&lt;br /&gt;            int(self.GetClientSize()[1]/3)&lt;br /&gt;        )&lt;br /&gt;        self.explorer.editor    = self.editor&lt;br /&gt;        self.editor.explorer    = self.explorer&lt;br /&gt;        self.Show()&lt;br /&gt;    &lt;br /&gt;if __name__ == '__main__':&lt;br /&gt;    print 'This scintilla supports %d languages.'%len(STC_LANGUAGES)&lt;br /&gt;    print ', '.join(STC_LANGUAGES)&lt;br /&gt;    app     = wx.PySimpleApp()&lt;br /&gt;    frame   = Frame("Fold Explorer Demo")&lt;br /&gt;    &lt;br /&gt;    fileName= sys.argv[-1]                      #choose file&lt;br /&gt;    frame.editor.open(fileName,'PYTHON','utf8') #choose language in caps&lt;br /&gt;    &lt;br /&gt;    app.MainLoop()&lt;/pre&gt;&lt;/blockquote&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/03/pyxides-brainstorm-fold-explorer.html' title='Pyxides brainstorm: generic &apos;fold explorer&apos;'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=4510175251081840998' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/4510175251081840998/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/4510175251081840998'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/4510175251081840998'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-884384379627853421</id><published>2007-03-04T19:55:00.000+01:00</published><updated>2007-03-13T13:48:07.724+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='howto'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>How to switch between python2.4 and python2.5 on Ubuntu</title><content type='html'>&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.ubuntu.com/"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 80px;" src="http://ubuntuforums.org/gallery/data/5/thumbs/ubuntu-powered.png" alt="" border="0" /&gt;&lt;/a&gt;The default version of python on Edgy is python2.4 and on Feisty is python2.5 If you installed both versions of python and want to switch between them you have once to type this in a terminal:&lt;br /&gt;&lt;blockquote&gt;&lt;pre&gt;sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.4 10&lt;br /&gt;sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.5 1&lt;/pre&gt;&lt;/blockquote&gt;Afterwards you can choose at any time your standard python version by:&lt;blockquote&gt;&lt;pre&gt;sudo update-alternatives --config python&lt;/pre&gt;&lt;/blockquote&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/03/how-to-switch-between-python24-and.html' title='How to switch between python2.4 and python2.5 on Ubuntu'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=884384379627853421' title='11 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/884384379627853421/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/884384379627853421'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/884384379627853421'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-3625530562182658550</id><published>2007-02-28T17:06:00.001+01:00</published><updated>2007-03-16T00:27:51.952+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='wxpython'/><category scheme='http://www.blogger.com/atom/ns#' term='howto'/><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>SPE now works on wxPython2.8 and how to switch</title><content type='html'>&lt;iframe src="http://digg.com/api/diggthis.php?u=http://www.digg.com/programming/How_to_switch_to_wxPython_2_8_on_Ubuntu_Debian" style="padding: 4px 0pt 2px 4px; background: rgb(255, 255, 255) none repeat scroll 0% 50%; float: right; margin-left: 10px; margin-bottom: 5px; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" frameborder="1" height="82" scrolling="no" width="55"&gt;&lt;/iframe&gt;Today I switched on my laptop from wxPython2.6 to wxPython2.8 SPE seemed to work quite OK already, except: the bottom panel took too much place and was not draggable to a smaller size. After fixing this annoying bug, I am happily coding now with SPE on wxPython 2.8 For those who want to try out before I release, follow the subversion &lt;a href="http://pythonide.blogspot.com/2007/02/how-to-download-latest-spe-from_26.html"&gt;instructions&lt;/a&gt;. I tested the new SPE on Ubuntu (wxPython 2.6 &amp; 2.8) and on Windows (wxPython 2.8). If anybody knows a good subversion client for the Mac, please comment.&lt;br /&gt;&lt;br /&gt;sudo wxPython 2.8 has major new features such as AUI (Advanced User Interface), anti-alias graphics (Graphicscontext) and a lot of new widgets (RichTextCtrl, CustomTreeCtrl, SearchCtrl a la Firefox, ...). This might be useful for SPE in the future, but at the moment SPE stays backwards compatible with wxPython 2.6.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.ubuntu.com/"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 80px;" src="http://ubuntuforums.org/gallery/data/5/thumbs/ubuntu-powered.png" alt="" border="0" /&gt;&lt;/a&gt;On Feisty wxPython is already included in repositories, just type:&lt;blockquote&gt;&lt;pre&gt;sudo apt-get install python-wxgtk2.8&lt;/pre&gt;&lt;/blockquote&gt;On Edgy you need to use the wxPython coummunity repositories. Open /etc/apt/sources.list:&lt;pre&gt;&lt;blockquote&gt;sudo gedit /etc/apt/sources.list&lt;/blockquote&gt;&lt;/pre&gt;Add the following lines:&lt;br /&gt;&lt;pre&gt;&lt;blockquote&gt;# wxPython APT repository at wxcommunity.com&lt;br /&gt;deb http://wxpython.wxcommunity.com/apt/ubuntu/dapper /&lt;br /&gt;deb-src http://wxpython.wxcommunity.com/apt/ubuntu/dapper /&lt;/blockquote&gt;&lt;/pre&gt;Then copy and paste these lines in a terminal:&lt;br /&gt;&lt;pre&gt;&lt;blockquote&gt;sudo apt-get update&lt;br /&gt;sudo apt-get dist-upgrade&lt;br /&gt;sudo apt-get install python-wxgtk2.8 python-wxtools wx2.8-i18n&lt;/blockquote&gt;&lt;/pre&gt;If you want to use XRC gui designer, you need python-xml:&lt;pre&gt;&lt;blockquote&gt;sudo apt-get install python-xml&lt;/blockquote&gt;&lt;/pre&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/02/spe-now-works-on-wxpython28-and-how-to.html' title='SPE now works on wxPython2.8 and how to switch'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=3625530562182658550' title='7 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/3625530562182658550/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/3625530562182658550'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/3625530562182658550'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-6291182269139733991</id><published>2007-02-26T13:54:00.001+01:00</published><updated>2008-01-08T01:59:23.746+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='howto'/><category scheme='http://www.blogger.com/atom/ns#' term='subversion'/><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><title type='text'>How to download the latest SPE from subversion</title><content type='html'>&lt;iframe src="http://digg.com/api/diggthis.php?u=http://www.digg.com/programming/How_to_download_the_latest_SPE_Stani_s_Python_Editor_from_subversion" style="padding: 4px 0pt 2px 4px; background: rgb(255, 255, 255) none repeat scroll 0% 50%; float: right; margin-left: 10px; margin-bottom: 5px; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" frameborder="1" height="82" scrolling="no" width="55"&gt;&lt;/iframe&gt;If you want to have the latest version of SPE, use subversion which is very easy. Do not forget first to uninstall your previous version of SPE! Windows users can uninstall SPE through 'Add/Remove programs' in the Control Panel (look for 'python-spe*', not for 'spe') and use a subversion client (&lt;a href="http://tortoisesvn.net/downloads"&gt;tortoisesvn&lt;/a&gt;, &lt;a href="http://rapidsvn.tigris.org/"&gt;rapidsvn&lt;/a&gt;) to get the latest SPE. Linux and mac users need just to copy and paste this in the terminal:&lt;br /&gt;&lt;span&gt;&lt;blockquote&gt;&lt;pre&gt;svn checkout svn://svn.berlios.de/python/spe/trunk/_spe&lt;/pre&gt;&lt;/blockquote&gt;&lt;/span&gt;This will create a '_spe' folder. (Do not rename it to 'spe' or another name!) From this folder you can run:&lt;br /&gt;&lt;span&gt;&lt;blockquote&gt;&lt;pre&gt;python SPE.py&lt;/pre&gt;&lt;/blockquote&gt;&lt;/span&gt;To browse the subversion repository online, surf to:&lt;br /&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;a href="http://svn.berlios.de/wsvn/python/spe/trunk/_spe/"&gt;http://svn.berlios.de/wsvn/python/spe/trunk/_spe/&lt;/a&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;br /&gt;&lt;a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.ubuntu.com/"&gt;&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 80px;" src="https://wiki.ubuntu.com/WebsiteButtons?action=AttachFile&amp;do=get&amp;target=ubuntu_button_80x15_shaded.png" alt="" border="0" /&gt;&lt;/a&gt;For ubuntu: to first remove SPE, type this in the terminal:&lt;br /&gt;&lt;span&gt;&lt;blockquote&gt;&lt;pre&gt;sudo apt-get remove spe kiki wxglade&lt;/pre&gt;&lt;/blockquote&gt;&lt;/span&gt;To install subversion (svn), type this in the terminal:&lt;br /&gt;&lt;span&gt;&lt;blockquote&gt;&lt;pre&gt;sudo apt-get install subversion&lt;/pre&gt;&lt;/blockquote&gt;&lt;/span&gt;&lt;br /&gt;Instructions for Tortoise SVN (thanks Richard):&lt;blockquote&gt;&lt;pre&gt;1. Go to the location you want to download SPE to&lt;br /&gt;2. Right click -&gt; SVN Checkout&lt;br /&gt;3. Paste svn://svn.berlios.de/python/spe/trunk/_spe into the url field&lt;br /&gt;4. Click ok and it should work.&lt;br /&gt;&lt;/pre&gt;&lt;/blockquote&gt;</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/02/how-to-download-latest-spe-from_26.html' title='How to download the latest SPE from subversion'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/6291182269139733991/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/6291182269139733991'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/6291182269139733991'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-1693831864832387340.post-5550735964581449618</id><published>2007-02-24T17:47:00.000+01:00</published><updated>2007-02-25T00:14:49.432+01:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='spe'/><category scheme='http://www.blogger.com/atom/ns#' term='ubuntu'/><title type='text'>Switched from Windows to Ubuntu</title><content type='html'>I've switched from &lt;a href="https://launchpad.net/ubuntu/+bug/1"&gt;Windows&lt;/a&gt; to &lt;a href="http://www.ubuntu.com/"&gt;Ubuntu&lt;/a&gt; since half a year and I don't look back. I can recommend every python developer to do the same as the batteries included in Ubuntu are a python paradise. Of course I will continue supporting SPE on Windows and Mac as well. Watch out this blog as I will post here updates about SPE and some useful things about python, Ubuntu, UML, ...</content><link rel='alternate' type='text/html' href='http://pythonide.blogspot.com/2007/02/switched-from-windows-to-ubuntu.html' title='Switched from Windows to Ubuntu'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=1693831864832387340&amp;postID=5550735964581449618' title='13 Comments'/><link rel='replies' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/5550735964581449618/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://pythonide.blogspot.com/feeds/posts/default/5550735964581449618'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1693831864832387340/posts/default/5550735964581449618'/><author><name>Stani</name><uri>http://www.blogger.com/profile/16059756624190203689</uri><email>noreply@blogger.com</email></author></entry></feed>