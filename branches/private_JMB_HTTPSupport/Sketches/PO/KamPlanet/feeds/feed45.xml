<?xml version='1.0' encoding='UTF-8'?><rss xmlns:atom='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' version='2.0'><channel><atom:id>tag:blogger.com,1999:blog-3604515438787408842</atom:id><lastBuildDate>Tue, 10 Jun 2008 07:20:57 +0000</lastBuildDate><title>IronPython URL's</title><description/><link>http://ironpython-urls.blogspot.com/</link><managingEditor>noreply@blogger.com (Mark Rees)</managingEditor><generator>Blogger</generator><openSearch:totalResults>471</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-871413544317762143</guid><pubDate>Mon, 09 Jun 2008 20:55:00 +0000</pubDate><atom:updated>2008-06-09T13:59:03.667-07:00</atom:updated><title>Products in IronPython</title><description>A recent thread on the &lt;a href="http://lists.ironpython.com/pipermail/users-ironpython.com/"&gt;IronPython Mailing List&lt;/a&gt; discussed products implemented with IronPython. The major ones are:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.resolversystems.com/"&gt;Resolver One&lt;/a&gt; - of course! Programmable spreadsheet on steroids&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.leebellul.com/Site/index.html"&gt;LeeBeLLuL&lt;/a&gt; - An RIA style application that uses IronPython in the browser and InfoPath in the form design&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.symyx.com/press_release.php?id=4&amp;amp;p=283&amp;amp;y=2008"&gt;Symyx&lt;/a&gt; - IronPython is used for scripting of form editor widgets in their "universal ELN product" (whatever that may be, but evidently it is used by the scientific community)&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/06/products-in-ironpython.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-3173950686261574455</guid><pubDate>Mon, 09 Jun 2008 19:49:00 +0000</pubDate><atom:updated>2008-06-09T12:51:45.744-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>vmware</category><title>Making VMWare API Friendlier</title><description>Ronnie Maor blogs about wrapping the VMWare API from IronPython to make it easier to use:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.ronnie-midnight-oil.net/2008/06/making-vmware-api-friendlier.html"&gt;Making VMWare API Friendlier&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;He has also added his wrapper to the IronPython Cookbook:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.ironpython.info/index.php/VimWrap"&gt;vimwrap on the IronPython Cookbook&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/06/making-vmware-api-friendlier.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-8465867834074193222</guid><pubDate>Sat, 07 Jun 2008 19:59:00 +0000</pubDate><atom:updated>2008-06-07T13:01:41.709-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>ajax</category><category domain='http://www.blogger.com/atom/ns#'>asp</category><title>RadControls for ASP.NET Ajax and IronPython</title><description>The DotNetSlackers have confirmed that the &lt;a href="http://www.telerik.com/demos/aspnet/prometheus/Controls/Examples/Default/DefaultCS.aspx"&gt;Telerik RadControls for ASP.NET AJAX&lt;/a&gt; &lt;span style="font-style: italic;"&gt;do&lt;/span&gt; work with IronPython, and they provide some screenshots and example code:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://dotnetslackers.com/ASP_NET/re-113574_RadControls_for_ASP_NET_Ajax_and_IronPython.aspx"&gt;RadControls for ASP.NET Ajax and IronPython&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/06/radcontrols-for-aspnet-ajax-and.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-740405368688043819</guid><pubDate>Fri, 30 May 2008 13:10:00 +0000</pubDate><atom:updated>2008-05-30T06:16:34.313-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>ironruby</category><category domain='http://www.blogger.com/atom/ns#'>dlr</category><title>IronRuby runs Rails</title><description>John Lam has just announced that IronRuby runs Rails unmodified (the last hacking to get this far being done &lt;span style="font-style: italic;"&gt;at&lt;/span&gt; RailsConf):&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.iunknown.com/2008/05/ironruby-and-rails.html"&gt;IronRuby and Rails&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;This is an important milestone for IronRuby as it means that it is compatible enough with the standard Ruby implementation to run large applications. There is still a lot of work to be done on performance, .NET integration and interoperability with other DLR languages.&lt;br /&gt;&lt;br /&gt;It is also an important step for the Dynamic Language Runtime as there are now two major languages (plus Managed JScript) that run on top of it.</description><link>http://ironpython-urls.blogspot.com/2008/05/ironruby-runs-rails.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-6143493167573305406</guid><pubDate>Fri, 30 May 2008 10:07:00 +0000</pubDate><atom:updated>2008-05-30T03:11:34.246-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>silverlight</category><title>Chiron Updates for Dynamic Silverlight</title><description>Jimmy Schementi has released an updated version of 'Chiron' for "Dynamic Silverlight". Chiron is the development tool that packages Silverlight applications written in dynamic languages (IronPython and IronRuby).&lt;br /&gt;&lt;br /&gt;As well as generating the 'xap' files for deployment, it will also package them dynamically running as a server - so you can test your dynamic apps from the filesystem without having to repackage them after every change.&lt;br /&gt;&lt;br /&gt;The new update fixes the situation where Chiron wouldn't work with Firefox (when serving locally - and mainly on the Mac) because of an IPv4 / 6 binding issue.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://blog.jimmy.schementi.com/2008/05/chiron.html"&gt;Chiron Update&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/chiron-updates-for-dynamic-silverlight.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-1430099858898316009</guid><pubDate>Wed, 28 May 2008 21:26:00 +0000</pubDate><atom:updated>2008-05-28T14:28:01.331-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>linux</category><category domain='http://www.blogger.com/atom/ns#'>mono</category><title>Installing IronPython on Ubuntu</title><description>How hard is it to install IronPython on Ubuntu? How about:&lt;br /&gt;&lt;br /&gt;    &lt;span style="font-style: italic;"&gt;sudo apt-get install ironpython&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://blog.jimmy.schementi.com/2008/05/sudo-apt-get-install-ironpython-thats.html"&gt;Jimmy Schementi on IronPython on Ubuntu&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/installing-ironpython-on-ubuntu.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-8683464964631303574</guid><pubDate>Mon, 26 May 2008 21:28:00 +0000</pubDate><atom:updated>2008-05-26T14:32:44.989-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>winforms</category><category domain='http://www.blogger.com/atom/ns#'>tutorial</category><title>Catching Unhandled Exceptions in .NET</title><description>.NET provides two different APIs for handling two different types of 'program crashes'. The types of crashes both result in different dialogs; unhandled exceptions on the Windows Forms event loop are called "Thread Exceptions", and unhandled exceptions on a background thread are called "AppDomain Errors".  Menno finds his way through this confusion and shows how your program can exit gracefully in the event of either type of error:&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://freshfoo.com/blog/dotnet_exceptions.1024px"&gt;Catching Unhandled Exceptions in .NET&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/catching-unhandled-exceptions-in-net.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-6922383191739015716</guid><pubDate>Tue, 20 May 2008 21:43:00 +0000</pubDate><atom:updated>2008-05-20T14:48:35.828-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>moonlight</category><category domain='http://www.blogger.com/atom/ns#'>silverlight</category><category domain='http://www.blogger.com/atom/ns#'>mono</category><title>Silverlight on Linux and Mood News Silverlight</title><description>The Mono effort to port Silverlight 2 to Linux is making good progress. Miguel de Icaza recently announced the first 'Hello World'  program running on Moonlight (the Silverlight 2 version):&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://tirania.org/blog/archive/2008/May-18.html"&gt;Silverlight 2 Hello World&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Davy Mitchell has created a new version of his 'Mood News' program, it is written in IronPython and runs on Silverlight:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.latedecember.co.uk/sites/personal/davy/arch_d7_2008_05_10.html#e204"&gt;Mood News Silverlight&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/silverlight-on-linux-and-mood-news.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-5682029746733107580</guid><pubDate>Tue, 20 May 2008 20:14:00 +0000</pubDate><atom:updated>2008-05-20T13:22:02.742-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>resolver</category><category domain='http://www.blogger.com/atom/ns#'>ironclad</category><title>Ironclad 0.3 Released (Use CPython Extensions from IronPython)</title><description>William Reade of &lt;a href="http://www.resolversystems.com/"&gt;Resolver Systems&lt;/a&gt; has announced the release of Ironclad 0.3. Ironclad is a project to allow you to use CPython extensions from IronPython, and the improvement in this release is proper garbage collection for "&lt;span class="Apple-style-span" style="font-style: italic;"&gt;managed objects of unmanaged types&lt;/span&gt;" (objects that come from a C extension!). This involves integrating the reference counting that the C extensions use with .NET garbage collection.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;You can read about the project, and a high level overview of the new object lifetime management system on my blog:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.voidspace.org.uk/python/weblog/arch_d7_2008_05_17.shtml#e977"&gt;Ironclad 0.3 Released (Use CPython Extensions from IronPython)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/ironclad-03-released-use-cpython.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-8113871570028686663</guid><pubDate>Tue, 20 May 2008 20:01:00 +0000</pubDate><atom:updated>2008-05-20T13:13:53.090-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>wpf</category><category domain='http://www.blogger.com/atom/ns#'>ironruby</category><category domain='http://www.blogger.com/atom/ns#'>silverlight</category><title>Dynamic Script Control for WPF</title><description>Windows Presentation Foundation (the .NET user interface that is the successor to Windows Forms) and Silverlight support the definition of user interfaces with XAML (an XML markup language).  This includes using visual designer tools to generate the XAML.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;You can create your own controls and then use them in XAML and the visual designer tools. Unfortunately this doesn't work for controls created with dynamic languages, because there is no static target for the XAML Loader to use when it encounters the corresponding XAML element.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ivan Carrero (the author of &lt;span class="Apple-style-span" style="font-style: italic;"&gt;"&lt;/span&gt;&lt;a href="http://www.manning.com/carrero/"&gt;&lt;span class="Apple-style-span" style="font-style: italic;"&gt;IronRuby in Action&lt;/span&gt;&lt;/a&gt;&lt;span class="Apple-style-span" style="font-style: italic;"&gt;"&lt;/span&gt;) has started a new project to create a 'Dynamic Script Control' (where the control is written in C# but initialised from code in IronPython or  IronRuby code specified in a XAML element attribute). I'll be assisting him with the IronPython support.&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://codeplex.com/dynamicscriptcontrol"&gt;DynamicScriptControl on Codeplex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://code.google.com/p/dynamic-script-control/"&gt;DynamicScriptControl on Google Code&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;No code yet, but it won't be long.&lt;/div&gt;&lt;/div&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/dynamic-script-control-for-wpf.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-1165491100610237652</guid><pubDate>Tue, 20 May 2008 19:53:00 +0000</pubDate><atom:updated>2008-05-20T13:00:42.513-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>visual studio</category><category domain='http://www.blogger.com/atom/ns#'>cms</category><category domain='http://www.blogger.com/atom/ns#'>web</category><title>The Umbraco CMS with IronPython and Visual Studio</title><description>Umbraco is an open source .NET Content Management System based on ASP.NET. It supports IronPython and there is a Visual Studio plugin for Umbraco with IronPython support.&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.umbraco.org/"&gt;Umbraco CMS Homepage&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.umbraco.org/documentation/books/using-ironpython-with-umbraco"&gt;Using IronPython with Umbraco&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.codeplex.com/umbracovsaddin"&gt;Umbraco Visual Studio Addin&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/umbraco-cms-with-ironpython-and-visual.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-1540544707874260006</guid><pubDate>Tue, 20 May 2008 19:50:00 +0000</pubDate><atom:updated>2008-05-20T12:52:39.839-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>dlr</category><title>LOLCode and the Dynamic Language Runtime</title><description>A channel 8 video interview with Martin Maly (one of the DLR developers) on the Dynamic Language Runtime and his example language LOLCode:&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://channel8.msdn.com/Posts/LOLCode-and-the-Dynamic-Language-Runtime/"&gt;LOLCode and the Dynamic Language Runtime&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/lolcode-and-dynamic-language-runtime.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-8410101956934934502</guid><pubDate>Tue, 20 May 2008 19:46:00 +0000</pubDate><atom:updated>2008-05-20T12:50:09.581-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>fepy</category><title>FePy Update: IronPython 2.0 Beta 2 on Mono</title><description>Douglas Blank has done the work to get IronPython 2.0 Beta (the latest version of IronPython 2) working on Mono.&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://wiki.roboteducation.org/IronPython2B2"&gt;Building IronPython 2 Beta 2 Community Edition&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://svn.cs.brynmawr.edu/Myro/trunk/fepy/IPCE/fepy/patches/2.0b2/"&gt;Patches Against IPCEr8 (FePy) to Build and Run IP2B2&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/fepy-update-ironpython-20-beta-2-on.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-63482856140723175</guid><pubDate>Mon, 19 May 2008 09:14:00 +0000</pubDate><atom:updated>2008-05-19T02:16:51.508-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>powershell</category><category domain='http://www.blogger.com/atom/ns#'>soap</category><category domain='http://www.blogger.com/atom/ns#'>testing</category><title>Invoking a SOAP Based Web Service with Powershell</title><description>In something of a mix of technologies, Kevin Hazzard explains how to use his 'ProxyForWsdl' project to invoke SOAP based webservices from Powershell. The relevance to IronPython is that the ProxyGen part of this project makes good use of IronPython in the test harness:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://gotnet.biz/Blog/post/Invoking-a-SOAP-based-Web-Service-with-PowerShell.aspx"&gt;Invoking a SOAP Based Web Service with Powershell&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/invoking-soap-based-web-service-with.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-2630985395460048567</guid><pubDate>Mon, 19 May 2008 09:11:00 +0000</pubDate><atom:updated>2008-05-19T02:14:00.290-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>dlr</category><title>Matchmakers</title><description>Another blog entry from Martin Maly, unveiling the innards of the .NET Dynamic Language Runtime (astride which IronPython and IronRuby are lovingly crafted). Having covered the dynamic site caching mechanism for language operations (in previous posts), he moves onto an explanation of how the caches are searched, using "Matchmakers":&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://blogs.msdn.com/mmaly/archive/2008/05/15/matchmakers.aspx"&gt;Matchmakers&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/matchmakers.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-4906672078333322473</guid><pubDate>Sun, 18 May 2008 12:31:00 +0000</pubDate><atom:updated>2008-05-18T05:33:29.870-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>silverlight</category><title>Programming with Silverlight: Bugs and Missing Features</title><description>In the last week I've been writing the&lt;span style="font-style: italic;"&gt; "&lt;/span&gt;&lt;a style="font-style: italic;" href="http://www.ironpythoninaction.com/"&gt;IronPython in Action&lt;/a&gt;&lt;span style="font-style: italic;"&gt;"&lt;/span&gt; chapter on Silverlight programming. It's mainly been great fun, but in the process I've come across a few bugs and quirks in Silverlight 2 (which is still in beta):&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.voidspace.org.uk/python/weblog/arch_d7_2008_05_17.shtml#e976"&gt;Programming with Silverlight: Bugs and Missing Features&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/programming-with-silverlight-bugs-and.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-2267302184546394500</guid><pubDate>Sun, 18 May 2008 12:28:00 +0000</pubDate><atom:updated>2008-05-18T05:30:29.358-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>visual studio</category><title>IronPython + VS2005 + Delete menu item</title><description>This is a very short blog entry, but if you use IronPython with Visual Studio 2005 then you might find it useful. It explains how to enable the context menu item "Delete" for IronPython projects.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://inkysblog.spaces.live.com/blog/cns%219C1179DC0A5D324F%211743.entry"&gt;IronPython + VS2005 + Delete menu item&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/ironpython-vs2005-delete-menu-item.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-8941284132415860608</guid><pubDate>Sun, 18 May 2008 12:25:00 +0000</pubDate><atom:updated>2008-05-18T05:28:10.224-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>conference</category><category domain='http://www.blogger.com/atom/ns#'>team</category><title>The DevHawk World Tour 2008</title><description>Harry Pierson, the still-relatively-newish program manager for IronPython at Microsoft, is embarking on a world tour spreading the good news about IronPython. If you're in Amsterdam, New Zealand, Australia or Los Angeles in the next few months you may have a chance to meet up with him or hear him speak.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://devhawk.net/2008/05/16/DevHawk+World+Tour+2008.aspx"&gt;The DevHawk World Tour 2008&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/devhawk-world-tour-2008.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-7917170224802963474</guid><pubDate>Sun, 18 May 2008 12:16:00 +0000</pubDate><atom:updated>2008-05-18T05:25:14.796-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>languages</category><title>Alphabet Soup: A Survey of .NET Languages and Paradigms</title><description>"Alphabet Soup", an article by Joel Pobar, takes a look at some of the different languages and programming paradigms available on the .NET framework. Languages it covers include: C#, C++, F#, IronPython, IronRuby, and Visual Basic.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/magazine/cc507636.aspx"&gt;Alphabet Soup: A Survey of .NET Languages and Paradigms&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/alphabet-soup-survey-of-net-languages.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-6228828416782668614</guid><pubDate>Fri, 16 May 2008 12:45:00 +0000</pubDate><atom:updated>2008-05-16T05:47:56.959-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>conference</category><title>PyCon Italia Presentation Materials Online</title><description>Menno Smit has put the materials for his presentation on IronPython to PyCon Italy online (the materials are in English). This includes the S5 presentation, sample code and an example Resolver One spreadsheet:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://freshfoo.com/blog/PyCon-Italia-Due-presentation-is-online.1024px"&gt;PyCon Italia Presentation Materials Online&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/pycon-italia-presentation-materials.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-5810188750325804478</guid><pubDate>Thu, 15 May 2008 12:43:00 +0000</pubDate><atom:updated>2008-05-15T05:46:53.605-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>book</category><title>IronPython in Action: New chapters, website and sourcecode</title><description>Three new chapters (on WPF, ASP.NET and system administration) are now available in the &lt;a href="http://www.manning.com/foord"&gt;IronPython in Action Early Access Program&lt;/a&gt;. There is now a new &lt;a href="http://www.ironpythoninaction.com/"&gt;IronPython in Action website&lt;/a&gt;, where the sourcecode to accompany the book (well - the first eleven chapters so far) can be downloaded:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.voidspace.org.uk/python/weblog/arch_d7_2008_05_03.shtml#e975"&gt;ironpythoninaction.com: New Chapters and Sourcecode Available&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/ironpython-in-action-new-chapters.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-1427918362022122190</guid><pubDate>Thu, 15 May 2008 12:41:00 +0000</pubDate><atom:updated>2008-05-15T05:43:38.075-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>tutorial</category><title>IronPython - Classes within separate files</title><description>Ben Hall comes to IronPython from 'traditional' .NET languages like C# and VB.NET, which have a different way of structuring applications into namespaces. In this blog entry he explores how Python uses files to arrange classes into modules:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://blog.benhall.me.uk/2008/05/ironpython-classes-within-separate.html"&gt;IronPython - Classes within separate files&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/ironpython-classes-within-separate.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-488114953471535208</guid><pubDate>Thu, 15 May 2008 12:38:00 +0000</pubDate><atom:updated>2008-05-15T05:41:08.221-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>secondlife</category><title>IronPython for Printing from Second Life</title><description>Peter Quirk muses about whether he can solve the problem of not being able to print from within the Second Life environment by using &lt;a href="http://www.realxtend.org/"&gt;realXtend&lt;/a&gt;, the scripting host for IronPython:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://peterquirk.wordpress.com/2008/05/14/pursuing-a-solution-for-printing-a-notecard-in-realxtend/"&gt;Pursuing a solution for printing a notecard in realXtend&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/ironpython-for-printing-from-second.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-9072142385039363250</guid><pubDate>Thu, 15 May 2008 12:31:00 +0000</pubDate><atom:updated>2008-05-15T05:36:10.496-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>languages</category><title>How I have fit IronPython, Ruby, JRuby and IronRuby into my existing .net projects</title><description>Chris Donnan blogs about how he uses the 'new' implementations of Python and Ruby into his existing .NET applications:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://chrisdonnan.com/blog/2008/05/10/how-i-have-fit-ironpython-ruby-jruby-and-ironruby-into-my-existing-net-projects/"&gt;How I have fit IronPython, Ruby, JRuby and IronRuby into my existing .net projects&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>http://ironpython-urls.blogspot.com/2008/05/how-i-have-fit-ironpython-ruby-jruby.html</link><author>noreply@blogger.com (Fuzzyman)</author></item><item><guid isPermaLink='false'>tag:blogger.com,1999:blog-3604515438787408842.post-2826723257587719570</guid><pubDate>Fri, 09 May 2008 18:41:00 +0000</pubDate><atom:updated>2008-05-09T11:48:58.125-07:00</atom:updated><category domain='http://www.blogger.com/atom/ns#'>silverlight</category><category domain='http://www.blogger.com/atom/ns#'>winforms</category><category domain='http://www.blogger.com/atom/ns#'>web</category><title>Accessing IronPython Objects from Javascript in the Winforms WebBrowser Control</title><description>Srivatsn has a blog entry showing how to expose IronPython objects to Javascript in the Windows Forms WebBrowser control.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://blogs.msdn.com/srivatsn/archive/2008/05/09/accessing-ironpython-objects-from-native-javascript.aspx"&gt;Accessing IronPython Objects from native Javascript&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;This could be very useful combined with this technique for creating &lt;a href="http://blogs.microsoft.co.il/blogs/tamir/archive/2008/05/02/stand-alone-multiplatform-silverlight-application.aspx"&gt;standalone desktop Silverlight applications&lt;/a&gt;.</description><link>http://ironpython-urls.blogspot.com/2008/05/accessing-ironpython-objects-from.html</link><author>noreply@blogger.com (Fuzzyman)</author></item></channel></rss>