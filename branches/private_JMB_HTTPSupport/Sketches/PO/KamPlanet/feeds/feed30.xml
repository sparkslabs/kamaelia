<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'><id>tag:blogger.com,1999:blog-14094861</id><updated>2008-05-10T21:44:09.185+01:00</updated><title type='text'>me-&gt;flub</title><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/'/><link rel='next' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default?start-index=26&amp;max-results=25'/><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>104</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-14094861.post-3159881317820370779</id><published>2008-05-10T19:24:00.003+01:00</published><updated>2008-05-10T19:41:26.978+01:00</updated><title type='text'>Ripping videos from DVD</title><content type='html'>&lt;p&gt;Physical discs are a nuisance, I really just want to play what I want to watch in the room I want to watch it just streaming it over the wireless.  This actually works wonderfully well.  Unfortunately just copying the file structure of a DVD works and gives you DVD-quality video, but the size is huge and streaming this over the wireless tends to create some trouble (not to mention that every byte must also be encrypted/decrypted for ssh so this is getting CPU intensive too, ssh offloading onto hardware would be so cool).  Hence the need to "rip" the DVD and encode it to some smaller format arises.&lt;/p&gt;
&lt;p&gt;After spending a while looking at various options I finally found the great &lt;a href="http://thoggen.net/"&gt;thoggen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Only problem left is how much to compress.  After some very un-scientific tests (Google failed to find me any nice studies/graphs!) I decided on a quality of 35 and no resizing.  But if anyone knows of a better study on what settings to prefer it would be greatly appreciated!  It would be great to see quality vs file size vs frame size for different types of video.  Ideally with a subjective "human quality" level too so you'd know what still looks good.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/05/ripping-videos-from-dvd.html' title='Ripping videos from DVD'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=3159881317820370779' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/3159881317820370779/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/3159881317820370779'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/3159881317820370779'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-1610000325058812407</id><published>2008-05-09T11:31:00.001+01:00</published><updated>2008-05-09T11:33:20.011+01:00</updated><title type='text'>Discovery of the day</title><content type='html'>&lt;code&gt;&lt;pre&gt;
&gt;&gt;&gt; def f(a, b):
...     print 'a', a, 'b', b
... 
&gt;&gt;&gt; f(1, b=2)
a 1 b 2
&gt;&gt;&gt; f(a=1, b=2)
a 1 b 2
&gt;&gt;&gt; f(b=2, a=1)
a 1 b 2
&gt;&gt;&gt;
&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;Now I'm debating if I should really use that in production code...&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/05/discovery-of-day.html' title='Discovery of the day'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=1610000325058812407' title='10 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/1610000325058812407/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/1610000325058812407'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/1610000325058812407'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-6817547197977343719</id><published>2008-04-17T08:45:00.002+01:00</published><updated>2008-04-17T08:48:08.715+01:00</updated><title type='text'>Time to read standards</title><content type='html'>&lt;p&gt;Sometimes I like quotes out of context...&lt;/p&gt;
&lt;blockquote&gt;
Anyway, I don't think it really is an ambiguity in practice -- only in the minds of those that have too much time to read standards documents.&lt;br/&gt;
    -- Greg Ewing (on distutils-sig)
&lt;/blockquote&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/04/time-to-read-standards.html' title='Time to read standards'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=6817547197977343719' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/6817547197977343719/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/6817547197977343719'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/6817547197977343719'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-140437538151694493</id><published>2008-04-11T20:49:00.002+01:00</published><updated>2008-04-11T21:00:11.003+01:00</updated><title type='text'>@x.setter syntax in Python 2.5</title><content type='html'>&lt;p&gt;The new &lt;a href="http://docs.python.org/dev/whatsnew/2.6.html#other-language-changes"&gt;property.setter&lt;/a&gt; syntax in Python 2.6 and 3.0 looks very clean to me.  So I couldn't wait and wanted it in Python 2.5.  With the help of comp.lang.python I finally got there (thanks especially to  Arnaud Delobelle):&lt;/p&gt;
&lt;code&gt;&lt;pre&gt;
_property = property

class property(property):
    def __init__(self, fget, *args, **kwargs):
        self.__doc__ = fget.__doc__
        super(property, self).__init__(fget, *args, **kwargs)

    def setter(self, fset):
        cls_ns = sys._getframe(1).f_locals
        for k, v in cls_ns.iteritems():
            if v == self:
                propname = k
                break
        cls_ns[propname] = property(self.fget, fset,
                                    self.fdel, self.__doc__)
        return cls_ns[propname]
&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;The &lt;tt&gt;__init__()&lt;/tt&gt; wrapper is needed to get &lt;tt&gt;__doc__&lt;/tt&gt; set properly (this surprised me).  The whole &lt;tt&gt;cls_ns&lt;/tt&gt; stuff and the loop are required since the properties are defined in C and their &lt;tt&gt;fset&lt;/tt&gt; attribute is read-only.  Which is why the entire property needs to be replaced.  The implementation of &lt;tt&gt;deleter()&lt;/tt&gt; can now be regarded as an exercise to the reader...&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/04/xsetter-syntax-in-python-25.html' title='@x.setter syntax in Python 2.5'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=140437538151694493' title='2 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/140437538151694493/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/140437538151694493'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/140437538151694493'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-1964261822418034948</id><published>2008-04-11T20:42:00.002+01:00</published><updated>2008-04-11T20:48:57.114+01:00</updated><title type='text'>(O)OXML and ISO voting processes</title><content type='html'>&lt;p&gt;Many have recently complained about ISO's voting processes, mainly how they need to be revised as currently it seems it's possible to buy yourself a standard given enough lobbyist and money.&lt;/p&gt;
&lt;p&gt;But part of this is ISO's trust in ECMA.  ISO allows ECMA to submit standards for the fast-track process because it trusts it to approve good standards.  If OXML (as it seems to be called now it's approved, formerly OOXML) was indeed such a bad standard (which I don't doubt personally) then ISO should maybe review it's relationship with ECMA too?&lt;/p&gt;
&lt;p&gt;This is only a tiny part of the picture obviously, but one I haven't seem mentioned elsewhere.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/04/ooxml-and-iso-voting-processes.html' title='(O)OXML and ISO voting processes'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=1964261822418034948' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/1964261822418034948/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/1964261822418034948'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/1964261822418034948'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-4972913515494589654</id><published>2008-04-10T13:57:00.002+01:00</published><updated>2008-04-10T14:03:08.636+01:00</updated><title type='text'>Shell history</title><content type='html'>&lt;p&gt;hehe&lt;/p&gt;
&lt;code&gt;&lt;pre&gt;
flub@signy:~$ history | awk '{a[$2]++ } END{for(i in a){print a[i] " " i}}'|sort -rn |head
79 nosetests
74 ls
46 cd
36 ssh
28 man
22 apt-cache
19 vi
19 ack
17 svn
17 sudo
flub@signy:~$ 
&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;It must be noted that most of my editing happens in emacs, but that only gets started a few times a day and then stays there (oh and emacs is started from a shortcut icon, not the shell).&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/04/shell-history.html' title='Shell history'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=4972913515494589654' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/4972913515494589654/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/4972913515494589654'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/4972913515494589654'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-5054045621818455914</id><published>2008-04-06T13:36:00.002+01:00</published><updated>2008-04-06T14:32:04.168+01:00</updated><title type='text'>nose and ipython</title><content type='html'>&lt;p&gt;I wish there was a simple way to integrate nose and ipython.  Something like a command line option &lt;em&gt;not&lt;/em&gt; to catch exceptions would be sufficient I think, so that you could do:&lt;/p&gt;
&lt;code&gt;
In [1]: %run tests/test_module.py --do-not-catch-exceptions
&lt;/code&gt;
&lt;p&gt;Obviously you'd want a shorter option switch...&lt;/p&gt;
&lt;p&gt;Seems like &lt;tt&gt;Test.run()&lt;/tt&gt; in &lt;tt&gt;case.py&lt;/tt&gt; is where this happens, but I tried changing that with no success.&lt;/p&gt;
&lt;p&gt;And to be really useful I'd want the default behaviour of test selection in a module where &lt;tt&gt;if __name__ == '__main__': nose.main()&lt;/tt&gt; is used to be just that module.  But maybe that's already supported and I'm just not finding it.&lt;/p&gt;
&lt;p&gt;Last random thought: Maybe if nose's -d option did expand dotted names I wouldn't be wishing for any of this.  Who knows.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/04/nose-and-ipython.html' title='nose and ipython'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=5054045621818455914' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/5054045621818455914/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/5054045621818455914'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/5054045621818455914'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-313886604941815890</id><published>2008-04-03T12:38:00.003+01:00</published><updated>2008-04-03T12:47:27.249+01:00</updated><title type='text'>One s3fs to rule them all?</title><content type='html'>&lt;p&gt;Sometimes I wish we could fast forward 6 or 12 months or so.  Hopefully by then there will be just one &lt;a href="http://google.com/search?q=s3fs"&gt;s3fs&lt;/a&gt; that is mature and maintained.  Right now it's hard to tell which one will turn out the best.&lt;/p&gt;
&lt;p&gt;Interstingly, of the ones that look like they could have potential (trying to word it carefully here) two are written in &lt;a href="http://python.org"&gt;Python&lt;/a&gt; (all are using &lt;a href="http://fuse.sourceforge.net/"&gt;fuse&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.google.com/p/s3fs/wiki/FuseOverAmazon"&gt;http://code.google.com/p/s3fs/wiki/FuseOverAmazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.google.com/p/s3fs-fuse/"&gt;http://code.google.com/p/s3fs-fuse/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fedorahosted.org/s3fs/"&gt;https://fedorahosted.org/s3fs/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/04/one-s3fs-to-rule-them-all.html' title='One s3fs to rule them all?'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=313886604941815890' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/313886604941815890/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/313886604941815890'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/313886604941815890'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-6091146420804320881</id><published>2008-03-28T23:42:00.003Z</published><updated>2008-03-28T23:44:42.368Z</updated><title type='text'>GPL and python modules</title><content type='html'>&lt;p&gt;I should probably google this, but can't think of good keywords.  So instead this is a "dear lazy web" post.&lt;/p&gt;
&lt;p&gt;Is importing a python module considered linking for the GPL?  I.e. are you allowed to import a python module into an script or module that has a non-GPL-comptible license?&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/03/gpl-and-python-modules.html' title='GPL and python modules'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=6091146420804320881' title='5 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/6091146420804320881/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/6091146420804320881'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/6091146420804320881'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-3162343668016894383</id><published>2008-03-27T21:35:00.002Z</published><updated>2008-03-27T21:39:40.999Z</updated><title type='text'>Cheating the KAME turtule</title><content type='html'>&lt;p&gt;This is shocking.  Even though I have not yet used IPv6 I can see the the KAME turtle dance!  I won't give you a direct link but &lt;a href="http://sixxs.net"&gt;SixXS&lt;/a&gt; privde an IPv6-&gt;IPv4 service as well as an IPv4-&gt;IPv6 service.  Feels bad having used the 4-&gt;6 bit...&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/03/cheating-kame-turtule.html' title='Cheating the KAME turtule'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=3162343668016894383' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/3162343668016894383/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/3162343668016894383'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/3162343668016894383'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-8839245039211089480</id><published>2008-03-23T18:54:00.000Z</published><updated>2008-03-23T18:55:05.333Z</updated><title type='text'>OmniORB 4.1.1 in lenny!</title><content type='html'>&lt;p&gt;Something that happened about a week ago I think.  But omniORB 4.1.1 finally make it into Debian testing aka lenny! This means that python-omniorb 3.1, which has been waiting for a while now, also make it into lenny!&lt;/p&gt;
&lt;p&gt;It has been stalled for ages since we had problems with the ARM port not managing to compile omniORB 4.1.X.  Thanks to Thomas Girard for his work on this.&lt;/p&gt;
&lt;p&gt;I've already committed the update to 4.1.2 to the &lt;a href="http://svn.debian.org/wsvn/pkg-corba"&gt;svn repo&lt;/a&gt;, omniORBpy 3.2 will follow soon...&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/03/omniorb-411-in-lenny.html' title='OmniORB 4.1.1 in lenny!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=8839245039211089480' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/8839245039211089480/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/8839245039211089480'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/8839245039211089480'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-1977606605742731479</id><published>2008-03-23T18:23:00.002Z</published><updated>2008-03-23T18:29:37.247Z</updated><title type='text'>Compiling libtool examples</title><content type='html'>&lt;p&gt;This is more a reminder to myself, but here's how to compile the libtool examples:&lt;/p&gt;
&lt;code&gt;&lt;pre&gt;
$ cd demo
$ aclocal
$ libtoolize --automake
$ automake --add-missing
$ autoconf
$ ./configure
$ make
&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;It's really how to bootstrap any GNU autotools using application I suppose.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/03/compiling-libtool-examples.html' title='Compiling libtool examples'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=1977606605742731479' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/1977606605742731479/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/1977606605742731479'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/1977606605742731479'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-5599937098881222438</id><published>2008-02-29T00:33:00.002Z</published><updated>2008-02-29T00:37:06.624Z</updated><title type='text'>My favourite package description</title><content type='html'>&lt;p&gt;This sentence in a package description is always great...&lt;/p&gt;
&lt;blockquote&gt;
You probably don't need it if you don't understand what this is all about.
&lt;/blockquote&gt;
&lt;p&gt;Brought to you today by &lt;a href="http://packages.debian.org/unstable/admin/nut-snmp"&gt;nut-snmp&lt;/a&gt; but can be found in many other packages.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/02/my-favourite-package-description.html' title='My favourite package description'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=5599937098881222438' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/5599937098881222438/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/5599937098881222438'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/5599937098881222438'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-8868175561210807279</id><published>2008-02-22T16:06:00.003Z</published><updated>2008-02-27T21:10:36.871Z</updated><title type='text'>Another shell trick</title><content type='html'>&lt;p&gt;Let's start with the solution instead of the problem:&lt;/p&gt;
&lt;code&gt;
myvar=$(myfunc) &lt;strong&gt;|| exit $?&lt;/strong&gt;
&lt;/code&gt;
&lt;p&gt;Assuming &lt;tt&gt;myfunc&lt;/tt&gt; is a function defined elsewhere in your shell script this will execute that function and assign it's output to &lt;tt&gt;myvar&lt;/tt&gt;.  However when &lt;tt&gt;myfunc&lt;/tt&gt; fails, the entire assignment statement fails with the exit status of &lt;tt&gt;myfunc&lt;/tt&gt;, so you exit with the same exit status by using &lt;tt&gt;|| exit $?&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;It is really important to have this exit statment in there, even if &lt;tt&gt;myfunc&lt;/tt&gt; already has it.  You could look at the &lt;tt&gt;$(...)&lt;/tt&gt; construct as a subshell, so the &lt;tt&gt;exit&lt;/tt&gt; of &lt;tt&gt;myfunc&lt;/tt&gt; only exits that subshell.  This took me quite a while to figure out!&lt;/p&gt;
&lt;p&gt;On a related note, you may know you can execute things in a subshell by using &lt;tt&gt;(&lt;em&gt;list&lt;/em&gt;)&lt;/tt&gt;.  If you do that any variables etc won't affect your current shell.  However variables and hence also functions from the parent shell are usable in the subshell.  Handy (and maybe obvious).&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/02/another-shell-trick.html' title='Another shell trick'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=8868175561210807279' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/8868175561210807279/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/8868175561210807279'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/8868175561210807279'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-2680101441507537694</id><published>2008-02-21T19:19:00.002Z</published><updated>2008-02-21T20:50:47.262Z</updated><title type='text'>Creating a Debian ARM build host</title><content type='html'>&lt;p&gt;If you want/need to compile a program on ARM but are not lucky enough to have the hardware available &lt;a href="http://fabrice.bellard.free.fr/qemu/"&gt;QEMU&lt;/a&gt; can still help you.  &lt;a href="http://www.aurel32.net/"&gt;Aurélien Jarno&lt;/a&gt; has an excellent description of &lt;a href="http://www.aurel32.net/info/debian_arm_qemu.php"&gt;how to do this&lt;/a&gt;.  It is still valid today, even if you want to install &lt;em&gt;sid&lt;/em&gt; instead of &lt;em&gt;etch&lt;/em&gt;, first install &lt;em&gt;etch&lt;/em&gt; then upgrade.&lt;/p&gt;
&lt;p&gt;The only thing he omits is the need to start a getty on &lt;tt&gt;/dev/ttyAMA0&lt;/tt&gt; when you use &lt;tt&gt;-nographics&lt;/tt&gt; with a console on &lt;tt&gt;ttyAMA0&lt;/tt&gt;.  Other then that everything goes terribly smooth.&lt;/p&gt;
&lt;p&gt;Apparently emulating ARM on a recent machine is supposed to be even faster then a real ARM.  I have no idea if this is true, but I still find it slow...  Makes me think twice about considering a Thecus N2100 or so as my home server.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/02/creating-debian-arm-build-host.html' title='Creating a Debian ARM build host'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=2680101441507537694' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/2680101441507537694/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/2680101441507537694'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/2680101441507537694'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-8946885956351923146</id><published>2008-02-16T00:12:00.002Z</published><updated>2008-02-16T00:26:00.647Z</updated><title type='text'>Docstring folding</title><content type='html'>&lt;p&gt;In my &lt;a href="http://bruynooghe.blogspot.com/2008/02/documenting-functionsmethodsclasses.html"&gt;last post&lt;/a&gt; I had a little rant about how python docstrings visually separate the function/method/class definition from the body.  Mikko Ohtamaa &lt;a href="http://bruynooghe.blogspot.com/2008/02/documenting-functionsmethodsclasses.html#965692649921519000"&gt;raised a very good point&lt;/a&gt; though: &lt;em&gt;the editor should fold it away&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Since my editor of choice is &lt;a href="http://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt;, said to be more an operating system then an editor, this must be possible.  But surely someone more intelligent then me must have implemented this already (for I still don't know lisp, shame on me)!  So I read the &lt;tt&gt;python-mode&lt;/tt&gt; description which mentioned something about support for &lt;tt&gt;outline-minor-mode&lt;/tt&gt;.  This lead me to play around a little with outline-mode.  I'ts rather nice and seems to do useful folding, once I get used to it.&lt;/p&gt;
&lt;p&gt;But I'm not sure I can figure out how to fold away just the docstring in outline-mode!  There seems to be a "Hide Entry" function that most of the time does just hide the docstring when the cursor is located over it.  But sometimes it will hide a few more lines too...  Surely I must be missing something, anyone some hints?&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/02/docstring-folding.html' title='Docstring folding'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=8946885956351923146' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/8946885956351923146/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/8946885956351923146'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/8946885956351923146'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-2844032621241069392</id><published>2008-02-12T21:32:00.000Z</published><updated>2008-02-12T22:16:16.516Z</updated><title type='text'>Documenting functions/methods/classes</title><content type='html'>&lt;p&gt;There are several simple guidelines for writing functions or methods (guidelines that I like that is).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep them clean, don't intersperse them with comments.  If they require more then one or two inline comments it's too complicated and you should restructure.&lt;/li&gt;
&lt;li&gt;Keep them short, it should fit on one screen.  I'm flexible, a screen is an emacs buffer, not a vi in a terminal as &lt;a href="http://lxr.linux.no/linux/Documentation/CodingStyle"&gt;Linus requires&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Write a clear description at the top, explaining parameters, return values, exceptions etc whenever these things might not be blatingly obvious in a month's time.  As soon as you explain one parameter you you should describe the whole lot though.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In C this is quite nice, it looks like this:&lt;/p&gt;
&lt;code&gt;&lt;pre&gt;
/** Print an integer number
 *
 * The number is printed to stdout.  Really that's
 * all there is to it.
 *
 * param - The integer to print.
 */
void my_func(int param)
{
    printf("This is an integer: %d", param);
}
&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;While in Python this would look like this:&lt;/p&gt;
&lt;code&gt;&lt;pre&gt;
def my_func(param)
    """Print a number
    
    The number is printed to stdout.  Really that's
    all there is to it.

    param - The number to print.
    """
    print "This is a number: %d" % param
&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;While python code is generally very lovely readable this is something that annoys me about it.  Suddenly my function definition is separated from the code by the docstring, often causing the definition and the code not to fit on one screen anymore (it is foolish IMHO to require the documentation &lt;em&gt;and&lt;/em&gt; code to fit on one screen, given my documentation conventions).&lt;/p&gt;
&lt;p&gt;While I understand every reason for the way things are and acknowledge that it probably won't ever change it still annoys me from time to time so I felt like moaning about it.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/02/documenting-functionsmethodsclasses.html' title='Documenting functions/methods/classes'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=2844032621241069392' title='4 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/2844032621241069392/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/2844032621241069392'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/2844032621241069392'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-9105291940389269242</id><published>2008-01-31T18:09:00.000Z</published><updated>2008-01-31T18:34:24.129Z</updated><title type='text'>Paradox</title><content type='html'>&lt;p&gt;Creating a &lt;a href="http://facebook.com/"&gt;Facebook&lt;/a&gt; group to complain about the &lt;a hef="http://www.homeoffice.gov.uk/passports-and-immigration/id-cards/"&gt;UK ID cards&lt;/a&gt; because:&lt;/p&gt;
&lt;blockquote&gt;
[...]
An ID card would hold ALL personal information about you including biometrics, hospital records etc etc., a perfect target for ID thieves.
[...]
&lt;/blockquote&gt;
&lt;p&gt;And you're doing this on &lt;em&gt;Facebook&lt;/em&gt;?&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/01/paradox.html' title='Paradox'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=9105291940389269242' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/9105291940389269242/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/9105291940389269242'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/9105291940389269242'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-5454446488225260068</id><published>2008-01-21T20:38:00.001Z</published><updated>2008-01-21T20:55:22.369Z</updated><title type='text'>Mild improvement for movie industry</title><content type='html'>&lt;p&gt;Until now every time I bought a DVD I found a few scary and angry leaflets in the box telling me how insanely bad I might be for buying pirated DVDs.  They usually convince you that you are the worst person in the world for no particular reason.  So just like I feel like I'm treated as a criminal when having to see trailers of the same genre at the cinema or have to take of my shoes at the airport, I hate having to open a DVD case and see those silly slogans.&lt;/p&gt;
&lt;p&gt;Today however I opened a DVD case and instead got a nice and friendly looking leaflet (almost as relaxing as "Don't Panic" compared to the normal leaflets) congratulating me for buying a genuine DVD.  I have to say I find it still disappointing that they feel like having to put in such a leaflet, but it's definitely more customer friendly this way: I don't get to feel bad.&lt;/p&gt;
&lt;p&gt;If only now they would make them region free and not content scramble the disk (as I'm still about to break the law by watching my genuine DVD in a few minutes) I would actually start to believe they started listening to their customers.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/01/mild-improvement-for-movie-industry.html' title='Mild improvement for movie industry'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=5454446488225260068' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/5454446488225260068/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/5454446488225260068'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/5454446488225260068'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-9183084648870234574</id><published>2008-01-06T20:36:00.000Z</published><updated>2008-01-06T21:31:52.795Z</updated><title type='text'>Rock climbing in Costa Daurada</title><content type='html'>&lt;p&gt;Just spent a long week sport climbing in Costa Daurada.  We stayed in a house (with about 32 students and ex-students) near the village of &lt;a href="http://en.wikipedia.org/wiki/Cornudella_de_Montsant"&gt;Cornudella de Montsant&lt;/a&gt; which was an excellent location really close to Siurana and Arboli.  Absolutely brilliant climbing and although my brain wanted to stay a lot longer my body seems quite glad to have some rest.&lt;/p&gt;
&lt;p&gt;If you like sport climbing it is definitely a recommended place.  Great times.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/01/rock-climbing-in-costa-daurada.html' title='Rock climbing in Costa Daurada'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=9183084648870234574' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/9183084648870234574/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/9183084648870234574'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/9183084648870234574'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-6621120547646611102</id><published>2008-01-06T19:42:00.000Z</published><updated>2008-01-06T20:36:46.397Z</updated><title type='text'>Updated omniORB in Debian</title><content type='html'>&lt;p&gt;A while ago &lt;a href="http://teejeejee.livejournal.com/"&gt;Thomas Girard&lt;/a&gt; started the &lt;a href="http://alioth.debian.org/projects/pkg-corba/"&gt;Debian CORBA Team&lt;/a&gt; with the aim of maintaining omniORB and related packages in Debian.  After a lot of work (and time!) we managed to get the packages of up to date versions in a good state fixing almost all bugs in Debian's BTS.  And thanks to Thomas' hard work he managed to upload working packages of omniORB and omniORBpy (&lt;tt&gt;omniorb4&lt;/tt&gt; and &lt;tt&gt;python-omniorb&lt;/tt&gt; respectively) just before Christmas (I'm only blogging this now since I was on holiday since then).&lt;p&gt;
&lt;p&gt;The only issue is that they're only available in unstable and not yet in testing.  There seems to be an issue with &lt;tt&gt;omniidl&lt;/tt&gt; segfaulting on ARM.  Unfortunately I haven't got an ARM platform available to debug on, Thomas however had already a quick look and it thinks it looks like a stack frame corruption.  Hopefully we'll find this problem sooner rather then later, just frustrating that I can't really do much about it.&lt;/p&gt;
&lt;p&gt;Lastly this means that if you where using the packages that I put up on &lt;a hef="http://flub.suffwillmade.org/debian/"&gt;http://flub.stuffwillmade.org/debian/&lt;/a&gt; a (long) while ago you shouldn't use them anymore, instead you should fetch the packages in Debian's sid.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2008/01/updated-omniorb-in-debian.html' title='Updated omniORB in Debian'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=6621120547646611102' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/6621120547646611102/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/6621120547646611102'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/6621120547646611102'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-6947929731096638311</id><published>2007-12-15T15:55:00.000Z</published><updated>2007-12-15T17:17:58.019Z</updated><title type='text'>Seeing your browser's headers using python</title><content type='html'>&lt;p&gt;There's a very annoying website that won't send their CSS to my normal web browser (&lt;a href="http://www.gnome.org/projects/epiphany/"&gt;epiphany&lt;/a&gt;) which makes it rather ugly.  However when I use &lt;a href="http://www.geticeweasel.org/"&gt;iceweasel&lt;/a&gt; the CSS gets applied.  Since both browsers use exactly the same rendering engine, &lt;a href="http://www.mozilla.org/newlayout/"&gt;gecko&lt;/a&gt;, on my machine as far as I know, I thought they must sniff the headers sent by my browser.  So I needed to check the headers, &lt;a href="http://python.org/"&gt;Python&lt;/a&gt; to the rescue:&lt;/p&gt;
&lt;code&gt;&lt;pre&gt;
import BaseHTTPServer

class MyHandler(BaseHTTPServer.BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()
        self.wfile.write('&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;pre&amp;gt;')
        self.wfile.write(self.headers)
        self.wfile.write('&amp;lt;/pre&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;')
        return

def main():
    try:
        server = BaseHTTPServer.HTTPServer(('', 80), MyHandler)
        print 'serving...'
        server.serve_forever()
    except KeyboardInterrupt:
        print 'ttfn'
        server.socket.close()

if __name__ == '__main__':
    main()
&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;Running this as root (80 is a privileged port) will show you the headers sent by your browser to the server.  It's so simple that it took me longer to write this post then to write that code.&lt;/p&gt;
&lt;p&gt;Only a pity that it didn't help me solve my problem...&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2007/12/seeing-your-browsers-headers-using.html' title='Seeing your browser&apos;s headers using python'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=6947929731096638311' title='2 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/6947929731096638311/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/6947929731096638311'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/6947929731096638311'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-5287736486541317711</id><published>2007-11-28T22:17:00.000Z</published><updated>2007-11-28T22:19:07.197Z</updated><title type='text'>Schneier: hammer, nail</title><content type='html'>&lt;blockquote&gt;&lt;a href="http://www.schneier.com/blog/archives/2007/11/animal_rights_a.html"&gt;If you remember, this was sold to the public as essential for fighting terrorism. It's already being misused.&lt;/a&gt;&lt;/blockquote&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2007/11/schneier-hammer-nail.html' title='Schneier: hammer, nail'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=5287736486541317711' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/5287736486541317711/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/5287736486541317711'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/5287736486541317711'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-3139839998884782969</id><published>2007-11-26T00:01:00.000Z</published><updated>2007-11-26T00:27:03.487Z</updated><title type='text'>Making Debian packages on an SMP machine</title><content type='html'>&lt;p&gt;When you have an SMP machine (including dual core CPUs - but I'm sure everyone knows that by now), you quickly learn to use the &lt;tt&gt;-jN&lt;/tt&gt; flag to GNU &lt;tt&gt;make(1)&lt;/tt&gt;.  &lt;tt&gt;N&lt;/tt&gt; is the number of CPUs you have and it lets &lt;tt&gt;make(1)&lt;/tt&gt; run that many jobs in parallel whenever possible, thus using all your CPUs and giving you a nice speed benefit.&lt;/p&gt;
&lt;p&gt;However when creating a Debian package you can't always specify this when you use a tool like &lt;tt&gt;dpkg-buildpackage(1)&lt;/tt&gt;, &lt;tt&gt;debuild(1)&lt;/tt&gt; or &lt;tt&gt;svn-buildpackage(1)&lt;/tt&gt;.  A simple trick is to just invoke these tools with the environment variable &lt;tt&gt;MAKE&lt;/tt&gt; set to &lt;tt&gt;make -jN&lt;/tt&gt;.  Now whenever &lt;tt&gt;make(1)&lt;/tt&gt; will invoke a sub-make, it will use the &lt;tt&gt;-jN&lt;/tt&gt; parameter for it and since &lt;tt&gt;debian/rules&lt;/tt&gt; is the first make invocation, all your actual compilation will always happen with multiple jobs in parallel.&lt;/p&gt;
&lt;p&gt;This is not perfect however, all sub-makes will be called with &lt;tt&gt;-j&lt;/tt&gt; too now, so you'll get more jobs then CPUs.  I tried using &lt;tt&gt;MAKEFLAGS&lt;/tt&gt; but that didn't quite work out, if someone knows of a better solution let me know.  But this one works anyway.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2007/11/making-debian-packages-on-smp-machine.html' title='Making Debian packages on an SMP machine'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=3139839998884782969' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/3139839998884782969/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/3139839998884782969'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/3139839998884782969'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-14094861.post-1564104015542087846</id><published>2007-11-21T21:45:00.000Z</published><updated>2007-11-21T21:58:32.250Z</updated><title type='text'>How far does encryption get you?</title><content type='html'>&lt;p&gt;Finally, since a short while, all my hard disks are setup to use encrypted disks using &lt;a href="http://luks.endorphin.org/"&gt;LUKS&lt;/a&gt;.  Works like a charm and you don't really notice it slow down.  Unfortunately I am now left wondering &lt;a href="http://news.bbc.co.uk/1/hi/technology/7102180.stm"&gt;what the point is&lt;/a&gt;, given that I currently live in the UK.  Not that there is anything exciting on my hard disks, but I'm one of these people who care about principles regarding freedom.&lt;/p&gt;
&lt;p&gt;One possible thing to do is create a key on a USB stick instead of using a password.  It would mean I can destroy it when they ask for it as it seems they have to ask you by letter first.  Although I can't imagine a situation where I'd rather lose all my data myself too then have the police poke their nose in it.&lt;/p&gt;
&lt;p&gt;At some level I can't help but compare them (the UK government) with the music and video industry: create new (broken) laws as they are unwilling to adapt to innovations.&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://bruynooghe.blogspot.com/2007/11/how-far-does-encryption-get-you.html' title='How far does encryption get you?'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=14094861&amp;postID=1564104015542087846' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/1564104015542087846/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://bruynooghe.blogspot.com/feeds/posts/default/1564104015542087846'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/14094861/posts/default/1564104015542087846'/><author><name>Floris Bruynooghe</name><email>noreply@blogger.com</email></author></entry></feed>