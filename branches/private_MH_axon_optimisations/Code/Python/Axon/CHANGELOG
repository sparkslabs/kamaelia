1.1.2 -> 1.1.3
     Bug fix to make Wait* work cleaner

    Axon.Component.Component
    * Default documentation for Component class in/out- boxes added
    * anyReady() added. Returns true if any has data in it.


    Axon.Microprocess.Microprocess
    * Can activate an arbitrary thread of control from a generator
      (The thing you normally call .next() on)
    * Can pass on a closeDownValue
    * Can be set as an activity creator
    * Now conditionally starts the thread. Actually helps with re-entrant
      calls inside a single active microprocess.

    Axon.Scheduler.Scheduler
    * Now handles shutdown knockons more gracefully
    * Removal of lots of debugging code no longer needed (hasn't been needed
      in a long while)
    * Code cleanup

     
1.1.1 -> 1.1.2
     Instated use of ctypes to use posix.sched_yield during the main loop.
     This makes the system a *little* bit more other-system friendly.

     Added in the ability to do, effectively, blocking calls to other
     components. The best example using this at present in
         Kamaelia.UI.Pygame.Ticker

     Specifically you can ask the system to run a different microprocess in
     the place of the running one, and wait until it ends.

      yield WaitComplete(
          self.requestDisplay(DISPLAYREQUEST=True,
                              callback = (self,"control"),
                              size = (self.render_area.width, self.render_area.height),
                              position = self.position
                              )
      )

     Where self.requestDisplay is a generator with the following behaviour:

         def requestDisplay(self, **argd):
            displayservice = PygameDisplay.getDisplayService()
            self.link((self,"signal"), displayservice)
            self.send(argd, "signal")
            for _ in self.waitBox("control"): yield 1 ## This could also be rewritten in this form :-)
            display = self.recv("control")
            self.display = display

     This is experimental support that is likely to evolve with time. This
     does however allow effectively for a far more co-routine type behaviour
     than we had in place before - rather than generator type behaviour.

1.1.0 -> 1.1.1
     Change made to Microprocess that massively simplifies Kamaelia scripts
     that are just pipeline systems. For example, the following is now all
     that's needed for a pipeline system:

     pipeline(TCPClient(tickerIP,tickerPort)
              Ticker()
             ).run()



1.0.3 -> 1.1.0 - Debugging reactivated, Microprocess enhanced

     Added the facility to allow components to be wrapped threads rather
     than wrapped generators. Since this is a major addition, that's why
     the version has been bumped to 1.1.0

     All usage of __super removed. It will disappear completely in 1.2.0

     Microprocess has gained a "run" method, which allows a microprocess to
     be run standalone. (This should assist with testing)

     self.link now returns the linkage created. This allows the user to do
     the following when debugging a system:
       l = self.link( ... )
       l.setShowTransit(True)

     Debugging subsystem re-activated for actual use. Still needs a bit
     of work. (Ideally we should *merge* the debugging selected in the
     debug.conf file with the defaults, rather than have them replace
     the defaults) (Decent docs for debug subsystem still to come)



1.0.2 -> 1.0.3 - Performance Improvements
   * Split debug.debug.debug/debug.debug.note into two halves:
      * areDebugging(self,section,level)
        This performs the check to see if we're debugging at a specific
        level
      * debugmessage(self, section, *message)
        This outputs the specific message with associated debug formatting.

   * All functions in Axon (more or less - couple of exceptions) changed
     over to use the new style debugging approach. Means that in order to
     have sensible runtime speed you no longer have to run with python -OO
     flags.

1.0.1 -> 1.0.2
   * Fixes for example in README, pulled out into an Examples directory.
     (Thanks to: "Gangadhar NPK" <npk.gangadhar at gmail dot com>)

1.0 -> 1.0.1
   * Distribution now included initial version of combined docs. This needs
     santisation.
