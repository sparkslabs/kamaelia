These files are lightly adapted files from Ciaran Eaton's projects whilst
working with the Kamaelia Project at BBC R&D from Janurary 2005. 

In this directory there are 2 projects.
   A One was the main project - designed to simulate browsing & viewing of
     content on a PVR. (Snapshot serving)
   B The other was a "take the set of pipeline names, and a shakespeare
     script and play". This was also the project for learning the
     principles in Axon.

The adaptations are largely made to remove an assumption of what operating
system the code is running under. 

Project A
---------
   * Server.py - Server - listens on port 1616
   * PygameClient.py - Client - connects to 127.0.0.1 1616 by default
   * servercontent - Content for the server
   * tmp - scratch space for the client

Also the code branching (in the "snapshot client") trying to detect if
the code is running on a mobile or not has been removed. (This works/ed
reliably when the only two options were Windows/Series60, but when extended
to Mac OS X, and other unices becomes too clever for it's own boots :)

The text files are taken from output from the BSD "fortune" program. I
took the photos (for better or worse :), so feel free to use them. The mpeg
video is a 9 second clip from Open Source Forum Russia (again, I took the
video), of when some dancers were dancing through the exhibitor area.

Project B
---------
   * characters - directory of images representing characters in the play
   * miniaxon_scriptview.py - The learning version of axon, and the code
     that Ciaran wrote to use this in order to play with a pipeline.
   * scriptview.py - A slight adaptation of this code to use the core Axon
     code.
   * pygame_display.py - Used by both versions for actual display.
   * twelfthnight.txt - Copy of Shakespeare's twelfthnight.txt.

This project actually was designed to show how you could build a pipeline
mimicking the example at the bottom of the following web page that showed
how one might use a CELL CPU (eg in the PS3) in a parallel manner to decode
a Digital TV signal:
   * http://www.blachford.info/computer/Cells/Cell3.html



Michael, June 2005
