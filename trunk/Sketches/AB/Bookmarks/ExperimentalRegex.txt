The below are experimental. Some optimisations are probably possible, particularly around matching of case which doesn't seem right.
These also won't catch non-standard method of retweeting etc

Retweets:
re.sub("^\s","",re.sub("((^|\S{0,}\s){1,})(RT|rt|Rt|rT)\s@\S{1,}","",textgoeshere,re.I))

Via Retweets:
re.sub("\s(via|Via|VIA)\s@\S{1,}$","",textgoeshere,re.I)

"" Retweets:
Pretty rare - perhaps we'll ignore these


# Requires individual words to be passed in for fixing
def spellingFixer(text):
	# Fix ahahahahahaha and hahahahaha
	text = re.sub("[ha]{1,}$","haha",text,re.I)
	# fix looooooool and haaaaaaaaaaa - fails for some words at the mo, for example welllll will be converted to wel, and hmmm to hm etc
	# Perhaps we could define both 'lol' and 'lool' as words, then avoid the above problem by reducing repeats to a max of 2
	x = re.findall(r'((\D)\2*)',text,re.I)
	for entry in sorted(x,reverse=True):
		if len(entry[0])>2:
			text = text.replace(entry[0],entry[1])
		if len(text) == 1:
			text += text
	return text


The above needs to be able to handle (YES/NO indicates current capabilities):

hahahahahaha - YES
ahahahaha - YES
haaaaaaaaa - YES
loooooool - YES
lool - NO
wellllll - NO
hmmmmmm - NO
soooooo - YES
mmmmmm - YES
ooooh - ISH, would be better returning ooh rather than oh
aaawwww - YES
aaawwwh - YES
yaaaaay - YES
eeeeewww - YES
mwahahahaha - NO, converts to haha (I'm being pedantic, this should really be an evil laugh, but I doubt it matters)
omggggg - YES
