In the file Kamaelia/Internet/ConnectedSocketAdapter.py:

203c162,168
<        self.socket.shutdown(2)
---
>        try:
>           self.socket.shutdown(2)
>        except Exception,e:
>           print "Error!!!!",e
>           import traceback
>           traceback.print_exc()
>           pass

(This is not related with the HTTP module, but sometimes it raised a socket.error saying that the endpoint was closed:
Error!!!! (107, 'Transport endpoint is not connected')
Traceback (most recent call last):
  File "/usr/lib/python2.5/site-packages/Kamaelia/Internet/ConnectedSocketAdapter.py", line 163, in stop
    self.socket.shutdown(2)
  File "<string>", line 1, in shutdown
error: (107, 'Transport endpoint is not connected')

And in the file Kamaelia/Protocol/HTTP/HTTPParser.py

147a148
>         self.controlmessages = []
180c181,182
< 
---
>             else:
>                 self.controlmessages.append(temp)
222c224,227
<             if self.shouldShutdown(): return
---
>             if self.shouldShutdown(): 
>                 return
>             if len(self.controlmessages) > 0:
>                 return
334a340,347
>             while len(self.controlmessages) > 0:
>                 temp = self.controlmessages.pop(0)
>                 if isinstance(temp, producerFinished):
>                     connectionopen = False
>                     break
>                 elif isinstance(temp, shutdown):
>                     return


The main problem in HTTPParser is that it doesn't manage producerFinished messages. So, when calling shouldShutdown() 
these messages are discarded. Due to discarded messages, in the getBodyDependingOnHalfClose and the getInitialLine (and 
other, these were the ones breaking current tests) methods HTTPParser can enter in an endless loop. 

