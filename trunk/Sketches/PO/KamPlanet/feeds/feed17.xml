<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'><id>tag:blogger.com,1999:blog-36506138</id><updated>2008-06-06T08:06:09.600-04:00</updated><title type='text'>whit537</title><link rel='alternate' type='text/html' href='http://blag.whit537.org/search/label/python'/><link rel='next' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/-/python?start-index=26&amp;max-results=25'/><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/-/python'/><author><name>whit537</name><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>47</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-36506138.post-8291511985002122814</id><published>2008-05-29T09:34:00.005-04:00</published><updated>2008-05-29T11:40:28.862-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>First desktop app: transfer gremlin</title><content type='html'>I wrote my first desktop app, called &lt;span style="font-style: italic;"&gt;The ADP/ACS Transfer Gremlin&lt;/span&gt;&lt;span&gt; (ADPGremlin)&lt;/span&gt;. It is a little GUI automation script for transferring data from a spreadsheet we get from &lt;a href="http://www.adp.com/"&gt;ADP&lt;/a&gt; to a screen on our back-office system, &lt;a href="http://www.acstechnologies.com/"&gt;ACS&lt;/a&gt; (which has pretty dismal integration options). Screenshot:&lt;br /&gt;&lt;br /&gt;&lt;img src="http://static.whit537.org/2008/ADPGremlin.gif" alt="The ugly duckling" /&gt;&lt;br /&gt;&lt;br /&gt;Here are the modules used:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://python.net/crew/mhammond/win32/Downloads.html"&gt;pywin32&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;win32clipboard—for prepping text to be pasted&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;win32gui—for switching windows&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;a href="http://www.rutherfurd.net/python/sendkeys/"&gt;SendKeys&lt;/a&gt;—for sending keystrokes to the active window. (&lt;a href="http://blag.whit537.org/2007/10/sendkeys-is-fantastic.html"&gt;I like this module.&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.wxpython.org/"&gt;wxPython&lt;/a&gt;—for building the GUI&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.lexicon.net/sjmachin/xlrd.htm"&gt;xlrd&lt;/a&gt;—for reading Excel files&lt;/li&gt;&lt;/ul&gt;It is packaged with &lt;a href="http://www.py2exe.org/"&gt;py2exe&lt;/a&gt; as a &lt;a href="http://www.py2exe.org/index.cgi/SingleFileExecutable"&gt;single-file executable&lt;/a&gt;, and has a &lt;a href="http://www.py2exe.org/index.cgi/CustomIcons"&gt;custom icon&lt;/a&gt; both in Windows Explorer and the window itself. &lt;a href="http://www.acn-us.org/svn/geeks/ADPGremlin/trunk/"&gt;Source code&lt;/a&gt; is available.&lt;br /&gt;&lt;br /&gt;ADPGremlin should save our accountant about an hour each time he uses it. It took me about 10 hours to write, so it should pay for itself time-wise in about 5 months. Most of the time was spent learning wxPython (and it's still pretty ugly). The only real gotcha learned is that you have to remember to use &lt;a href="http://docs.python.org/lib/built-in-funcs.html#l2h-54"&gt;the 'b' modes&lt;/a&gt; when reading/writing files on Windows.&lt;br /&gt;&lt;br /&gt;Bigger picture: I've had it in the back of my head to write a user-friendly GUI for Aspen, and now I know how to do it.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/05/first-desktop-app-transfer-gremlin.html' title='First desktop app: transfer gremlin'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=8291511985002122814' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/8291511985002122814/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/8291511985002122814'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/8291511985002122814'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-2049053418123512195</id><published>2008-04-30T08:09:00.005-04:00</published><updated>2008-04-30T09:17:26.322-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gheat'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Gheat 0.2: Pygame, pretty colors</title><content type='html'>A couple weeks ago I asked for suggestions on &lt;a href="http://blag.whit537.org/2008/04/scaling-gheat.html"&gt;how to scale Gheat&lt;/a&gt;, and Rene Dudfield offered that &lt;a href="http://blag.whit537.org/2008/04/scaling-gheat.html?showComment=1208220840000#c6501984810657205010"&gt;Pygame would probably be faster&lt;/a&gt; than PIL. He was right! In &lt;a href="http://code.google.com/p/gheat/"&gt;Gheat version 0.2&lt;/a&gt; I've added a Pygame backend, which is indeed three or four times faster then the PIL backend—thanks, Rene!&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;"&gt;&lt;/span&gt;Also new in this release:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.zetadev.com/software/gheat/0.2/__/doc/html/"&gt;Documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.zetadev.com/software/gheat/0.2/__/doc/html/configuration.html"&gt;Configuration options&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.zetadev.com/software/gheat/0.2/__/doc/html/configuration.html#SECTION003200000000000000000"&gt;Custom color schemes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.zetadev.com/software/gheat/0.2/__/doc/html/configuration.html#SECTION003100000000000000000"&gt;Per-pixel transparencies&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://code.google.com/p/gheat/issues/list?can=1&amp;amp;q=%22in+0.2%22"&gt;Bug-fixes&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;Here's a little promo:&lt;br /&gt;&lt;br /&gt;&lt;object height="323" width="512"&gt;&lt;param name="movie" value="http://d.yimg.com/static.video.yahoo.com/yep/YV_YEP.swf?ver=2.1.14"&gt;&lt;param name="allowFullScreen" value="true"&gt;&lt;param name="flashVars" value="id=7618121&amp;amp;vid=2493505&amp;amp;lang=en-us&amp;amp;intl=us&amp;amp;thumbUrl="&gt;&lt;embed src="http://d.yimg.com/static.video.yahoo.com/yep/YV_YEP.swf?ver=2.1.14" type="application/x-shockwave-flash" allowfullscreen="true" flashvars="id=7618121&amp;amp;vid=2493505&amp;amp;lang=en-us&amp;amp;intl=us&amp;amp;thumbUrl=" height="323" width="512"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;br /&gt;&lt;span style="font-size:78%;"&gt;(YouTube unsynced the audio and video, hence, Yahoo!)&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-weight: bold;"&gt;Homepage:&lt;/span&gt; &lt;a href="http://code.google.com/p/gheat/"&gt;http://code.google.com/p/gheat/&lt;/a&gt;</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/04/gheat-02-pygame-pretty-colors.html' title='Gheat 0.2: Pygame, pretty colors'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=2049053418123512195' title='2 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/2049053418123512195/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/2049053418123512195'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/2049053418123512195'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-711660154966939568</id><published>2008-04-14T10:53:00.004-04:00</published><updated>2008-04-16T09:49:05.002-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gheat'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Scaling gheat</title><content type='html'>I gave a lightening talk on &lt;a href="http://code.google.com/p/gheat/"&gt;gheat&lt;/a&gt; at &lt;a href="http://devhousepgh.org/"&gt;DevHouse Pittsburgh&lt;/a&gt; last Thursday. DevHouse was a good time, and it worked! I met &lt;a href="http://www.gierard.com/"&gt;Isaac&lt;/a&gt; and we had a good conversation about how to scale gheat.&lt;br /&gt;&lt;br /&gt;Heatmaps are expensive to generate, which makes them infeasible for applications approaching anything like real time. Most of the cost is in the multiply operation (see &lt;a href="http://gheat.googlecode.com/svn/tags/0.1/__/lib/python/gheat.py"&gt;the source&lt;/a&gt;). This operation is already written in C (it's part of PIL), so what else could we do to optimize this?&lt;br /&gt;&lt;br /&gt;We came up with two ideas. First, we could parallelize it. Split up tiles even further, generate mini-heatmaps, and then knit them back together. This is basically carrying Google's tiling strategy even further. You'd have to distribute the parallelization over a number of CPUs to make it worthwhile. And since points just off the edge of a tile affect the tile itself, you end up with this overlap area where you are really doing double work. The smaller the tiles, the larger the overlap. At maximum parallelization you are doing fully twice the work.&lt;br /&gt;&lt;br /&gt;The other idea was to reduce the dot resolution. Perhaps multiplying 100 dots looks about the same as multiplying only 10 well-placed dots. And probably, finding those 10 dots is cheaper than multiplying all 100. To make this work, you would need to calibrate your dot resolution to the zoom level. You would also need to normalize across all your data so the heatmap meant the same thing everywhere. For this reason, local changes could potentially ripple out to affect the entire dataset, which would hurt caching (our current optimization strategy). As always, optimizations are not without trade-offs.&lt;br /&gt;&lt;br /&gt;Wouldn't it be neat to have real-time heatmaps?</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/04/scaling-gheat.html' title='Scaling gheat'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=711660154966939568' title='5 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/711660154966939568/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/711660154966939568'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/711660154966939568'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5812044877177032570</id><published>2008-04-10T15:01:00.019-04:00</published><updated>2008-04-11T11:26:20.731-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Simplates, biblical Greek on Google App Engine</title><content type='html'>I scored a preview account on &lt;a href="http://appengine.google.com/"&gt;Google App Engine&lt;/a&gt; (GAE). Before I say anything else, let me say  congratulations to the team at Google that pulled this off. THIS IS UNQUESTIONABLY REALLY FREAKING AWESOME. The rest of us can now write programs for The Google. In Python. WOW. Nothing I say below should detract from that baseline awesomeness.&lt;br /&gt;&lt;br /&gt;So after getting "Greetings, program!" to work, I looked at porting &lt;a href="http://code.google.com/p/gheat/"&gt;gheat&lt;/a&gt; from Aspen to GAE. Unfortunately, the Python library available doesn't include PIL, so that was a quick dead end. I'm sure they will add PIL and other common third-party C extensions eventually. And lest you think I'm disappointed, remember: I AM WRITING A PROGRAM TO BE RUN ON THE GOOGLE. AND I'VE GOT ALMOST THE ENTIRE FREAKING STANDARD LIBRARY.&lt;br /&gt;&lt;br /&gt;So I decided instead to port a text-based project, which I'm calling "Bibligon" (it was previously called Textus but that name is taken on Google; the error message indicates that app engine apps actually share a namespace with Google accounts). &lt;a href="http://bibligon.appspot.com/"&gt;Bibligon&lt;/a&gt; is a hack I did while taking a biblical Greek class last spring. It's a way to annotate a fixed text down to the character level. The original was written using &lt;a href="http://www.zetadev.com/software/aspen/0.8/doc/html/api-handlers-simplates.html"&gt;Django simplates&lt;/a&gt;, served by &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen&lt;/a&gt;. GAE bundles Django(!), and Bibligon is an app that would grow lots of data quickly if it were actually used, so it seems like a good fit.&lt;br /&gt;&lt;br /&gt;Porting Bibligon to GAE makes me appreciate all over again why I wrote &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen&lt;/a&gt; and Simplates in the first place. For example, GAE's filesystem layout is nasty. You've got scripts that depend on Python modules being in a certain location relative to them. You've got nested Python paths. You've got Python files and static files and template files and configuration files and framework files and user files all jumbled together willy-nilly. Why not use something like &lt;a href="http://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt; to keep it all straight? (Caveat emptor: I AM PORTING MY APPLICATION TO THE GOOGLE. THIS IS UNREMITTINGLY AWESOME.)&lt;br /&gt;&lt;br /&gt;I also found the development server annoying. A couple of issues were peculiar to my setup. I develop on FreeBSD from Windows via VMWare. Due to &lt;a href="http://blag.whit537.org/2007/05/flaky-network-on-freebsd-62-under.html"&gt;a bug in VMWare&lt;/a&gt;, the connection hangs every so often, and I have to restart the network interface on FreeBSD. With Aspen, I just refresh the page I am working on and it immediately clears the now-dead socket. GAE uses BaseHTTPServer, though, and I have to go kill and restart the server process before I can connect again. It's probably a socket timeout setting or something. Another quirk of this setup is that I can't just bind to localhost because I'm not hitting the server from localhost. I have to bind to the server's external address. Aspen does this by default if no address is specified, but not so BaseHTTPServer. Not a big deal, as there is a command-line switch. (AND DID I MENTION THAT I'M DEVELOPING APPS FOR THE GOOGLE? IN PYTHON?)&lt;br /&gt;&lt;br /&gt;A few other dev server warts are more general. Even though GAE supports WSGI, requests are more or less wrapped in CGI. This means that anything you print shows up in the browser, before the response headers. You have to use the logging module to see things in the console. That's not so bad because you really do want to use logging anyway to take advantage of the GAE dashboard's log browsing interface. But this also breaks PDB; &lt;span style="font-family:courier new;"&gt;set_trace()&lt;/span&gt; just gives you BDBQuit in the browser. Moreover, they decided to use cgitb to display tracebacks, which means you have to scroll through tons of undifferentiated purple to see the actual error, which is at the bottom of the page. I also have to hit F5 twice to reload a page, but this could be related to my setup. I haven't yet done all the digging I could on these issues, and besides that, I HAVE A LOCAL COPY OF THE GOOGLE RUNNING ON MY LOCAL MACHINE, LOCALLY SERVING THE APPLICATION I AM LOCALLY DEVELOPING FOR DEPLOYMENT ON THE GOOGLE.&lt;br /&gt;&lt;br /&gt;YAML was a good choice for configuration. It's not too dissimilar from &lt;a href="http://www.zetadev.com/software/aspen/0.8/doc/html/handlers-conf.html"&gt;the handlers syntax&lt;/a&gt; in Aspen, and it's a standard. I would like to see a published API for accessing this configuration from my programs, though. (NOTE: I AM CONFIGURING PROGRAMS TO RUN ON THE GOOGLE.)&lt;br /&gt;&lt;br /&gt;So my first impression? Google App Engine is kind of ugly. BUT THIS UGLINESS IS VASTLY OVERSHADOWED BY THE INCREDIBLE COOLNESS OF WHAT YOU ARE DOING—RUNNING PYTHON APPS ON THE GOOGLE—AND THE SHEER IMPRESSIVENESS THAT THEY PULLED THIS THING OFF AT ALL.&lt;br /&gt;&lt;br /&gt;As far as actual code goes, I did get Simplates working. Since GAE bundles Django, I just had to add a &lt;span style="font-family:courier new;"&gt;main()&lt;/span&gt; function to &lt;a href="http://aspen.googlecode.com/svn/trunk/lib/python/aspen/handlers/simplates/django_.py"&gt;the Django simplates module&lt;/a&gt; in order for it to be usable as a GAE  handler script. I also tweaked the subpackage so it can be used apart from the rest of Aspen. If you want to play with it, svn checkout &lt;a href="http://aspen.googlecode.com/svn/trunk/lib/python/aspen/handlers/simplates/"&gt;the simplates subpackage&lt;/a&gt; into your GAE project directory, and use 'simplates/django_.py' as your &lt;a href="http://code.google.com/appengine/docs/configuringanapp.html#Script_Handlers"&gt;script handler&lt;/a&gt;. You'll also have to wire up Django and use a couple names that are hardcoded for now. Use the source and let me know if you want some pointers. (NB: THE POINTERS WILL BE FOR LOADING AND RUNNING DJANGO SIMPLATES ON THE GOOGLE.)&lt;br /&gt;&lt;br /&gt;So with Simplates working, I'm ready to start on actually porting &lt;a href="http://bibligon.appspot.com/"&gt;Bibligon&lt;/a&gt;. The Django and GAE data models are similar, and in addition to getting static files and simplates working, I've got my first piece of data posted. I should be able to get the whole thing ported in about a day. But unfortunately today is not that day. April 15 is looming large over someone who hasn't entered anything into QuickBooks for over a year. :^(&lt;br /&gt;&lt;br /&gt;P.S. A QUICKBOOKS KILLER COULD POTENTIALLY BE WRITTEN AS AN APPLICATION RUNNING ON THE GOOGLE. YOU OR I COULD WRITE THIS APPLICATION, THE APPLICATION RUNNING ON THE GOOGLE, KILLING QUICKBOOKS.&lt;br /&gt;&lt;br /&gt;P.P.S. And of course, the corporate techno-beast tightens its stranglehold on civilization, but waddya want?</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/04/simplates-biblical-greek-on-google-app.html' title='Simplates, biblical Greek on Google App Engine'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=5812044877177032570' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/5812044877177032570/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/5812044877177032570'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5812044877177032570'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-8487684755312283860</id><published>2008-01-28T22:18:00.001-05:00</published><updated>2008-04-16T09:49:05.004-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gheat'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>gheat: a Python heatmap for Google Maps</title><content type='html'>&lt;a href="http://code.google.com/p/gheat/"&gt;&lt;img src="http://static.whit537.org/2007/heatmap.jpg" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Last summer I &lt;a href="http://blag.whit537.org/2007/07/heatmap-for-google-maps.html"&gt;rolled out&lt;/a&gt; a heatmap tile layer for Google Maps, and I mentioned the possibility of open-sourcing it. I've gotten five requests since then, the latest coming yesterday. So, without further ado, I present to you: &lt;a href="http://code.google.com/p/gheat/"&gt;gheat&lt;/a&gt;. Sorry for not getting it out sooner.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/01/gheat-python-heatmap-for-google-maps.html' title='gheat: a Python heatmap for Google Maps'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=8487684755312283860' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/8487684755312283860/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/8487684755312283860'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/8487684755312283860'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5317362247458580959</id><published>2007-12-24T00:22:00.000-05:00</published><updated>2007-12-24T00:28:41.914-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='aspen'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Aspen 0.8: Meet simplates</title><content type='html'>Today I released &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen version 0.8&lt;/a&gt;. The big new feature is called &lt;a href="http://www.zetadev.com/software/aspen/0.8/doc/html/api-handlers-simplates.html"&gt;&lt;span style="font-style: italic;"&gt;simplates&lt;/span&gt;&lt;/a&gt;. Here's the announcement:&lt;br /&gt;&lt;object height="350" width="425"&gt;&lt;br /&gt;&lt;param name="movie" value="http://www.youtube.com/v/Slk95WWL138"&gt;&lt;br /&gt;&lt;embed src="http://www.youtube.com/v/Slk95WWL138" type="application/x-shockwave-flash" height="350" width="425"&gt;&lt;/embed&gt;&lt;br /&gt;&lt;/object&gt;&lt;br /&gt;And here are &lt;a href="http://www.zetadev.com/software/aspen/"&gt;all the goodies&lt;/a&gt;.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/12/aspen-08-meet-simplates.html' title='Aspen 0.8: Meet simplates'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=5317362247458580959' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/5317362247458580959/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/5317362247458580959'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5317362247458580959'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-7857794327852687796</id><published>2007-10-25T14:46:00.000-04:00</published><updated>2007-10-25T16:22:50.432-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>SendKeys is fantastic</title><content type='html'>&lt;a href="http://www.acn-us.org/"&gt;We&lt;/a&gt; use &lt;a href="http://www.acstechnologies.com/"&gt;a database&lt;/a&gt; that doesn't let me delete multiple entries at once. ACK. Since the import mechanism is likewise crusty, I've ended up with several hundred new records that I want to back out. Shame on me for not being more careful with backups, but now I need in fact to delete hundreds of records at once.&lt;br /&gt;&lt;br /&gt;This is a perfect use case for a GUI automator, of which there are several for Python on Windows. The one I've &lt;a href="http://blag.whit537.org/2007/01/fun-with-screen-scraping.html"&gt;tried before&lt;/a&gt; is &lt;a href="http://www.openqa.org/pywinauto/"&gt;pywinauto&lt;/a&gt; (good list there of the others). I got it to work, but it felt as dirty as Windows itself. Consider this snippet from my pywinauto &lt;a href="http://static.whit537.org/2007/get-newsletters.py"&gt;script&lt;/a&gt;, which saves a series of web pages opened as tabs in Firefox:&lt;br /&gt;&lt;pre&gt;app = Application().start_(FIREFOX % url)&lt;br /&gt;time.sleep(3)&lt;br /&gt;if not app.windows_(): # Firefox wasn't already running; we launched it&lt;br /&gt;app = Application().connect_(title_re=".* - Mozilla Firefox")&lt;br /&gt;firefox = app.window_(title_re=".* - Mozilla Firefox")&lt;br /&gt;&lt;br /&gt;firefox.TypeKeys("%FA") # File -&gt; Save As&lt;br /&gt;while app.SaveAs.FileNameEdit.TextBlock() != save_as:&lt;br /&gt;app.SaveAs.FileNameEdit.SetEditText(save_as)&lt;br /&gt;app.SaveAs.TypeKeys("%S") # "Save" button&lt;br /&gt;firefox.TypeKeys("%FC") # File -&gt; Close Tab&lt;/pre&gt;&lt;a href="http://www.rutherfurd.net/python/sendkeys/index.html"&gt;SendKeys&lt;/a&gt; is much more intuitive. It always inputs to the active window, so you don't have to mess with app and window objects. Instead, you spend your time in a neat mini-language that closely mirrors the process of manually manipulating Windows. The documentation is concise and clear, and the module has no additional dependencies, not even ctypes!&lt;br /&gt;&lt;br /&gt;Here is the above, ported to SendKeys (% is the &lt;span style="font-style: italic;"&gt;alt&lt;/span&gt; modifier in both scripts):&lt;br /&gt;&lt;pre&gt;import SendKeys&lt;br /&gt;&lt;br /&gt;SendKeys.SendKeys("""&lt;br /&gt;&lt;br /&gt;    {LWIN}rFirefox.exe{ENTER}   {PAUSE 3}&lt;br /&gt;    %fa                         {PAUSE .5}&lt;br /&gt;    New{SPACE}filename.html     {PAUSE 1}&lt;br /&gt;    %s                          {PAUSE 1}&lt;br /&gt;    %fc                         {PAUSE 1}&lt;br /&gt;&lt;br /&gt;""", pause=0.1)&lt;/pre&gt;GUI automation is like comedy: it's all in the timing. Watch both micro-timings and longer application-blocking actions. "Instantaneous" for a human means &lt;a href="http://www.useit.com/papers/responsetime.html"&gt;less than one-tenth of a second&lt;/a&gt;, but not for a computer, and you need to account for the micro-seconds between manual keystrokes: SendKeys' global &lt;code&gt;pause&lt;/code&gt; argument is therefore a great touch. With actions that actually block the application, script for the worst case, because once a script gets out of sync with the current Windows state, there's no going back. So if a certain action takes between 1 and 2 seconds to complete, give it 2.25. A third of the work is getting the keystrokes right, the rest is tweaking the timing to be as fast as possible while observing zero tolerance for error.&lt;br /&gt;&lt;br /&gt;One trick is to prep as much as you can, like on a cooking show. For example, I needed to type in a reason for each record I was deleting. Having SendKeys type this for me takes maybe half a second, but putting it in the paste buffer and having SendKeys merely paste it for me is much closer to instantaneous. A half-second per iteration is over 8 minutes on 1000 iterations.&lt;br /&gt;&lt;br /&gt;SendKeys could easily be developed into an outright shell, passing in automation scripts on the command line. You would need a mechanism for specifying the additional arguments like &lt;code&gt;pause&lt;/code&gt; (mime-style headers would suffice), and you would also want a commenting capability (just add # to the list of special characters). All in all, though, I highly recommend it when you need to hack together a GUI automation script.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/10/sendkeys-is-fantastic.html' title='SendKeys is fantastic'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=7857794327852687796' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/7857794327852687796/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/7857794327852687796'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/7857794327852687796'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-4425211177366771461</id><published>2007-08-17T03:53:00.001-04:00</published><updated>2007-08-17T04:21:32.861-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Welcome back, Planets Python!</title><content type='html'>I've been absent from the Planet Python aggregators for a few months because I decided to combine my technical blog with my personal one (hence, URL change), and I also hit a &lt;a href="http://blag.whit537.org/2007/05/blam1.html"&gt;really busy&lt;/a&gt; few months. Now I'm back in the mix, thanks to Andrew K., Ryan P., and a slightly calmer life.&lt;br /&gt;&lt;br /&gt;Most of my Python energy these days goes to &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen&lt;/a&gt;, which is a Python web server. I &lt;a href="http://blag.whit537.org/2006/11/announcing-aspen-wsgi-rific-web-server.html"&gt;released&lt;/a&gt; Aspen 9 months ago today. I haven't done a release for 6 months, but that's because I've been too busy using it! I have, however, gotten great feedback from PyCon, the &lt;a href="http://mail.python.org/mailman/listinfo/web-sig"&gt;WSGI crowd&lt;/a&gt;, and &lt;a href="http://groups.google.com/group/aspen-users/"&gt;Aspen's mailing list&lt;/a&gt;, in addition to my own increasing experience with it. I think Aspen might be a keeper. I recently added something called &lt;a href="http://aspen.googlecode.com/svn/trunk/lib/python/aspen/handlers/simplates/"&gt;Simplates&lt;/a&gt;, which I'm using for all my new web development, and yesterday we started working on &lt;a href="http://groups.google.com/group/aspen-users/browse_thread/thread/1c106d25edff621e"&gt;a connector for mod_wsgi&lt;/a&gt;. I'll do another release when I can write tests, documentation, and marketing materials. Hopefully this fall; earlier if you chip in. :^)&lt;br /&gt;&lt;br /&gt;In the mean time, glad to be back. Happy hacking!</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/08/welcome-back-planets-python.html' title='Welcome back, Planets Python!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=4425211177366771461' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/4425211177366771461/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/4425211177366771461'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/4425211177366771461'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-3230591268632972326</id><published>2007-07-29T22:56:00.000-04:00</published><updated>2007-07-30T00:32:41.919-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='c'/><title type='text'>My first C program!</title><content type='html'>After &lt;a href="http://blag.whit537.org/2007/07/first-c-contribution.html"&gt;my first C contribution&lt;/a&gt; last month, I've now written &lt;a href="https://www.zetadev.com/passwords/index.c"&gt;my first C program&lt;/a&gt;! It's a port &lt;a href="https://www.zetadev.com/passwords/index.py.txt"&gt;from Python&lt;/a&gt; of &lt;a href="http://blag.whit537.org/2007/07/build-better-password.html"&gt;this weekend's&lt;/a&gt; &lt;a href="https://www.zetadev.com/passwords/"&gt;Easy Password Generator&lt;/a&gt;&lt;a href="https://www.zetadev.com/passwords/index.py.txt"&gt;&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Both versions are implemented as a CGI, with &lt;a href="https://www.zetadev.com/passwords/index.c.cgi"&gt;the C version&lt;/a&gt; benchmarking about 500% faster than &lt;a href="https://www.zetadev.com/passwords/index.py.cgi"&gt;the Python version&lt;/a&gt;. (~100 req/sec vs. ~20). Both programs read a &lt;code&gt;template.html&lt;/code&gt; file in the same directory, and interpolate a string into the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag—a possible redirect to HTTPS—and two more into the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;—a list of passwords (taken from &lt;code&gt;apg(1)&lt;/code&gt;), and a Python/C version indicator.&lt;br /&gt;&lt;br /&gt;Working with streams in C was pretty easy, whether stdin/out, process pipes, or filesystem files. However, I struggled to convert streams into strings (aka "character arrays"): first, getting the template off the filesystem, and then parsing the &lt;code&gt;apg(1)&lt;/code&gt; output. I'm particularly confused by the relationship between pointers and arrays. The crux of the matter, I think, is that "the value of [an] array is the address of element zero of the array" [&lt;a href="http://blag.whit537.org/2006/11/i-got-k-for-my-birthday.html"&gt;K&amp;amp;R&lt;/a&gt;, 99], but it will take more practice to grok that. I suspect, then, that my "&lt;code&gt;char PAGE[1024 * 50]&lt;/code&gt;" and "&lt;code&gt;int append(...)&lt;/code&gt;" hacks look quaint at best, and that memory allocation is also going to factor into things very soon.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/07/my-first-c-program.html' title='My first C program!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=3230591268632972326' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/3230591268632972326/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/3230591268632972326'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3230591268632972326'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-1616284234444018255</id><published>2007-07-10T17:54:00.000-04:00</published><updated>2007-07-12T22:51:14.633-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Heatmap for Google Maps</title><content type='html'>&lt;a href="http://www.acn-us.org/local/"&gt;&lt;img src="http://static.whit537.org/2007/heatmap.jpg" alt="heatmap" title="heatmap" height="200" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Today I rolled out &lt;a href="http://www.acn-us.org/local/"&gt;a heatmap for our embedded Google Map&lt;/a&gt;. Now I find &lt;a href="http://www.fortiusone.com/"&gt;FortiusOne&lt;/a&gt; doing the same via their &lt;a href="http://www.geocommons.com/"&gt;GeoCommons&lt;/a&gt; social network and &lt;a href="http://www.geoiq.com/"&gt;GeoIQ&lt;/a&gt; web service.&lt;br /&gt;&lt;br /&gt;GeoIQ &lt;a href="http://www.geocommons.com/javascripts/geoiq_google.js"&gt;uses&lt;/a&gt; a straight &lt;a href="http://code.google.com/apis/maps/documentation/reference.html#GOverlay"&gt;GOverlay&lt;/a&gt;, and I'm impressed at their performance, since they basically have to generate every single image every single time. I tried GOverlay, but opted for &lt;a href="http://code.google.com/apis/maps/documentation/reference.html#GTileLayerOverlay"&gt;GTileLayerOverlay&lt;/a&gt;. This means I serve my heatmap in 256 x 256 chunks. I  generate a tile when it is actually requested, except for certain popular/expensive tiles, which I pre-generate. However, I only &lt;span style="font-style: italic;"&gt;re&lt;/span&gt;generate a tile when the data for that tile changes; otherwise it is served straight from the filesystem.&lt;br /&gt;&lt;br /&gt;Since FortiusOne has already staked out the commercial space (I'm guessing their business model revolves around consulting and licensing for non-public/non-free implementations), perhaps I'll open-source my implementation. It would make a good show-piece for &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen&lt;/a&gt;. However, FortiusOne are clearly domain experts, and their (Rails-based) service is much further along. So does the world want an open-source, Python-based heatmapper? And moreover, do I want to support it?</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/07/heatmap-for-google-maps.html' title='Heatmap for Google Maps'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=1616284234444018255' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/1616284234444018255/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/1616284234444018255'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/1616284234444018255'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-4471996614119724272</id><published>2007-07-09T14:11:00.000-04:00</published><updated>2007-07-09T20:55:57.683-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>FreeBSD threads, Apache, and mod_wsgi</title><content type='html'>I'm evaluating &lt;a href="http://code.google.com/p/modwsgi/"&gt;mod_wsgi&lt;/a&gt;, and my usual server environment is FreeBSD 6. Unfortunately, FreeBSD has gained a bad reputation for supporting Apache's thread-based &lt;a style="font-style: italic;" href="http://httpd.apache.org/docs/2.0/mod/worker.html"&gt;worker&lt;/a&gt; MPM  (more modern than the process-based &lt;a href="http://httpd.apache.org/docs/2.0/mod/prefork.html"&gt;&lt;span style="font-style: italic;"&gt;prefork&lt;/span&gt;&lt;/a&gt; MPM). I &lt;a href="http://www.modpython.org/pipermail/mod_python/2006-September/021984.html"&gt;wrestled with this last fall&lt;/a&gt; when I was evaluating mod_python. Now I'm wrestling with it again, because one needs a threaded Apache in order to take advantage of mod_wsgi's daemon mode.&lt;br /&gt;&lt;br /&gt;The complications begin with &lt;a href="http://lurker.clamav.net/message/20070311.104344.ac2ec049.en.html"&gt;FreeBSD's three threading implementations&lt;/a&gt;:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;libc_r:&lt;/span&gt; a userland threading library, all threads are library intern and it can't use multiple CPUs. &lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;libthr:&lt;/span&gt; a 1:1 kernel threading library. &lt;/li&gt;&lt;li&gt;&lt;span style="font-weight: bold;"&gt;libpthread:&lt;/span&gt; a n:m kernel threading library.&lt;/li&gt;&lt;/ul&gt;(Here's &lt;a href="http://kerneltrap.org/node/624"&gt;a much more detailed discussion&lt;/a&gt;.)&lt;br /&gt;&lt;br /&gt;Now, I found two actual data points last fall to scare me off from a threaded Apache on FreeBSD:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;"Apache starts eating 100% of the CPU and not answering queries." [&lt;a href="http://archives.seul.org/or/dev/Sep-2003/msg00016.html"&gt;source&lt;/a&gt;]&lt;/li&gt;&lt;li&gt;"I see a lot of stuck http gets in /server-status listing." [&lt;a href="http://lists.freebsd.org/pipermail/freebsd-apache/2005-November/000404.html"&gt;source&lt;/a&gt;]&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;The first is from September 2003, &lt;a href="http://www.freebsd.org/kse/"&gt;before libpthread had landed&lt;/a&gt;, and the claim that "FreeBSD threads suck. Bigtime" probably refers to the older libc_r library. The second instance is under Apache 2.0/FreeBSD 6.0, but it doesn't definitively address the case of &lt;a href="http://ivoras.sharanet.org/freebsd/gotchas.html"&gt;mixed threading libraries&lt;/a&gt;: with an empty &lt;a href="http://www.freebsd.org/cgi/man.cgi?query=libmap.conf"&gt;libmap.conf&lt;/a&gt;, one could end up with an &lt;span style="font-family:courier new;"&gt;httpd&lt;/span&gt; linked against libpthread loading modules linked against libraries that are linked against libc_r or libthr (right?). Given these question marks, I'm giving threaded Apache on FreeBSD another shot for the sake of a full-featured mod_wsgi.&lt;br /&gt;&lt;br /&gt;After getting mod_wsgi to compile, I saw Apache die silently after loading mod_wsgi. However, it looks like the problem is that &lt;a href="http://mail-archives.apache.org/mod_mbox/httpd-python-dev/200509.mbox/%3c20050912121753.W62057@grisha.dyndns.org%3e"&gt;the envvars trick to force Apache to "acquire threadedness"&lt;/a&gt; is now &lt;a href="http://groups.google.com/group/modwsgi/browse_frm/thread/df52123ce28bfc97/"&gt;coming back to haunt me&lt;/a&gt;. If you're using libpthread with Apache, then you &lt;span style="font-style: italic;"&gt;don't&lt;/span&gt; want another threading library linked via envvars, or really at all: I'm not going to touch libmap.conf for now, but if I see more problems, the first thing I'll try is overriding any use of libc_r with libpthread in libmap.conf. After that, I'll probably take future problems to the &lt;a href="http://lists.freebsd.org/mailman/listinfo/freebsd-apache"&gt;freebsd-apache&lt;/a&gt; and &lt;a href="http://lists.freebsd.org/mailman/listinfo/freebsd-threads"&gt;freebsd-threads&lt;/a&gt; lists. For now, though, I have mod_wsgi working with a threaded Apache 2.0, and that's enough for today.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/07/freebsd-threads-apache-and-modwsgi.html' title='FreeBSD threads, Apache, and mod_wsgi'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=4471996614119724272' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/4471996614119724272/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/4471996614119724272'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/4471996614119724272'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-808722777950140799</id><published>2007-07-03T08:23:00.001-04:00</published><updated>2007-07-10T19:07:31.556-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>How to hack on Google Maps</title><content type='html'>In working on improvements to &lt;a href="http://www.acn-us.org/local/"&gt;our embedded Google Map&lt;/a&gt;, I found that I needed functionality on the server-side that Google provides as &lt;a href="http://code.google.com/apis/maps/documentation/reference.html#GMercatorProjection"&gt;part of its javascript API&lt;/a&gt; (I'm looking at &lt;span style="font-family:courier new;"&gt;fromLatLngToPixel&lt;/span&gt;). The obvious answer is to port the javascript function to Python, but   Google obfuscates its javascript. I decided to try unobfuscating their code to see if that was easier than learning trig. It turned out to be the right way to go, because the function as written requires constants specific to Google Maps that I would either have needed to compute myself, or to unobfuscate anyway. (BTW, these constants seem to indicate that Google thinks it will have 31 zoom levels some day. They currently only use up to &lt;a href="http://maps.google.com/maps?f=q&amp;hl=en&amp;amp;amp;amp;amp;amp;amp;geocode=&amp;ie=UTF8&amp;amp;om=1&amp;ll=40.609408,-80.224442&amp;amp;spn=0.001134,0.001802&amp;t=k&amp;amp;z=19"&gt;level 19&lt;/a&gt; [0-indexed]. Level 30 is going to be really hi-res!)&lt;br /&gt;&lt;br /&gt;Now in fact, unobfuscating one function wasn't that hard. First, I copied two of Google's scripts to my server. You need &lt;a href="http://maps.google.com/maps?file=api&amp;v=2"&gt;the first one&lt;/a&gt; they &lt;a href="http://code.google.com/apis/maps/documentation/#The_Hello_World_of_Google_Maps"&gt;have you link to&lt;/a&gt;, and also the script that the first one loads (this is the one in the upper-right box on &lt;a href="http://mapki.com/wiki/Main_Page"&gt;Mapki&lt;/a&gt;). Using my text editor, I added line breaks to both after semicolons and end-braces. The first script isn't actually obfuscated, just minified, and it's not that long, so I actually went on to &lt;a href="http://javascript.about.com/library/blformat.htm"&gt;format&lt;/a&gt; the whole thing. Once I could read the first script, I only had to make two changes to it in order for both scripts to work from my server: I had to tweak the call to the second script from the first so it pointed to my version (in GLoadMapsScript at the bottom), and I had to comment out the key validation check (in GLoad). Then I linked to &lt;a href="http://static.whit537.org/2007/google-maps.js"&gt;my version of the first script&lt;/a&gt; from my HTML page, and it worked like normal! Blam.&lt;br /&gt;&lt;br /&gt;With Google's scripts under the reigns, &lt;a href="http://www.getfirebug.com/"&gt;Firebug&lt;/a&gt;'s &lt;a href="http://www.getfirebug.com/js.html"&gt;debugger&lt;/a&gt; made it trivial to isolate the function I wanted. I triggered a call to the function in a third script, and placed Firebug's special &lt;span style="font-family:courier new;"&gt;debugger&lt;/span&gt; keyword before the function call. That gave me a runtime debugger with which to simply step into Google's function. And with the script on my own server, I could then isolate the function in my text editor, format it, and poke it until it made sense. And once it made sense, it was a simple matter to &lt;strike&gt;&lt;a href="http://static.whit537.org/2007/gmerc.py"&gt;translate it to Python&lt;/a&gt;&lt;/strike&gt;.&lt;br /&gt;&lt;br /&gt;Now, mind you, I'm not opposed to learning trig. But when the exact function I need is already written, I'll definitely try a little hackery if it can save me some effort. And the effort I saved, I've spent on this blog post. So there. You win.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-size:85%;"&gt;&lt;span style="font-style: italic;"&gt;P.S. As far as I can tell I'm not violating the &lt;/span&gt;&lt;a style="font-style: italic;" href="http://code.google.com/apis/maps/terms.html"&gt;terms of service&lt;/a&gt;&lt;span style="font-style: italic;"&gt;. Please &lt;a href="mailto:chad@zetaweb.com"&gt;tell me&lt;/a&gt; if I am. I am not a lawyer.&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;b&gt;UPDATE:&lt;/b&gt; Actually, this is really bad form, isn't it? Google has not at all given me the right to port their obfuscated JavaScript to Python. I'm sorry. I've removed the Python script linked above. Should I take down this whole post?</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/07/how-to-hack-on-google-maps.html' title='How to hack on Google Maps'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=808722777950140799' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/808722777950140799/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/808722777950140799'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/808722777950140799'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-2719087716017393071</id><published>2007-06-28T15:25:00.000-04:00</published><updated>2007-06-28T15:30:46.360-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Quality free hosting for non-profits</title><content type='html'>If you are a webmaster working with non-profits, you need to know about &lt;a href="http://wiki.dreamhost.com/index.php/Non-profit_Discount"&gt;DreamHost's free hosting offer&lt;/a&gt;. &lt;a href="http://www.acn-us.org/"&gt;We&lt;/a&gt; signed up for one of these accounts, and it's great! We still have a &lt;a href="http://www.johncompanies.com/"&gt;John Companies&lt;/a&gt; jail for heavier Python apps (JC is absolutely rock-solid), but DreamHost is great for commodity hosting. If they ever support mod_wsgi, I'll be even happier.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/06/quality-free-hosting-for-non-profits.html' title='Quality free hosting for non-profits'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=2719087716017393071' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/2719087716017393071/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/2719087716017393071'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/2719087716017393071'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-2713054576959202464</id><published>2007-05-26T07:50:00.001-04:00</published><updated>2007-05-29T20:26:52.996-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='kml'/><title type='text'>Calculating distance from KML</title><content type='html'>I'd like to calculate the distance of &lt;a href="http://blag.whit537.org/2007/05/harmony-twp-5k-road-route.html"&gt;my running route&lt;/a&gt; from its Google Maps &lt;a href="http://maps.google.com/maps/ms?ie=UTF8&amp;hl=en&amp;amp;msa=0&amp;msid=100859649110530092918.00000112c4ee6f149e38d&amp;amp;amp;amp;amp;amp;amp;amp;t=h&amp;z=16&amp;amp;om=1"&gt;representation&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;The first step is to get the map in a programmable format, namely, &lt;a href="http://code.google.com/apis/kml/documentation/"&gt;KML&lt;/a&gt;. On &lt;a href="http://maps.google.com/maps/ms?ie=UTF8&amp;hl=en&amp;amp;msa=0&amp;msid=100859649110530092918.00000112c4ee6f149e38d&amp;amp;amp;amp;amp;amp;t=h&amp;z=16&amp;amp;om=1"&gt;the map&lt;/a&gt;, click the "&lt;a href="http://maps.google.com/maps/ms?ie=UTF8&amp;hl=en&amp;amp;om=1&amp;msa=0&amp;amp;output=nl&amp;msid=100859649110530092918.00000112c4ee6f149e38d"&gt;&lt;img src="http://maps.google.com/mapfiles//ms/view_as_kml.png" /&gt; KML&lt;/a&gt;" link to download the map in this XML format. The downloaded file contains a link to &lt;a href="http://maps.google.com/maps/ms?ie=UTF8&amp;amp;amp;amp;amp;amp;hl=en&amp;om=1&amp;amp;msa=0&amp;msid=100859649110530092918.00000112c4ee6f149e38d&amp;amp;output=kml"&gt;the "real" KML file&lt;/a&gt;. At first I got an &lt;span style="font-style: italic;"&gt;{errorText:"Unable to contact server."}&lt;/span&gt; error from this second link, and I had to open the first KML file in Google Earth, then save the real info to KML from there. Now this direct link is working though.&lt;br /&gt;&lt;br /&gt;Once you have the KML file, you need to parse out the coordinates of the line you're interested in, and then sum the distances of each segment of the line. Here's &lt;a href="https://www.zetadev.com/svn/public/utils/calc-distance.py"&gt;an initial attempt&lt;/a&gt;. I've assumed a square geometry since the distances are small, though in actuality the math is &lt;a href="https://answers.google.com/answers/threadview?id=577262"&gt;more complicated&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;But we're not done yet. I measured this route at 5km/3.1m in my car, but my script tells me that it is only 4.07km/2.53m long. Here are some possible reasons for the discrepancy:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;A square geometry won't work even at this scale.&lt;/li&gt;&lt;li&gt;The variations in elevation are significant (Google Maps only has lat/lng).&lt;/li&gt;&lt;li&gt;There is some other bug in my script.&lt;/li&gt;&lt;li&gt;I cut corners significantly closer when running than driving.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;My car's odometer is inaccurate.&lt;/li&gt;&lt;/ul&gt;Anything else I could be missing?</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/05/how-do-i-work-with-kml.html' title='Calculating distance from KML'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=2713054576959202464' title='1 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/2713054576959202464/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/2713054576959202464'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/2713054576959202464'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-6696643812461992836</id><published>2007-03-31T00:47:00.000-04:00</published><updated>2007-07-10T21:04:17.243-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='google'/><title type='text'>GData "Greetings, program!"</title><content type='html'>After &lt;a href="http://tech.whit537.org/2007/03/docs-for-googles-python-gdata-client.html"&gt;installing&lt;/a&gt; the new GData Python library, here is a &lt;a href="http://tech2.whit537.org/2007/gdata-greetings-program.py"&gt;Greetings, program!&lt;/a&gt; script that posts to Blogger, and here are some lessons learned:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;GData (Atom?) operates primarily on &lt;span style="font-style: italic;"&gt;feeds&lt;/span&gt;. When the API calls for a service URI, that is the URI  of your feed, and creating new items means inserting them into that feed.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Start with &lt;a href="http://tech2.whit537.org/2007/gdata-python/1.0/gdata.gdata_service.GDataService-class.html"&gt;&lt;code&gt;gdata_service.GDataService&lt;/code&gt;&lt;/a&gt;. There are specialized subclasses for Base, Calendar, and Spreadsheets. There isn't one for Blogger, probably because Blogger is basically straight Atom.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Use the classes in &lt;a href="http://tech2.whit537.org/2007/gdata-python/1.0/gdata.atom-module.html"&gt;the &lt;code&gt;atom&lt;/code&gt; module&lt;/a&gt; to construct blog entries, but note that the API is goofy. For example, here's how to construct an author: &lt;code&gt;Author(name=Name(text="Chad"))&lt;/code&gt;. Also, an &lt;code&gt;Entry&lt;/code&gt;'s &lt;code&gt;author&lt;/code&gt; argument/attribute is actually a list of &lt;code&gt;Author&lt;/code&gt; instances, not a single &lt;code&gt;Author&lt;/code&gt;. Etc.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;For the "Greetings, program!" script you'll need your blog's ID, which you can grab from just about any querystring when managing your blog using the Blogger dashboard. In general you can also post using a blogspot.com subdomain, or presumably a hosted custom domain.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;If you need to see an HTML error page, capture &lt;code&gt;gdata_service.RequestError&lt;/code&gt;, print &lt;code&gt;exc.args[0]['body']&lt;/code&gt;   to a file, then open it in your web browser. Usually, though, such messages are too generic to be helpful.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;As usual, RTFM (both the &lt;a href="http://tech2.whit537.org/2007/gdata-python/1.0/"&gt;API docs&lt;/a&gt; and the general &lt;a href="http://code.google.com/apis/gdata/index.html"&gt;GData docs&lt;/a&gt;), refer to the tests and &lt;a href="http://gdata-python-client.googlecode.com/svn/trunk/samples/"&gt;samples&lt;/a&gt; bundled with the distribution, and use the &lt;a href="http://gdata-python-client.googlecode.com/svn/trunk/"&gt;source&lt;/a&gt; when necessary.&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Gdata-python-client is quirky, but once you get oriented you realize how powerful it is. Hopefully over time they/we can smooth it out with some even higher-level APIs.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/03/gdata-program.html' title='GData &amp;quot;Greetings, program!&amp;quot;'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=6696643812461992836' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/6696643812461992836/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/6696643812461992836'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/6696643812461992836'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-224483997565267268</id><published>2007-03-30T23:15:00.000-04:00</published><updated>2007-07-10T21:04:17.244-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='google'/><title type='text'>Docs for Google's Python GData client</title><content type='html'>I'm finally getting around to a certain &lt;a href="http://code.google.com/apis/gdata/index.html"&gt;GData&lt;/a&gt; project tonight, and serendipitously, Google &lt;a href="http://googledataapis.blogspot.com/2007/03/snakes-on-gdata-announcing-python.html"&gt;released&lt;/a&gt;  an official &lt;a href="http://code.google.com/p/gdata-python-client/"&gt;Python client&lt;/a&gt; this past Monday. Unfortunately, it &lt;a href="http://groups.google.com/group/google-help-dataapi/t/53218e40508d9b9c"&gt;isn't packaged&lt;/a&gt; very well, and it isn't documented. I'm sure both of these will be addressed with time, but for now I'm posting some Epydocs: &lt;a style="font-weight: bold;" href="http://tech2.whit537.org/2007/gdata-python/1.0/"&gt;gdata-python-client API docs&lt;/a&gt;.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/03/docs-for-google-python-gdata-client.html' title='Docs for Google&amp;#39;s Python GData client'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=224483997565267268' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/224483997565267268/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/224483997565267268'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/224483997565267268'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-3098781905580117002</id><published>2007-02-27T11:15:00.000-05:00</published><updated>2007-07-10T21:04:17.245-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='wackiness'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>After PyCon, spring cleaning</title><content type='html'>Things were hectic in the run-up to PyCon, so I'm doing a little spring cleaning, pruning &lt;a href="http://tech.whit537.org/2007/02/one-directory-500000-files.html"&gt;old projects&lt;/a&gt; and what not. Now, there's something beautiful about a directory: a simple listing can hide so much complexity.&lt;br /&gt;&lt;pre&gt;$ ls&lt;br /&gt;foo&lt;br /&gt;$ rm -rf foo&lt;/pre&gt;Is this going to take a fraction of a second or, as in my case, is it going to take 20 minutes? Time for a blog post ...&lt;br /&gt;&lt;br /&gt;PyCon was great. More subdued than last year, and not only because I spent both flights &lt;a href="http://www.amazon.com/I-Heard-the-Owl-Call-My-Name/dp/0440343690"&gt;contemplating&lt;/a&gt; &lt;a href="http://www.amazon.com/The-Road/dp/0307265439/"&gt;death&lt;/a&gt;. We had a good time on the &lt;a href="http://panela.blog-city.com/testing_tools_panel_pycon.htm"&gt;testing tools panel&lt;/a&gt;, although with 10 guys and 45 minutes we didn't get very far. &lt;a href="http://www.google.com/search?q=zjangogears"&gt;Ian&lt;/a&gt; and &lt;a href="http://zestyping.livejournal.com/221226.html"&gt;Ping&lt;/a&gt; and a guy from &lt;a href="http://www.python.jp/Zope/"&gt;PyJUG&lt;/a&gt; gave some sweet lightening talks. I got to play with an &lt;a href="http://www.laptop.org/laptop/"&gt;OLPC laptop&lt;/a&gt; (apparently the hardware is finalized but the software needs work: the CPU monitor uses about 70% of the CPU!). &lt;a href="http://mail.python.org/pipermail/web-sig/2007-February/002488.html"&gt;Bob and I&lt;/a&gt; had a crew each night, although things never got too crazy, just &lt;a href="http://blog.ianbicking.org/python-packaging.html"&gt;a little crazy&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I organized an impromptu session on web deployment, billed as "the bottom 5% of the web stack." Unfortunately I should have checked my &lt;a href="http://www.zetadev.com/software/aspen/"&gt;ulterior motives&lt;/a&gt; at the door. Then we'd have had more time to talk about the interesting stuff: &lt;a href="http://www.rpath.com/"&gt;Joe Tate&lt;/a&gt; and &lt;a href="http://www.zope.com/"&gt;Jim Fulton&lt;/a&gt; each deploy to some pretty demanding environments, for example. Process monitoring (a la daemontools, monit, zdaemon) turns out to be a significant requirement. And TurboGears and Pylons are merging, for pete's sake! Now &lt;span style="font-style: italic;"&gt;that&lt;/span&gt; is worth talking about. Sorry guys.&lt;br /&gt;&lt;br /&gt;On the other hand, it was great to see Jim &lt;a href="http://radio.weblogs.com/0116506/2005/03/10.html#a301"&gt;in action&lt;/a&gt; building consensus, and then landing the discussion with &lt;a href="http://www.aminus.org/blogs/index.php/fumanchu/2007/02/25/pycon_2007_and_cherrypy"&gt;specific next steps&lt;/a&gt;. Do I care about performance? Not really. Am I excited about Paste Deploy? &lt;a href="http://mail.python.org/pipermail/web-sig/2006-December/002417.html"&gt;Decidedly not&lt;/a&gt;. But it's the disagreements and the compromises and, yes, the &lt;a href="http://dirtsimple.org/2005/10/self-version-20.html"&gt;wackiness&lt;/a&gt; that make it remarkable when we actually do work together.&lt;br /&gt;&lt;br /&gt;I find the tension between &lt;a href="http://www.amazon.com/Fate-Communion-Anglicanism-Future-Global/dp/0802832822"&gt;purity and community&lt;/a&gt; so fascinating, between &lt;a href="http://sethgodin.typepad.com/seths_blog/2006/11/this_must_be_ha.html"&gt;agenda and relationship&lt;/a&gt;, &lt;a href="http://www.unlockthegame.com/TheCallThatChangedEverything/"&gt;selling and listening&lt;/a&gt;. Face time both heightens and resolves this tension, and I love it.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/02/after-pycon-spring-cleaning.html' title='After PyCon, spring cleaning'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=3098781905580117002' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/3098781905580117002/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/3098781905580117002'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3098781905580117002'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-6376658030240152920</id><published>2007-02-13T22:24:00.000-05:00</published><updated>2007-07-10T21:04:17.246-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='aspen'/><category scheme='http://www.blogger.com/atom/ns#' term='django'/><category scheme='http://www.blogger.com/atom/ns#' term='nih'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>OMG Django!</title><content type='html'>When I was in Chicago a while back, I tried explaining &lt;a href="http://www.zetadev.com/software/httpy/0.9a2/man/"&gt;the old httpy&lt;/a&gt; to Ian Bicking. His response: "Why don't you just use WSGI?" He was &lt;a href="http://tech.whit537.org/2006/11/httpy-is-now-wsgi-middleware.html"&gt;right&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Last year at PyCon, I pigeon-holed Guido and forced him to tell me why &lt;a href="http://www.zetadev.com/software/httpy/0.9.0/man/overview.html"&gt;raising all HTTP Responses&lt;/a&gt; was in fact a bad idea. He was *ahem* &lt;a href="http://www.zetadev.com/software/httpy/0.9a2/man/overview.html"&gt;right&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Also at PyCon, I found myself slinging lots of bullsh-t to a table full of smart people. Ben Collins-Sussman listened patiently, and then interjected, "You should really check out Django."&lt;br /&gt;&lt;br /&gt;Folks, you'd think I'd &lt;a href="http://tech.whit537.org/2006/10/my-name-is-chad-and-i-have-nih.html"&gt;learn&lt;/a&gt;. Today it is my pleasure to announce to you all that Django is, in fact, the bee's knees.&lt;br /&gt;&lt;br /&gt;I've grown more comfortable with Django lately in helping some folks get it working with &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen&lt;/a&gt;. Tonight I looked at actually migrating a site to Django. It went extremely well. I was afraid it'd be too hegemonic, but in fact it fits perfectly in &lt;a href="http://www.zetadev.com/software/aspen/0.7/doc/html/introduction.html"&gt;a hybrid scheme&lt;/a&gt;: some files published from the filesystem, some URLs handled by Django. I was able to add just the admin piece, for a single database table that needed an interface. This is huge, because we still manage some content in WordPress! Instead of a risky whole-sale migration, we benefit immediately, and can rescue other parts of the site from PHP at our own pace.&lt;br /&gt;&lt;br /&gt;Thank you Django, and thank you Ben!</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/02/omg-django.html' title='OMG Django!'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=6376658030240152920' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/6376658030240152920/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/6376658030240152920'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/6376658030240152920'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-8592604158145852157</id><published>2007-02-06T13:30:00.000-05:00</published><updated>2007-07-10T21:04:17.249-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='filesystem'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='subversion'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='unix'/><category scheme='http://www.blogger.com/atom/ns#' term='dewey'/><title type='text'>One directory, 500,000 files</title><content type='html'>I have a thing for the filesystem: I really want to use it instead of a relational database. Part of this is wanting to achieve &lt;a href="http://cm.bell-labs.com/cm/cs/who/dmr/cacm.html"&gt;UNIX zen&lt;/a&gt;, wanting all my data in the same space, not in some cyber-cyberspace like &lt;code&gt;mysql&gt;&lt;/code&gt; or &lt;code&gt;whit537=#&lt;/code&gt;. Part of it is wanting to install and admin less software. Part of it is wanting to avoid regexp dispatch hacks: URLs are hierarchical unique ids, the filesystem is hierarchical, what's the problem?&lt;br /&gt;&lt;br /&gt;One problem is that the filesystem isn't ACID. Answer: Subversion. Another is that it can't be queried. &lt;a href="http://tech.whit537.org/2007/01/dewey-think-google-desktop-for-python.html"&gt;Working on it&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;The question nagging me now is scalability. I know you're &lt;a href="http://gettingreal.37signals.com/ch04_Scale_Later.php"&gt;not supposed to think about that&lt;/a&gt; until it happens, but you're also not supposed to use the filesystem for "real" data storage in the first place. So out of curiosity as much as fear: let's say you use the filesystem for storage, and that as part of your app you have a &lt;code&gt;users/&lt;/code&gt; directory, which contains one file per user. Now let's say you balloon to 500,000 users. How screwed are you?&lt;br /&gt;&lt;br /&gt;To find out, I'll start by creating a directory with 500,000 empty files in it. Here we go ...&lt;br /&gt;&lt;pre&gt;$ mkdir files&lt;br /&gt;$ cat - &gt; test.py&lt;br /&gt;for i in range(500000):&lt;br /&gt;  open('files/%d' % i, 'w')&lt;br /&gt;$ python test.py&lt;br /&gt;&lt;/pre&gt;This has been running for 15+ CPU minutes so far. I have about 20 million inodes available on my system, so that won't be the problem. It will get more interesting when I try to load these into Subversion, and then again when I try to query them—&lt;code&gt;ls(1)&lt;/code&gt; just isn't going to cut it.&lt;br /&gt;&lt;br /&gt;Stay tuned ...&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Update:&lt;/b&gt; &lt;a href="http://tech.whit537.org/2007/02/one-repo-27923-nodes.html"&gt;One repo, 27,923 nodes&lt;/a&gt;</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/02/one-directory-500000-files.html' title='One directory, 500,000 files'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=8592604158145852157' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/8592604158145852157/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/8592604158145852157'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/8592604158145852157'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5842893160951205381</id><published>2007-02-05T11:28:00.000-05:00</published><updated>2007-07-10T21:04:17.250-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='aspen'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='ironpython'/><title type='text'>Aspen on IronPython: notYET</title><content type='html'>Having &lt;a href="http://tech.whit537.org/2007/01/should-i-support-ironpython-will-it.html"&gt;stuck my neck out&lt;/a&gt;, I figured I'd give &lt;a href="http://www.codeplex.com/IronPython"&gt;IronPython&lt;/a&gt; a whirl. It wasn't any harder to set up than CPython on Windows. I downloaded the ZIP, and unpacked it to &lt;code&gt;C:\IronPython-1.0.1&lt;/code&gt;, which I then added to PATH. Apparently I already have .NET 2.0 installed, because I now have &lt;code&gt;ipy&lt;/code&gt; at the command-line!&lt;br /&gt;&lt;br /&gt;The next issue is libraries: IronPython doesn't seem to obey &lt;code&gt;PYTHONPATH&lt;/code&gt; (no?). Manually placing &lt;code&gt;C:\Python24\Lib&lt;/code&gt; in &lt;code&gt;sys.path&lt;/code&gt;, I can now import &lt;code&gt;os&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, etc.&lt;br /&gt;&lt;br /&gt;The reason I tried importing &lt;code&gt;email&lt;/code&gt; is because it's written by Barry Warsaw, and he uses ASCII form feeds (&lt;code&gt;^L&lt;/code&gt;) in his code. I &lt;a href="http://aspen.googlecode.com/svn/trunk/src/aspen/__init__.py"&gt;do too&lt;/a&gt;, but IronPython &lt;a href="http://www.codeplex.com/IronPython/WorkItem/View.aspx?WorkItemId=7982"&gt;doesn't like them&lt;/a&gt; unless they're followed by a line break. Boo.&lt;br /&gt;&lt;br /&gt;So to answer &lt;a href="http://tech.whit537.org/2007/01/should-i-support-ironpython-will-it.html"&gt;my question&lt;/a&gt;: setting up an IronPython development environment doesn't hurt, assuming you're already testing CPython on Windows. But there is still an indeterminate portability tax. For now I'll take &lt;a href="http://tech.whit537.org/2007/01/should-i-support-ironpython-will-it.html#c1280296146494369300"&gt;Fuzzyman's advice&lt;/a&gt;: "Perhaps you should wait until you have some users who need this."&lt;br /&gt;&lt;br /&gt;In other news, did you know Microsoft has an &lt;a href="http://www.codeplex.com/"&gt;Open Source code hosting site&lt;/a&gt;? Take Microsoft's dull sense of craftsmanship, and sprinkle it liberally with Web 2.0 dust (tag clouds, gradients, voting, RSS). Stir once. I wonder if they did a &lt;a href="http://www.baselinemag.com/article2/0,1540,2082921,00.asp"&gt;SQL Server&lt;/a&gt; &lt;a href="http://blog.red-bean.com/sussman/?p=39"&gt;backend for svn&lt;/a&gt;? Ok, I'm being mean, sorry. :^)</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/02/aspen-on-ironpython-notyet.html' title='Aspen on IronPython: notYET'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=5842893160951205381' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/5842893160951205381/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/5842893160951205381'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5842893160951205381'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-815735567227053708</id><published>2007-01-28T22:19:00.000-05:00</published><updated>2007-07-10T21:04:17.251-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='todoist'/><category scheme='http://www.blogger.com/atom/ns#' term='nih'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='humanized'/><title type='text'>Another launch: Todoist</title><content type='html'>Boy, does &lt;a href="http://amix.dk/"&gt;Amir Salihefendic&lt;/a&gt; ever have &lt;a href="http://tech.whit537.org/2006/10/my-name-is-chad-and-i-have-nih.html"&gt;NIH&lt;/a&gt;! Wheels he's reinvented:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://orangoo.com/labs/AJS/"&gt;JavaScript library&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://orangoo.com/labs/GreyBox/"&gt;modal dialog&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://orangoo.com/labs/AmiNation/AmiDB/"&gt;db abstraction layer&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://orangoo.com/labs/AmiNation/AmiFormat/"&gt;text/plain formatter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://orangoo.com/labs/AmiNation/"&gt;web framework&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://orangoo.com/skeletonz/"&gt;content management system&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; And now we can add:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://todoist.com/"&gt;to-do list&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; Like the &lt;a href="http://tech.whit537.org/2007/01/humanized-launches-enso.html"&gt;Humanized&lt;/a&gt; crew, Amir strikes me as young and brilliant. He's certainly prolific! But while his work looks good, I get the sense that he's a lone ranger, and how good can one man's code be? He releases (yay!) under the GPL (meh), but where's the Subversion repo? the issue tracker? the tarballs? Bug reports don't belong &lt;a href="http://amix.dk/blog/viewEntry/19066#comments"&gt;in blog comments&lt;/a&gt;. Sign up with &lt;a href="http://code.google.com/hosting/createProject"&gt;Google Code&lt;/a&gt; already! Or are we going to get AmiForge soon?&lt;br /&gt;&lt;br /&gt;Jealous snipes aside, &lt;a href="http://todoist.com/"&gt;Todoist&lt;/a&gt; looks really slick. I signed up for an account, and I hope to try it out this week. Perhaps I'll finally replace &lt;a href="http://www.ataglance.com/webapp/wcs/stores/servlet/product3_10052_10002_129761_-1_false_10052"&gt;my current scheduling app&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;And most importantly, Todoist has another resonance with &lt;a href="http://www.humanized.com/weblog/2007/01/24/enso_released_in_memory_of_jef_raskin/"&gt;the Humanized story&lt;/a&gt;: Amir, I'm sorry about &lt;a href="http://amix.dk/blog/viewEntry/19064"&gt;your dad&lt;/a&gt;.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/01/another-launch-todoist.html' title='Another launch: Todoist'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=815735567227053708' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/815735567227053708/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/815735567227053708'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/815735567227053708'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5222822523275259516</id><published>2007-01-25T08:36:00.000-05:00</published><updated>2007-07-10T21:04:17.252-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='enso'/><category scheme='http://www.blogger.com/atom/ns#' term='humanized'/><title type='text'>Humanized launches Enso</title><content type='html'>When I &lt;a href="http://mail.python.org/pipermail/chicago/2006-April/000658.html"&gt;spoke at ChiPy&lt;/a&gt; last spring, I shared the spotlight with Atul Varna. Yesterday Atul's company, &lt;a href="http://www.humanized.com/"&gt;Humanized&lt;/a&gt;, launched their product suite, &lt;a href="http://www.humanized.com/products/"&gt;Enso&lt;/a&gt;. These guys are unique for a few reasons. First, they are a software company, but their product isn't web-based. Second, they are &lt;a href="http://www.humanized.com/about/"&gt;young and brilliant&lt;/a&gt;, but aren't backed by &lt;a href="http://www.ycombinator.com/"&gt;Paul Graham&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;More importantly, though, Enso is the fruit of work started by legendary interface designer &lt;a href="http://jef.raskincenter.org/home/index.html"&gt;Jef Raskin&lt;/a&gt;. Jef invented the Macintosh, and until his &lt;a href="http://www.raskincenter.org/pressrelease.html"&gt;untimely passing&lt;/a&gt; was working on a project called &lt;a href="http://rchi.raskincenter.org/index.php?title=Archy_FAQ"&gt;Archy&lt;/a&gt;, based on his book &lt;a href="http://www.amazon.com/dp/0201379376/"&gt;&lt;span style="font-style: italic;"&gt;The Humane Interface&lt;/span&gt;&lt;/a&gt;. Jef's son Aza carries on his father's legacy at Humanized, and I imagine &lt;a href="http://www.humanized.com/weblog/2007/01/24/enso_released_in_memory_of_jef_raskin/"&gt;this launch&lt;/a&gt; carries no small amount of pride and emotion for Aza in particular. Congratulations of the first order to Aza, Atul &amp; Co.!&lt;br /&gt;&lt;br /&gt;I've actually been part of Enso's beta program, and I can tell you that it's become a regular part of my workflow. I use &lt;a href="http://www.humanized.com/products/enso/launcher/"&gt;Enso Launcher&lt;/a&gt;'s &lt;span style="font-style: italic;"&gt;open &lt;/span&gt;command all the time (although I don't use &lt;span style="font-style: italic;"&gt;go&lt;/span&gt; as much, preferring an &lt;a href="http://www.apple.com/macosx/features/expose/"&gt;Exposé&lt;/a&gt; &lt;a href="http://www.anthasoft.com/usa/products/bounce/index.html"&gt;knock-off&lt;/a&gt;). And now that &lt;a href="http://www.humanized.com/products/enso/words/"&gt;spellcheck&lt;/a&gt; works with dual monitors again, I'm starting to appreciate it too. The product is indeed humane, the implementation is rock solid, the packaging is slick, and I expect that this is just the beginning.&lt;br /&gt;&lt;br /&gt;And oh yeah, it's &lt;a href="http://mail.python.org/pipermail/chicago/2006-March/000593.html"&gt;written&lt;/a&gt; &lt;a href="http://www.evilbrainjono.net/cgi-bin/blog/showblog.cgi?permalink=291"&gt;in&lt;/a&gt; &lt;a href="http://www.humanized.com/ProcessManager/"&gt;Python&lt;/a&gt;.</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/01/humanized-launches-enso.html' title='Humanized launches Enso'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=5222822523275259516' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/5222822523275259516/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/5222822523275259516'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5222822523275259516'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-1129192390607155308</id><published>2007-01-23T13:42:00.000-05:00</published><updated>2007-07-10T21:04:17.254-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='wsgi'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Easy WSGI request comprehension</title><content type='html'>Here's &lt;a href="http://tech2.whit537.org/2007/parse_environ.py"&gt;a little recipe&lt;/a&gt; for parsing user input out of a WSGI &lt;code&gt;environ&lt;/code&gt;, taking advantage of WSGI's CGI inheritance. Does it have to be any harder?</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/01/easy-wsgi-request-comprehension.html' title='Easy WSGI request comprehension'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=1129192390607155308' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/1129192390607155308/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/1129192390607155308'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/1129192390607155308'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-9013091429597625251</id><published>2007-01-22T17:12:00.000-05:00</published><updated>2007-07-10T21:04:17.255-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='aspen'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Aspen is a "simple," "reloading" "wsgictl"</title><content type='html'>I just had a conversation on &lt;a href="irc://irc.freenode.net/#plone"&gt;#plone&lt;/a&gt;, in which I ended up explaining &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen&lt;/a&gt; as a sort of &lt;code&gt;wsgictl&lt;/code&gt;: &lt;a href="http://tech.whit537.org/2007/01/first-public-aspen-site.html"&gt;like &lt;code&gt;apachectl&lt;/code&gt; or &lt;code&gt;zopectl&lt;/code&gt;&lt;/a&gt;, but for WSGI-centric websites. Maybe that helps.&lt;br /&gt;&lt;br /&gt;I also had someone on the mailing list make &lt;a href="http://groups.google.com/group/aspen-users/browse_frm/thread/7fe191b15dda46e0"&gt;these comments&lt;/a&gt;:&lt;br /&gt;&lt;blockquote&gt;I'm definitely going to use Aspen, at least for development, since it reloads! That's HUGE to me, you should sell it more!&lt;br /&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;/blockquote&gt;The same user also had &lt;a href="http://groups.google.com/group/aspen-users/browse_frm/thread/448a878fb7756cb2"&gt;this to say&lt;/a&gt;:&lt;br /&gt;&lt;blockquote&gt;Thanks for such an awesome webserver! simple, clean, pure, no dependencies, very nice and clean!&lt;br /&gt;&lt;/blockquote&gt;Tee-hee. :^)</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/01/aspen-is.html' title='Aspen is a &amp;quot;simple,&amp;quot; &amp;quot;reloading&amp;quot; &amp;quot;wsgictl&amp;quot;'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=9013091429597625251' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/9013091429597625251/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/9013091429597625251'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/9013091429597625251'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-916097834635291362</id><published>2007-01-22T09:53:00.000-05:00</published><updated>2007-07-10T21:04:17.256-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='aspen'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Aspen subversion log as a feed</title><content type='html'>Here is &lt;a href="http://subtlety.errtheblog.com/O_o/33.xml"&gt;the Aspen commit log as an RSS 2.0 feed&lt;/a&gt;, thanks to &lt;a href="http://subtlety.errtheblog.com/"&gt;subtlety.errtheblog.com&lt;/a&gt; (for which, thanks to &lt;a href="http://simonwillison.net/2007/Jan/22/subtlety/"&gt;Simon&lt;/a&gt;).</content><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/01/aspen-subversion-log-as-feed.html' title='Aspen subversion log as a feed'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=916097834635291362' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/916097834635291362/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default/916097834635291362'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/916097834635291362'/><author><name>whit537</name><email>noreply@blogger.com</email></author></entry></feed>