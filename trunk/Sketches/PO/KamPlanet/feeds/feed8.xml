<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/'><id>tag:blogger.com,1999:blog-37846517</id><updated>2008-02-05T20:16:12.605+11:00</updated><title type='text'>The Coding Weasel</title><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/'/><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default'/><author><name>anthony</name><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>11</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-37846517.post-3337027016184749224</id><published>2007-03-06T13:58:00.000+11:00</published><updated>2007-03-06T14:23:11.604+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gstreamer'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='pygtk'/><category scheme='http://www.blogger.com/atom/ns#' term='theatre'/><title type='text'>a theatrical open-source story, part one.</title><content type='html'>In what I laughingly refer to as "my spare time" I do lighting and sound for an amateur theatre company. The current play (plug: &lt;a href="http://www.stagtheatre.org"&gt;come see it&lt;/a&gt; - it's really, really good) has some fairly major tech behind it - particularly for a small amateur theatre (i.e. a miniscule budget). &lt;br /&gt;&lt;br /&gt;The requirements include: &lt;ul&gt;&lt;li&gt;dual projectors behind stage, showing around 150 slides during the course of the show&lt;br /&gt;&lt;li&gt;a camera on stage at various points, going to the projectors. These then get news overlays on screen to make it look like a live news conference. The projectors are behind the screens, so the video needs to be flipped left-to-right. &lt;br /&gt;&lt;li&gt;a couple of dozen pieces of music to be played at various points - this needs to fade in and out cleanly. &lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;I'm also operating the lighting desk while I do this, so whatever I do has to be incredibly easy to operate. Requiring me to use the mouse is just right out.&lt;br /&gt;&lt;br /&gt;Oh, and of course I shouldn't forget that I really only had one or two evenings to put something together. The choice of hardware was pretty easy - clearly I'm going to need a couple of PCs - one backstage with the camera and the projectors, connected by wireless to a laptop in the lighting box running the whole show (and outputting audio to the sound system when needed). I grabbed a cheapo wireless card and a Radeon 9550 (with a DVI-to-VGA convertor, I get the two VGA outs that I need) for a spare desktop I had lying around and dropped a fresh install of Ubuntu Edgy on it.&lt;br /&gt;&lt;br /&gt;Software - well, clearly this calls for some one-off custom software. Again, my choices were pretty easy. Python (duh), pygtk for the UI, gstreamer for the audio and video, and twisted to tie things together. Things like callLater and deferreds just make stuff too damn easy. &lt;br /&gt;&lt;br /&gt;So how did I do? Well, here's a quick sampler (click the image for a larger version). I'll talk about it in more detail in a subsequent post. This was the result of a single Sunday evening's intense hacking, followed by a few hours over a couple of nights tweaking things after using it. All up, it's under 600 lines of code, plus a few tiny shell scripts.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.interlink.com.au/anthony/tech/theatre/laramie_sshot.png"&gt;&lt;img src="http://www.interlink.com.au/anthony/tech/theatre/laramie_sshot_small.png" border="0"&gt;&lt;/a&gt;</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2007/03/theatrical-open-source-story-part-one.html' title='a theatrical open-source story, part one.'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=3337027016184749224' title='4 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/3337027016184749224/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/3337027016184749224'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/3337027016184749224'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-7985289457513326263</id><published>2007-01-23T16:37:00.000+11:00</published><updated>2007-01-23T17:24:49.585+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='journalism'/><category scheme='http://www.blogger.com/atom/ns#' term='olpc'/><title type='text'>Journalamentism at it's finest.</title><content type='html'>Well, by "journalism" I mean "reprinting a press release". Normally this sort of thing would be over at my other place, but since it's open source related, I figure it can go here.&lt;br /&gt;&lt;br /&gt;I'm referring to &lt;a href="http://www.itwire.com.au/index.php?option=com_content&amp;task=view&amp;id=8721&amp;Itemid=1054"&gt;this piece on the site itwire.com.au&lt;/a&gt;, which is a straight rewrite of &lt;a href="http://www.fairinternational.org/fi-artikkel_229.nml"&gt;a press release&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;The piece in question is an attack on the &lt;a href="http://www.laptop.org"&gt;OLPC project&lt;/a&gt; by a rival not-for-profit which instead works on refurbishing computers.&lt;br /&gt;&lt;br /&gt;On the plus side, the writer of the piece did point out that FAIR mis-spoke, (or perhaps flat-out lied) in calling OLPC a "normal commercial organisation". On the minus side, there was no attempt to investigate whether the claims made were true - I'm sorry, but when it's an extreme hatchet job, "An email has been sent to the press office of OLPC inviting the organization to respond to FAIR's comments" is hardly sufficient. Note the wording - not "they didn't reply", but "we sent an email and published anyway without getting a response first". Very very poor.&lt;br /&gt;&lt;br /&gt;Particularly when, as in this case, a number of the claims made are easily refuted using the &lt;a href="http://www.laptop.org/faq.en_US.html"&gt;FAQ available&lt;/a&gt; from the front page of the OLPC website. (It's the big link on the left hand side labelled "FAQ")&lt;br /&gt;&lt;br /&gt;FAIR's claim that refurbished PCs are a better option is dealt with - OLPC points out that one hour of work per PC, times 100 million refurbished machines is 45,000 work years. &lt;br /&gt;&lt;br /&gt;FAIR's claim that a single lab full of P4 computers would cost a tenth of the amount of the cost of the OLPC basis and provide the same outcomes is clearly laughable. Lets do a little math here. Assume the 500 laptops for a school - FAIR claims a tenth of US$100,000 is needed. OK. That's $10,000. Assume a lab of 16 P4 machines for $600 each, including software. That works out to around 1 hour of computer time per week per student. That's really what they think is equivalent to a machine that can be taken home?&lt;br /&gt;&lt;br /&gt;More from FAIR: "For example, OLPC does not even offer a simple spreadsheet. Theoretically it might be possible for OLPC to be made satisfactorily compatible with PC (WIN/LIN/MAC), but it would take many years of software development to achieve this."&lt;br /&gt;&lt;br /&gt;I have no idea if the current builds of OLPC software include a spreadsheet - but there's plenty of small Linux ones available, and I'm sure it could be added easily enough. Their focussing on this makes me suspect their own solution is to foist Windows + Office onto the 3rd world. Teaching kids office automation for an hour a week is hardly a useful set of skills - especially when compared to using a machine that they can carry around with them, and has software on it that's been designed for teaching. And if the OLPC project was starting from scratch, and trying to replicate Windows, sure, it would take years. Of course, they're doing nothing of the sort.&lt;br /&gt;&lt;br /&gt;"With its limited 512 Mb memory it is equally likely that OLPC could never be able to become a satisfactory work station" - bollocks. Utter bollocks. Sure, you probably can't even load the Windows Vista installer in that space, but claiming that you need gigabytes of space to be useful is utterly insane and ludicrous. &lt;br /&gt;&lt;br /&gt;Gah - I give up responding to the FAIR piece in depth. Suffice to say, it's full of easily refuted nonsense, and even a tiny amount of research would have shown that. &lt;br /&gt;&lt;br /&gt;&lt;hr&gt;&lt;br /&gt;&lt;br /&gt;Last week at LCA there were a number of folks from OLPC in the country, including Jim Gettys and Chris Blizzard. Collabra folks got &lt;a href="http://www.robot101.net/2006/12/12/telepathy-and-olpc/"&gt;voice conferencing working on the OLPC&lt;/a&gt;. Mention was made of the 1.3km wireless range some Australians working with the OLPC managed to get. Some of the OLPC prototypes were brought along and demonstrated at the Open Day. All very neat stuff.&lt;br /&gt;&lt;br /&gt;Meanwhile, itwire rewrites a misleading and incorrect press release from another non-profit working as a rival to the OLPC project. And itwire's &lt;br /&gt;"Open Source" writer Sam Varghese was focused like a laser on the stories that really matter:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;br /&gt;&lt;li&gt;the ground-breaking story that &lt;a href="http://www.itwire.com.au/content/view/8716/"&gt;Novell was a minor sponsor of LCA, and Bruce Perens doesn't like this&lt;/a&gt;. Gosh. Well, &lt;a href="http://www.codon.org.uk/~mjg59/bruce/"&gt;Bruce Perens&lt;/a&gt; opinion &lt;i&gt;clearly&lt;/i&gt; outweighs GNOME, Mono and all the other work Novell does for Linux. How very silly of LCA organisers to not run all their arrangements through Perens first! I can't imagine why, with a title like "30 Pieces of Silver", this piece might be considered a trite and insulting beatup.&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Builder AU had an interview with Linus Torvalds, and &lt;a href="http://www.itwire.com.au/content/view/8687/"&gt;the video put on the Builder AU website required a version of the flash plugin that's only been available for a short time for Linux&lt;/a&gt;. Note - he wasn't writing about the conference videos on the LCA site itself, which are in an open source, unencumbered format - but that the magazine Builder AU interviewed someone at LCA and put up a flash video player thingy. And he quotes someone who posted a comment on slashdot - how much more credible can you get? I think you'll agree that this is a major, major scandal, and obviously LCA should be held entirely responsible. No - wait. The other term I used: a trite and insulting beatup.&lt;br /&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;&lt;hr&gt;&lt;br /&gt;&lt;br /&gt;I could go on further - the itwire open source articles are just full of this sort of crap. But, frankly, I don't see any point. &lt;br /&gt;&lt;br /&gt;Kids - don't just rewrite press releases. It's not big, it's not clever, and it's not funny. And don't bother with itwire - at least, not for news about open source.&lt;br /&gt;&lt;br /&gt;ObDisclaimer: I find the OLPC project to be extremely neat, and plan on helping them where-ever I can. I also really, really don't like bad journalism. And quite clearly, I'm speaking for myself, and not for any projects or organisations I'm involved with.&lt;br /&gt;&lt;br /&gt;More tech stuff soon. Sorry for the interruption/rant.</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2007/01/journalamentism-at-its-finest.html' title='Journalamentism at it&apos;s finest.'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=7985289457513326263' title='3 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/7985289457513326263/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/7985289457513326263'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/7985289457513326263'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-7558910380631084546</id><published>2007-01-11T14:49:00.000+11:00</published><updated>2007-01-11T14:58:52.423+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='veniceproject'/><title type='text'>the venice project</title><content type='html'>Courtesy of Daniel, I got a betatest account for &lt;a href="http://www.theveniceproject.com/"&gt;The Venice Project&lt;/a&gt;, the latest project from the folks who gave us Kazaa and then Skype. This is their attempt to do to TV what Skype does to phone calls.&lt;br /&gt;&lt;br /&gt;So what is it? It's a peer-to-peer system for distributing full quality on demand streaming television over the internet.&lt;br /&gt;&lt;br /&gt;The UI is a little awkward at first (it's an overlay over the video) but once you get used to it, it's nice and clean.&lt;br /&gt;&lt;br /&gt;The content is organised into channels. At the moment, they're obviously still putting together content deals, so it's not an awesome range. I can see problems in the future with the "one big list of channels" approach once they get enough content into the system. There's a 'Search' option that still needs a fair bit of help.&lt;br /&gt;&lt;br /&gt;The video quality is remarkable. I've noticed a few times where the audio/video starts stalling and glitching, but given I'm watching fullscreen TV quality, that's still not too bad at all.  Whacking pause/play seems to make it better.&lt;br /&gt;&lt;br /&gt;There's a few things I've noticed that are Not Quite Right - the most annoying is that it seems to disable the external video port on my laptop while it's running. I'd much, much rather watch the video on the external LCD than the laptop's own display. I've logged a bug against this, hopefully it's something they'll fix.&lt;br /&gt;&lt;br /&gt;One huge caveat is the bandwidth requirements. The website quotes 220-320 megabytes per hour downstream, and 100 or so upstream. That pretty much means you need at least a 1Mbit connection (I have a 1.5Mbit connection). People on a 256k DSL link are probably going to have a non-useful experience. If you're on a bandwidth capped link, I could see this chewing through your cap in very short order. For people in Australia who are unfortunate enough to get excess billing charges, this could be very very scary. The application minimises itself to the system tray when you close it rather than quitting, so unless you want to cause yourself enormous pain, make sure you close it properly, or uncheck the "use standby mode" checkbox in the preferences screen.&lt;br /&gt;&lt;br /&gt;As far as content - there's a pile of music-related things, documentaries, and various other bits and pieces. I'd fully expect this to grow rapidly.&lt;br /&gt;(Aside: one of the channels is Fifth Gear. I'd heard of this as a knock-off of the BBC's Top Gear, but never watched it before. Wow. It's like Top Gear with the humour and sense of fun sliced out.)&lt;br /&gt;&lt;br /&gt;Important Note: I do not have any spare beta invites to give away. Please don't bother asking me for them in comments.&lt;br /&gt;(I only mention this because every other blog post I've seen on TVP gets countless numbers of people saying "pls send me invite kthxbye")</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2007/01/venice-project.html' title='the venice project'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=7558910380631084546' title='3 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/7558910380631084546/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/7558910380631084546'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/7558910380631084546'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-8250825723230627480</id><published>2007-01-02T17:20:00.000+11:00</published><updated>2007-01-02T17:29:18.576+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='software'/><category scheme='http://www.blogger.com/atom/ns#' term='talks'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Bruce 1.2</title><content type='html'>&lt;a href="http://cheeseshop.python.org/pypi/bruce"&gt;Bruce 1.2 is out&lt;/a&gt;. This is the version resulting from the work Richard and I both did while preparing our talks for &lt;a href="http://www.osdc.com.au/"&gt;OSDC&lt;/a&gt; a month ago, and means you can run the presentations I linked to earlier, without needing to grab the SVN version of the code. &lt;br /&gt;&lt;br /&gt;It works on MacOS X, Unix, and Windows - but note that some bits, such as SpawnPage and ShellInterpreterPage won't work currently on Windows. If someone wants to contribute patches to make these work (it shouldn't be hard - I just don't have a need or motivation to do it right now) they'll be gratefully accepted.&lt;br /&gt;&lt;br /&gt;I've begun the work on what will become Bruce 2.0 - this will be a merge of the IronKant code, allowing Bruce to run on IronPython with SdlDotNet, and should hopefully also include a &lt;a href="http://www.pyglet.org/"&gt;pyglet&lt;/a&gt; backend. Pyglet should allow for a whole host of shiny new possibilities. &lt;br /&gt;&lt;br /&gt;Next up is a talk at LCA 2007's Speaker's Dinner in 2 weeks.</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2007/01/bruce-12.html' title='Bruce 1.2'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=8250825723230627480' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/8250825723230627480/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/8250825723230627480'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/8250825723230627480'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-7105945141819354690</id><published>2006-12-13T21:14:00.000+11:00</published><updated>2006-12-13T22:06:43.210+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gstreamer'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>gstreamer and messages, pt 1</title><content type='html'>&lt;p&gt;If you take a simple GStreamer pipeline (for instance, something based on the first piece of code in &lt;a href="http://www.jonobacon.org/?p=750"&gt;this post&lt;/a&gt;) and run it, one of the first things you'll notice is that it doesn't exit when the file finishes playing. To do this, you'll want to use &lt;b&gt;messages&lt;/b&gt;. Here's a simple example showing this. This example sets up a filesrc, connects it to a 'mad' element (which decodes MP3s) and then dumps out to ALSA via an alsasink.&lt;/p&gt;&lt;br /&gt;&lt;pre class="code"&gt;import pygst&lt;br /&gt;pygst.require("0.10")&lt;br /&gt;import gst&lt;br /&gt;import gobject&lt;br /&gt;&lt;br /&gt;class Playback:&lt;br /&gt;    def __init__(self, filename):&lt;br /&gt;        self.pipeline = gst.Pipeline('player')&lt;br /&gt;&lt;br /&gt;        # Get the message bus from the pipeline&lt;br /&gt;        self.bus = self.pipeline.get_bus()&lt;br /&gt;        # register a watch function - self.message&lt;br /&gt;        self.bus.add_watch(self.message)&lt;br /&gt;&lt;br /&gt;        # create a filesrc-&gt;mad-&gt;alsasink pipeline&lt;br /&gt;        filesrc = gst.element_factory_make("filesrc", "input")&lt;br /&gt;        filesrc.set_property('location', filename)&lt;br /&gt;        converter = gst.element_factory_make("mad", "converter")&lt;br /&gt;        output = gst.element_factory_make("alsasink", "output")&lt;br /&gt;        output.set_property('device', 'plughw:0')&lt;br /&gt;        # Add them all to the pipeline with one call.&lt;br /&gt;        self.pipeline.add(filesrc, converter, output)&lt;br /&gt;        # Link them all together in one call.&lt;br /&gt;        gst.element_link_many(filesrc, converter, output)&lt;br /&gt;        self.pipeline.set_state(gst.STATE_PLAYING)&lt;br /&gt;&lt;br /&gt;    def message(self, bus, message):&lt;br /&gt;        # Check for an 'End Of Stream' message&lt;br /&gt;        if message.type == gst.MESSAGE_EOS:&lt;br /&gt;            print "Got EOS, quitting mainloop"&lt;br /&gt;            self.quit()&lt;br /&gt;        # We want to continue receiving messages, so return True&lt;br /&gt;        # If you return False, this function is removed from the list&lt;br /&gt;        # of functions that receive bus messages.&lt;br /&gt;        return True&lt;br /&gt;&lt;br /&gt;    def run(self):&lt;br /&gt;        self.mainloop = gobject.MainLoop()&lt;br /&gt;        self.mainloop.run()&lt;br /&gt;    def quit(self, *args):&lt;br /&gt;        self.mainloop.quit()&lt;br /&gt;&lt;br /&gt;if __name__ == "__main__":&lt;br /&gt;    import sys&lt;br /&gt;    player=Playback(sys.argv[1])&lt;br /&gt;    player.run()&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;p&gt;Let's look at this in more detail. After we create the pipeline, we get the message bus associated with it.&lt;/p&gt;&lt;pre class="code"&gt;    # Get the message bus from the pipeline&lt;br /&gt;    self.bus = self.pipeline.get_bus()&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;We then add a 'watch' function to the pipeline. This function will receive all messages on the bus. You can't add more than one watch function to a pipeline (yet).&lt;br /&gt;&lt;/p&gt;&lt;pre class="code"&gt;    # register a watch function - self.message&lt;br /&gt;    self.bus.add_watch(self.message)&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;The watch function itself is pretty simple - it takes the bus and the message as arguments, and returns True or False. The return value indicates whether we want to keep receiving messages. If you return False, this watch function is removed from the bus.&lt;/p&gt;&lt;pre class="code"&gt;def message(self, bus, message):&lt;br /&gt;    # Check for an 'End Of Stream' message&lt;br /&gt;    if message.type == gst.MESSAGE_EOS:&lt;br /&gt;        print "Got EOS, quitting mainloop"&lt;br /&gt;        self.mainloop.quit()&lt;br /&gt;    # We want to continue receiving messages, so return True&lt;br /&gt;    # If you return False, this function is removed from the list&lt;br /&gt;    # of functions that receive bus messages.&lt;br /&gt;    return True&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;We compare the &lt;code&gt;message.type&lt;/code&gt; with the singleton &lt;code&gt;gst.MESSAGE_EOS&lt;/code&gt;. If it's true, we stop the mainloop and exit.&lt;/p&gt;&lt;p&gt;There's many other messages you can receive, not just end-of-stream. If we put a &lt;code&gt;"print message.type"&lt;/code&gt; statement before the message.type check in the &lt;code&gt;message()&lt;/code&gt; method, you'll see something like this:&lt;/p&gt;&lt;pre class="code"&gt;&lt;br /&gt;flags GST_MESSAGE_CLOCK_PROVIDE of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_TAG of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_NEW_CLOCK of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_STATE_CHANGED of type GstMessageType&lt;br /&gt;flags GST_MESSAGE_EOS of type GstMessageType&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;p&gt;If you look a bit closer, you'll see there's a couple of sets of messages. First off, there's 4 STATE_CHANGED messages - one from each element, and from the pipeline itself. These are going from a state of VOID to PAUSED, as the pipeline starts up. There's another set of 4 going from PAUSED to PLAYING, and a final set of 4 going from PLAYING to VOID when the pipeline finishes. There's also a couple about the pipeline clock (which I'll touch on in a future piece) and a MESSAGE_TAG message. That's from the 'mad' converter, and if we print it, we'll see:&lt;br /&gt;&lt;code&gt;&amp;lt;gst.Message taglist, layer=(guint)3, mode=(string)joint, &lt;br /&gt;emphasis=(string)none, audio-codec=(string)"MPEG-1\ layer\ 3", &lt;br /&gt;bitrate=(guint)128000 from converter at 0x81cae98&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;br /&gt;&lt;p&gt;Note that these messages are from the pipeline as a whole, not from individual elements. If you want to know about when a particular element runs out of data, you use &lt;code&gt;pad.add_event_probe()&lt;/code&gt; and look for &lt;code&gt;EVENT_EOS&lt;/code&gt;. More on that in a future post.&lt;/p&gt;&lt;p&gt;That's enough for one starting post.&lt;/P&gt;&lt;br /&gt;&lt;br /&gt;&lt;p&gt;&lt;i&gt;Please note - I'm still learning about gstreamer as I go. If you see something wrong, or unclear, please let me know in the comments. Also let me know if blogger has messed up the formatting - I think I've got it OK now.&lt;/i&gt;&lt;/p&gt;</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2006/12/gstreamer-and-signals-pt-1.html' title='gstreamer and messages, pt 1'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=7105945141819354690' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/7105945141819354690/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/7105945141819354690'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/7105945141819354690'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-7955356117739619164</id><published>2006-12-13T17:20:00.000+11:00</published><updated>2006-12-13T17:43:38.465+11:00</updated><title type='text'>you're part of the problem, not part of the solution</title><content type='html'>&lt;P&gt;Phillip Eby wrote a &lt;a href="http://dirtsimple.org/2006/12/is-porn-driving-women-away-from.html"&gt;response&lt;/a&gt; to Richard's post &lt;a href="http://www.mechanicalcat.net/richard/log/Python/Why_there_s_few_women_in_IT"&gt;about the OSDC problem&lt;/a&gt; with a softcore porn image being displayed in a lightning talk. He managed to completely miss the point as well as throw in any number of irrelevant sidepoints.&lt;/P&gt;&lt;br /&gt;&lt;P&gt;I was going to let it slide (as far as I can see, he is just being needlessly contrary and provocative), but ... to hell with it. He doesn't seem to have comments on his blog, so consider this my response.&lt;/P&gt;&lt;br /&gt;&lt;P&gt;The problem is not that "porn" is driving women away from the computer industry.&lt;/P&gt;&lt;br /&gt;&lt;P&gt;The problem is the mindset which says "it's fine to show porn in a talk at a conference". This is appalling.&lt;/P&gt;&lt;br /&gt;&lt;P&gt;If you don't think that putting up a softcore porn image of a woman is going to offend more women than men, you're out of your mind. I missed the slide in question (I was sitting outside finishing my own talk) but I heard enough from people about it afterwards. Plenty of people, both men and women, were offended. Almost every single female in the audience was offended, in some cases, extremely offended. (That PJE's own wife wouldn't have been offended is no excuse. That's nice for her but it doesn't excuse the slide in question). No-one would even contemplate putting up something offensively racist in a talk, or almost any other form of offensive imagery, but this sort of thing isn't that big an issue for some folks.&lt;/P&gt;&lt;br /&gt;&lt;P&gt;PJE also asks in his piece:&lt;/P&gt;&lt;br /&gt;&lt;blockquote&gt;&lt;br /&gt;P.S.  Does anybody know why it's supposed to be so gosh-darn important to have more women in IT?&lt;br /&gt;&lt;/blockquote&gt;&lt;br /&gt;&lt;P&gt;He then compares it to the under-representation of men in the nursing industry.&lt;/P&gt;&lt;br /&gt;&lt;P&gt;Gah. Gah. Gah. I'm almost speechless. &lt;/P&gt;&lt;br /&gt;&lt;P&gt;Last time I looked, the nursing industry didn't provide a hostile work environment that actively discouraged men from joining. Plenty of people in the IT industry do this to women. PJE's minimisation of this issue is a great example. &lt;/P&gt;&lt;br /&gt;&lt;P&gt;As far as "why is it important to have more women in IT"... well, if he's being genuine here (rather than just contrary for the sake of it) I'm stunned. There's a basic issue of equity here. IT provides an ever increasing number of highly paid skilled jobs. Saying "if there's a hostile work environment that discourages women, too bad for them" is a mind-blowing attitude to me. (I'd have also thought that someone who's all about efficiency and that sort of thing would recognise that a more heterogenous team produces better outcomes all around.)&lt;/P&gt;&lt;br /&gt;&lt;P&gt;PJE finishes with this little pearler:&lt;/P&gt;&lt;br /&gt;&lt;blockquote&gt;&lt;br /&gt;Now, some people will think I'm joking about what I just said, but that will serve only as a helpful illustration of their own bias. You see, when a person thinks that trying to protect men in porn is silly, it's because deep down, they think women need more "protection" than men -- thereby demonstrating their own patriarchal sexist patronizing bullshit attitude!&lt;br /&gt;&lt;/blockquote&gt;&lt;br /&gt;&lt;P&gt;This is, to not put too fine a point on it, unmitigated bullshit of the highest order. If I saw that the industry I'm in was discriminating against &lt;i&gt;any&lt;/i&gt; group, I'd be annoyed. The fact is, though, that it's primarily biased against women. I'm not trying to "protect" women because I think they need to be protected by big strong ol' me (hell, half or more of my female friends could easily beat 10 kinds of crap out of me in a serious fight). I'm annoyed because I see an industry full of people for whom putting up a softcore porn image in a talk in front of an audience isn't that big a deal.&lt;/P&gt;&lt;br /&gt;&lt;P&gt;And &lt;i&gt;that&lt;/i&gt; is the issue.&lt;/P&gt;</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2006/12/youre-part-of-problem-not-part-of.html' title='you&apos;re part of the problem, not part of the solution'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=7955356117739619164' title='30 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/7955356117739619164/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/7955356117739619164'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/7955356117739619164'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-2744712750024805112</id><published>2006-12-12T11:45:00.000+11:00</published><updated>2006-12-12T11:55:02.911+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='ironpython'/><category scheme='http://www.blogger.com/atom/ns#' term='mono'/><title type='text'>some more on IronPython</title><content type='html'>Michael Foord has some notes on getting IronKant working with IronPython on Windows &lt;a href="http://www.voidspace.org.uk/python/weblog/arch_d7_2006_12_09.shtml#e577"&gt;here&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;During my talk, I showed a slide that IronPython on .Net runs pybench at 41% of CPython 2.5's speed (71%, if you exclude the TryRaiseExcept case, where it totally loses), while Mono 1.1.17 gets around 14% of of CPython 2.5's speed. I finally got around to trying Mono 1.2.2 (I didn't have time before the talk). It's actually about 12% _slower_ than 1.1.17. This makes me sad. Very sad. I need to get pybench checked into &lt;a href="http://fepy.sf.net"&gt;IPCE&lt;/a&gt; and point the Mono and .Net folks at it.&lt;br /&gt;&lt;br /&gt;It's pretty obvious that both .Net and Mono optimised for pystone - in both cases, IronPython is more than 20% faster than CPython. Unfortunately, pystones is a terrible benchmark. If they can optimise for pybench, most people's applications will see a real improvement.</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2006/12/some-more-on-ironpython.html' title='some more on IronPython'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=2744712750024805112' title='2 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/2744712750024805112/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/2744712750024805112'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/2744712750024805112'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-3235022333962205158</id><published>2006-12-11T00:48:00.000+11:00</published><updated>2006-12-11T01:08:18.558+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='talks'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='ironpython'/><title type='text'>talk #2: futurepython</title><content type='html'>The final talk from the three I did at OSDC is up now. This was the end of day talk on Thursday, "futurepython". I talked about IronPython and Python 3.0. Unlike the other two talks, this one wasn't done using &lt;a href="http://bruce.python-hosting.com/"&gt;Bruce&lt;/a&gt;. Instead, I did an extremely quick port of Bruce to run on top of IronPython and &lt;a href="http://cs-sdl.sourceforge.net/index.php/Main_Page"&gt;SdlDotNet&lt;/a&gt;. In keeping with the philosopher's naming scheme of Bruce, I called it "ironkant".&lt;br /&gt;&lt;br /&gt;The talk is &lt;a href="http://codingweasel.googlecode.com/svn/trunk/talks/2006/futurepython/"&gt;here&lt;/a&gt;, including the ironkant code. I should point out that ironkant almost certainly has bugs - I started it late Wednesday night after the conference dinner and finished it (and the talk) a good 5 minutes before I presented it the next afternoon. What can I say, I just thrive on the stress. Having the presentation running on top of IronPython was a pretty good demonstration of just how far along IronPython has come.&lt;br /&gt;&lt;br /&gt;And sorry Jim for calling you a crazy man - I mean that with love and respect :-)&lt;br /&gt;&lt;br /&gt;I was extremely impressed with how easy it is to grab a C# assembly, read the C# docs and get coding. I also only had to make one fix to a CPython standard library module to get the code to work - in this case, I had to fix codeop.py to not pass the DONT_IMPLY_DEDENT flag to the builtin compile() method. This flag is both undocumented and implemented in codeop.py in a most foul way - I've opened Python bug &lt;a href="https://sourceforge.net/tracker/?func=detail&amp;aid=1612012&amp;amp;group_id=5470&amp;amp;atid=105470"&gt;1612012&lt;/a&gt; about it. The fixed version of codeop.py is now in the SVN version of &lt;a href="http://fepy.sf.net/"&gt;IPCE&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I started porting popen2 as well, that's not finished yet (but will be this week). For the moment, I'm just using os.spawnl() directly inside IronKant for spawning external programs.&lt;br /&gt;&lt;br /&gt;The longer Windows.Forms example in the talk is from Michael Foord's &lt;a href="http://www.voidspace.org.uk/python/weblog/arch_d7_2006_05_20.shtml#e342"&gt;excellent tutorial&lt;/a&gt; on the subject. If you're at all interested in producing native GUIs on both Windows and Unix, you should definitely check the tutorial out. And buy his book about IronPython when it's done!</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2006/12/talk-2-futurepython.html' title='talk #2: futurepython'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=3235022333962205158' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/3235022333962205158/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/3235022333962205158'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/3235022333962205158'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-6760816331965817641</id><published>2006-12-10T23:55:00.000+11:00</published><updated>2006-12-11T00:09:10.190+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gstreamer'/><category scheme='http://www.blogger.com/atom/ns#' term='talks'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>talk #3 - gstreamer and python</title><content type='html'>The third talk from OSDC is up as well, now. This was "GStreamer and Python". The talk itself can be found &lt;a href="http://codingweasel.googlecode.com/svn/trunk/talks/2006/gstpy/"&gt;here&lt;/a&gt;, or via SVN with&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;"svn co http://codingweasel.googlecode.com/svn/trunk/talks/2006/gstpy"&lt;/span&gt;&lt;br /&gt;Once again, it uses the current SVN version of Bruce, which you can get with &lt;span style="font-family: courier new;"&gt;&lt;br /&gt;"svn co http://svn.bruce.python-hosting.com/trunk"&lt;br /&gt;&lt;/span&gt;Unlike the previous talk, it's unlikely you'll be able to run it in it's full glory, because&lt;br /&gt;a) it needs 3 sound cards :-)&lt;br /&gt;b) I haven't checked in the many, many sound files (and single video file) I used for the talk, as they're all copyrighted to the original owners. The text and code should still be useful, though.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The goal is to turn the various examples from this talk into individual blog posts, with explanatory text.  I mentioned during the talk a couple of posts by Jono Bacon that provide a good introduction - they can be found &lt;a href="http://www.jonobacon.org/?p=750"&gt;here&lt;/a&gt; and &lt;a href="http://www.jonobacon.org/?p=810"&gt;here&lt;/a&gt;.</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2006/12/talk-3-gstreamer-and-python.html' title='talk #3 - gstreamer and python'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=6760816331965817641' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/6760816331965817641/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/6760816331965817641'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/6760816331965817641'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-3766338814880746552</id><published>2006-12-06T12:13:00.000+11:00</published><updated>2006-12-11T01:09:59.895+11:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='talks'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>What's New In Python, 2006</title><content type='html'>I've put the first of my OSDC 2006 talks up - What's New In Python 2006 Edition.&lt;br /&gt;&lt;br /&gt;It can be fetched from  &lt;a href="http://codingweasel.googlecode.com/svn/trunk/talks/2006/whatsnew/"&gt;http://codingweasel.googlecode.com/svn/trunk/talks/2006/whatsnew/&lt;/a&gt;&lt;br /&gt;(or svn co thaturl)&lt;br /&gt;&lt;br /&gt;This talk uses the &lt;a href="http://bruce.python-hosting.com/"&gt;Bruce&lt;/a&gt; presentation software, in particular the new 'socrates.py' script that takes a simple text file describing the presentation. At the moment, you'll need the current SVN version of Bruce. There will be a new release of that soon.&lt;br /&gt;&lt;br /&gt;Alternately, you can just read the 'whatsnew.soc' file - it's a simple text file.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;"&gt;Update&lt;/span&gt;: You can get Bruce's current SVN with&lt;br /&gt;&lt;span style="font-family: courier new;"&gt;"svn co http://svn.bruce.python-hosting.com/trunk"&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2006/12/whats-new-in-python-2006.html' title='What&apos;s New In Python, 2006'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=3766338814880746552' title='3 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/3766338814880746552/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/3766338814880746552'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/3766338814880746552'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-37846517.post-116498231659662889</id><published>2006-12-02T01:10:00.000+11:00</published><updated>2006-12-02T01:11:56.603+11:00</updated><title type='text'>welcome</title><content type='html'>I'm planning on using this blog to post code samples and general programming notes. I'm not going to be starting until after &lt;a href="http://www.osdc.com.au/"&gt;OSDC&lt;/a&gt;, next week.</content><link rel='alternate' type='text/html' href='http://codingweasel.blogspot.com/2006/12/welcome.html' title='welcome'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=37846517&amp;postID=116498231659662889' title='0 Comments'/><link rel='replies' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/116498231659662889/comments/default' title='Post Comments'/><link rel='self' type='application/atom+xml' href='http://codingweasel.blogspot.com/feeds/posts/default/116498231659662889'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/37846517/posts/default/116498231659662889'/><author><name>anthony</name><email>noreply@blogger.com</email></author></entry></feed>